<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINBESSPRM05">

    <!--取得柜台仓库List--> 
    <select id="getCounterInfoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
				A.BIN_CounterInfoID AS counterInfoId,
				A.CounterCode AS counterCode,
				A.CounterNameIF AS counterName,
				A.BIN_OrganizationID AS organizationId,
				B.BIN_InventoryInfoID AS inventoryInfoId,
				B.InventoryCode AS inventoryCode,
				B.InventoryNameCN AS inventoryName,
				E.BIN_LogicInventoryInfoID AS logicInventoryInfoId,
				E.LogicInventoryCode AS logicInventoryCode,
				E.InventoryNameCN AS logicInventoryName,
				F.BrandCode AS brandCode
            FROM
                Basis.BIN_CounterInfo A
				LEFT JOIN Basis.BIN_InventoryInfo B
                ON A.BIN_OrganizationID=B.BIN_OrganizationID
				LEFT JOIN Basis.BIN_BrandInfo F
				ON A.BIN_BrandInfoID=F.BIN_BrandInfoID,
                (SELECT 
                    DISTINCT BIN_InventoryInfoID,
                    BIN_LogicInventoryInfoID
                FROM Inventory.BIN_PromotionStock C 
                WHERE
                     C.ValidFlag='1')D
				LEFT JOIN Basis.BIN_LogicInventory E
                ON D.BIN_LogicInventoryInfoID = E.BIN_LogicInventoryInfoID
            WHERE
                A.BIN_OrganizationInfoID = #organizationInfoId#
                AND A.BIN_BrandInfoID = #brandInfoId#
				AND B.BIN_InventoryInfoID = D.BIN_InventoryInfoID
        ]]>
		<dynamic>
            <isNotEmpty prepend="AND" property="counterInfoId">
                <![CDATA[A.BIN_CounterInfoID=#counterInfoId#]]>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="inventoryInfoId">
                <![CDATA[B.BIN_InventoryInfoID=#inventoryInfoId#]]>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="logicInventoryInfoId">
                <![CDATA[E.BIN_LogicInventoryInfoID=#logicInventoryInfoId#]]>
            </isNotEmpty>
		</dynamic>
    </select>
	
	<!--查询柜台的促销产品--> 
    <select id="getPromotionProductList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
            SELECT
                A.BIN_PromotionProductVendorID AS promotionProductVendorId,
                D.Quantity AS quantity,
                A.BarCode AS barCode,
                E.UnitCode AS unitCode,
                ISNULL(B.SalePrice,ISNULL(C.SalePrice,0)) AS salePrice,
				E.NameTotal as promotionName,
				D.BIN_InventoryInfoID AS inventoryInfoId,
				D.BIN_LogicInventoryInfoID AS logicInventoryInfoId,
				D.BIN_PromotionStockID AS promotionStockId
            FROM
                Basis.BIN_PromotionProductVendor A
				LEFT JOIN Basis.BIN_PrmPriceDepart B
                ON A.BIN_PromotionProductID = B.BIN_PromotionProductID
                    AND  B.ValidFlag = '1'
                    AND B.BIN_OrganizationID = #organizationId#
                    AND GETDATE() BETWEEN B.StartDate AND B.EndDate
                LEFT JOIN Basis.BIN_PromotionPrice C
				ON A.BIN_PromotionProductID = C.BIN_PromotionProductID
                    AND C.ValidFlag = '1'
					AND GETDATE() BETWEEN C.StartDate AND C.EndDate
				LEFT JOIN Inventory.BIN_PromotionStock D
				ON A.BIN_PromotionProductVendorID=D.BIN_PromotionProductVendorID
					AND D.BIN_InventoryInfoID = #inventoryInfoId#
		]]>
		<dynamic>
            <isNotEmpty prepend="AND" property="logicInventoryInfoId">
                <![CDATA[D.BIN_LogicInventoryInfoID =#logicInventoryInfoId#]]>
            </isNotEmpty>
        </dynamic>
		<![CDATA[
                ,Basis.BIN_PromotionProduct E
			WHERE
                A.BIN_PromotionProductID =E.BIN_PromotionProductID
                AND A.ValidFlag='1'
				AND D.Quantity IS NOT NULL
				AND E.ValidFlag='1'
				AND E.BIN_OrganizationInfoID = #organizationInfoId#
				AND E.BIN_BrandInfoID = #brandInfoId#
        ]]>
    </select>
	
	<!--以增量的方式修改促销产品库存表 -->
    <update id="updatePromotionStockByIncrement" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE
                Inventory.BIN_PromotionStock
            SET     
                Quantity = ISNULL(Quantity,0) + #gainQuantity#,
        ]]>
        <include refid="BINBECMINC99.updateSql" />
        <![CDATA[
            WHERE
                BIN_PromotionProductVendorID = #promotionProductVendorId#
                AND BIN_InventoryInfoID = #inventoryInfoId#
		]]>
		<dynamic>
            <isNotEmpty prepend="AND" property="logicInventoryInfoId">
				<![CDATA[BIN_LogicInventoryInfoID = #logicInventoryInfoId#]]>
			</isNotEmpty>
        </dynamic>
    </update>
	
    <!--插入【促销产品库存表】-->
    <insert id="insertPromotionStock" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO Inventory.BIN_PromotionStock(       
                BIN_PromotionProductVendorID,
                BIN_InventoryInfoID,
                Quantity,
        ]]>
        <dynamic>
            <isNotEmpty property="logicInventoryInfoId">
                <![CDATA[BIN_LogicInventoryInfoID,]]>
            </isNotEmpty>
            <isNotEmpty property="storageLocationInfoId">
                <![CDATA[BIN_StorageLocationInfoID,]]>
            </isNotEmpty>
            <isNotEmpty property="productVendorPackageId">
                <![CDATA[BIN_ProductVendorPackageID,]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                ValidFlag,
                CreateTime,
                CreatedBy,
                CreatePGM,
                UpdateTime,
                UpdatedBy,
                UpdatePGM,
                ModifyCount
            )VALUES(   
                #promotionProductVendorId#,
                #inventoryInfoId#,
                #gainQuantity#,
        ]]>
        <dynamic>
            <isNotEmpty property="logicInventoryInfoId">
                <![CDATA[#logicInventoryInfoId#,]]>
            </isNotEmpty>
            <isNotEmpty property="storageLocationInfoId">
                <![CDATA[#storageLocationInfoId#,]]>
            </isNotEmpty>
            <isNotEmpty property="productVendorPackageId">
                <![CDATA[#productVendorPackageId#,]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                '1',
                GETDATE(),
                #createdBy#,
                #createPGM#,
                GETDATE(),
                #updatedBy#,
                #updatePGM#,
                '0'
            )
        ]]>
    </insert>
	
	<!--插入【库存操作流水表】,返回ID-->
	<sql id="insertPromotionInventoryLogSQL">
        <![CDATA[
            INSERT INTO Inventory.BIN_PromotionInventoryLog(
                BIN_OrganizationID,
                BIN_EmployeeID,
                TotalQuantity,
                TotalAmount,
                VerifiedFlag,
                TradeType,
                DeliverDate,
                DataChannel,
                BIN_LogisticInfoID,
                Reason,
        ]]>
        <include refid="BINBECMINC99.insertKeySql" />
        <![CDATA[
            )VALUES(
                #organizationId#,
                #employeeId#,
                #totalQuantity#,
                #totalAmount#,
                #verifiedFlag#,
                #tradeType#,
                #deliverDate#,
                #dataChanncel#,
                #logisticInfoId#,
                #reason#,
        ]]>
        <include refid="BINBECMINC99.insertValueSql" />
        <![CDATA[)]]>
	</sql>
	<insert id="insertPromotionInventoryLog" parameterClass="java.util.HashMap">
		<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_PromotionInventoryLogID" >
			<include refid="BINBESSPRM05.insertPromotionInventoryLogSQL" />
            <![CDATA[SELECT SCOPE_IDENTITY() AS value]]>
        </selectKey>
	</insert>
	
	<!--插入【促销产品盘点业务单据表】-->
	<sql id="insertPromotionStockTakingSQL">
        <![CDATA[
            INSERT INTO Inventory.BIN_PromotionStockTaking(
                BIN_PromotionInventoryLogID,
                BIN_OrganizationInfoID,
                BIN_BrandInfoID,
                StockTakingNo,
                StockTakingNoIF,
                BIN_OrganizationID,
                BIN_EmployeeID,
                TotalQuantity,
                TotalAmount,
                VerifiedFlag,
                TradeType,
                Type,
                RelevanceNo,
                Reason,
                StockTakingDate,
        ]]>
        <include refid="BINBECMINC99.insertKeySql" />
        <![CDATA[
            )VALUES(
                #promotionInventoryLogId#,
                #organizationInfoId#,
                #brandInfoId#,
                #stockTakingNo#,
                #stockTakingNoIF#,
                #organizationId#,
                #employeeId#,
                #totalQuantity#,
                #totalAmount#,
                #verifiedFlag#,
                #tradeType#,
                #type#,
                #relevanceNo#,
                #reason#,
                #stockTakingDate#,
        ]]>
        <include refid="BINBECMINC99.insertValueSql" />
        <![CDATA[)]]>
	</sql>
	<insert id="insertPromotionStockTaking" parameterClass="java.util.HashMap">
		<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_PromotionStockTakingID" >
			<include refid="BINBESSPRM05.insertPromotionStockTakingSQL" />
            <![CDATA[SELECT SCOPE_IDENTITY() AS value]]>
        </selectKey>
	</insert>
	
    <!--插入【促销产品盘点业务单据明细表】-->
    <insert id="insertPromotionTakingDetail" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO Inventory.BIN_PromotionTakingDetail(
				BIN_PromotionStockTakingID,
				BIN_PromotionProductVendorID,
				DetailNo,
				Quantity,
				Price,
				BIN_ProductVendorPackageID,
				GainQuantity,
				BIN_InventoryInfoID,
				BIN_LogicInventoryInfoID,
				BIN_StorageLocationInfoID,
				Reason,
				HandleType,
		]]>
		<include refid="BINBECMINC99.insertKeySql" />
        <![CDATA[
            )VALUES(
				#promotionStockTakingId#,
				#promotionProductVendorId#,
				#detailNo#,
				#quantity#,
				#price#,
				#productVendorPackageId#,
				#gainQuantity#,
				#inventoryInfoId#,
				#logicInventoryInfoId#,
				#storageLocationInfoId#,
				#reason#,
				#handleType#,
		]]>
		<include refid="BINBECMINC99.insertValueSql" />
        <![CDATA[)]]>
	</insert>

    <!-- 取得指定ID的盘点单据及其详细信息 -->
    <select id="getStockTakingInfoByID" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT  
                A.StockTakingNo AS stockTakingNo,
                A.StockTakingNoIF AS stockTakingNoIF,
                A.BIN_OrganizationID AS organizationId,
                A.BIN_EmployeeID AS employeeId,
                A.TotalQuantity AS totalQuantity,
                A.TotalAmount AS totalAmount,
	            A.VerifiedFlag AS verifiedFlag,
	            A.TradeType AS tradeType,
	            A.Type AS type,
	            A.RelevanceNo AS relevanceNo,
	            A.Reason as reasonAll,
	            B.BIN_PromotionProductVendorID AS promotionProductVendorId,
	            B.DetailNo AS detailNo,
	            B.Quantity AS quantity,
	            B.Price AS price,
	            B.BIN_ProductVendorPackageID AS productVendorPackageId,
	            B.GainQuantity AS gainQuantity,
	            B.BIN_InventoryInfoID AS inventoryInfoId,
	            B.BIN_LogicInventoryInfoID AS logicInventoryInfoId,
	            B.BIN_StorageLocationInfoID AS storageLocationInfoId,
	            B.Reason AS reason,
	            B.HandleType AS handleType
            FROM 
	            Inventory.BIN_PromotionStockTaking A,
	            Inventory.BIN_PromotionTakingDetail B
            WHERE 
                A.BIN_PromotionStockTakingID = #promotionStockTakingId#
	            AND A.BIN_PromotionStockTakingID = B.BIN_PromotionStockTakingID
	            AND A.ValidFlag ='1'
	            AND B.ValidFlag ='1'
            ORDER BY B.DetailNo ASC
        ]]>
    </select> 

    <!--插入【促销产品入出库表】-->
	<sql id="insertPromotionStockInOutSQL">
        <![CDATA[
            INSERT INTO Inventory.BIN_PromotionStockInOut(
                BIN_OrganizationInfoID,
                BIN_BrandInfoID,
                TradeNo,
                TradeNoIF,
                BIN_OrganizationID,
                BIN_EmployeeID,
                TotalQuantity,
                TotalAmount,
                StockType,
                TradeType,
                RelevantNo,
                BIN_LogisticInfoID,
                Reason,
                StockInOutDate,
                VerifiedFlag,
                TotalAmountBefore,
                TotalAmountAfter,
        ]]>
        <include refid="BINBECMINC99.insertKeySql" />
        <![CDATA[
            )VALUES(
                #organizationInfoId#,
                #brandInfoId#,
                #tradeNo#,
                #tradeNoIF#,
                #organizationId#,
                #employeeId#,
                #totalQuantity#,
                #totalAmount#,
                #stockType#,
                #tradeType#,
                #relevantNo#,
                #logisticInfoId#,
                #reason#,
                #stockInOutDate#,
                #verifiedFlag#,
                #totalAmountBefore#,
                #totalAmountAfter#,
        ]]>
        <include refid="BINBECMINC99.insertValueSql" />
        <![CDATA[)]]>
	</sql>
    <insert id="insertPromotionStockInOut" parameterClass="java.util.HashMap">
		<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_PromotionStockInOutID" >
			<include refid="BINBESSPRM05.insertPromotionStockInOutSQL" />
            <![CDATA[SELECT SCOPE_IDENTITY() AS value]]>
        </selectKey>
	</insert>
	
    <!--插入【促销产品入出库明细表】-->
    <insert id="insertPromotionStockDetail" parameterClass="java.util.HashMap">
    	<![CDATA[
            INSERT INTO Inventory.BIN_PromotionStockDetail(
				BIN_PromotionStockInOutID,
				BIN_PromotionProductVendorID,
				DetailNo,
				Quantity,
				Price,
				BIN_ProductVendorPackageID,
				StockType,
				BIN_InventoryInfoID,
				BIN_LogicInventoryInfoID,
				BIN_StorageLocationInfoID,
				Reason,
		]]>
		<include refid="BINBECMINC99.insertKeySql" />
		<![CDATA[
            )VALUES(
				#promotionStockInOutId#,
				#promotionProductVendorId#,
				#detailNo#,
				#quantity#,
				#price#,
				#productVendorPackageId#,
				#stockType#,
				#inventoryInfoId#,
				#logicInventoryInfoId#,
				#storageLocationInfoId#,
				#reason#,
		]]>
		<include refid="BINBECMINC99.insertValueSql" />
        <![CDATA[)]]>
	</insert>

	<!--查询老后台促销产品库存-->
	<select id="getOldStockList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
                A.Unitcode AS unitCode,
				A.Barcode AS barCode,
				A.quantity AS quantity,
				B.PromotionPrtCode AS productName
            FROM
                dbo.WITPOSB_stock A
				JOIN dbo.PromotionTable B
				ON (A.unitcode = B.PromotionPrtUnitcode AND A.barcode = B.PromotionPrtBarcode)
            WHERE
                A.counter_code = #counterCode#
				AND A.inventory_type_code = #logicInventoryCode#
		]]>
	</select>
	
    <!--取得老后台柜台List-->
    <select id="getOldCounterInfoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
                DISTINCT A.counter_code AS counterCode,
                A.inventory_type_code AS logicInventoryCode
            FROM
                dbo.WITPOSB_stock A
                JOIN dbo.PromotionTable B
                ON (A.unitcode = B.PromotionPrtUnitcode AND A.barcode = B.PromotionPrtBarcode)
            WHERE
                A.inventory_type_code != '' AND A.inventory_type_code IS NOT NULL
        ]]>
        <isNotEmpty property="counterCode">
            AND A.counter_code = #counterCode#
        </isNotEmpty>
    </select>
	
    <!--取得新后台柜台的实体仓库InfoList-->
    <select id="getNewCounterDepotInfoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
                A.BIN_DepotInfoID,
                B.BIN_CounterInfoID,
                B.BIN_OrganizationID,
                A.DepotCode,
                A.DepotNameCN,
                A.DepotNameEN,
                B.CounterCode,
                B.CounterNameIF
            FROM
                Basis.BIN_DepotInfo A
            JOIN Basis.BIN_CounterInfo B
            ON A.BIN_OrganizationID = B.BIN_OrganizationID
            WHERE
                A.BIN_OrganizationInfoID = #organizationInfoId#
                AND B.BIN_OrganizationInfoID = #organizationInfoId#
                AND B.BIN_BrandInfoID = #brandInfoId#
                AND B.CounterCode = #counterCode#
        ]]>
    </select>
	
    <!--取得新后台柜台的逻辑仓库InfoList-->
    <select id="getNewCounterLogicInfoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
                A.BIN_LogicInventoryInfoID,
                A.LogicInventoryCode,
                A.InventoryNameCN,
                A.InventoryNameEN
            FROM
                Basis.BIN_LogicInventory A
            WHERE
                A.BIN_OrganizationInfoID = #organizationInfoId#
                AND A.BIN_BrandInfoID = #brandInfoId#
                AND A.Type = '1'
		]]>
        <isNotEmpty prepend="AND" property="logicInventoryCode">
            <![CDATA[
                A.LogicInventoryCode = #logicInventoryCode#
			]]>
		</isNotEmpty>
    </select>
	
    <!--取得品牌InfoList-->
    <select id="getBrandInfoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
                A.BrandCode
            FROM
                Basis.BIN_BrandInfo A
            WHERE
                A.ValidFlag = '1'
                AND BIN_BrandInfoID = #BIN_BrandInfoID#
        ]]>
    </select>
	
    <!--查询柜台的促销品--> 
    <select id="getNewProductList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
                A.BIN_PromotionProductVendorID AS promotionProductVendorId,
                A.BarCode AS barCode,
                E.UnitCode AS unitCode,
                ISNULL(C.SalePrice,0) AS salePrice,
                E.NameTotal as productName
            FROM
                Basis.BIN_PromotionProductVendor A
				LEFT JOIN Basis.BIN_PrmPriceDepart B
				ON A.BIN_PromotionProductID = B.BIN_PromotionProductID
				    AND B.ValidFlag = '1'
					AND B.BIN_OrganizationID = #organizationId#
					AND GETDATE() BETWEEN B.StartDate AND B.EndDate
                LEFT JOIN Basis.BIN_PromotionPrice C
                ON A.BIN_PromotionProductID = C.BIN_PromotionProductID
                    AND C.ValidFlag = '1'
                    AND GETDATE() BETWEEN C.StartDate AND C.EndDate
                ,Basis.BIN_PromotionProduct E
            WHERE
               A.BIN_PromotionProductID =E.BIN_PromotionProductID
                AND A.ValidFlag='1'
                AND E.ValidFlag = '1'
                AND A.BarCode = #barCode#
                AND E.UnitCode = #unitCode#
        ]]>
    </select>
</sqlMap>