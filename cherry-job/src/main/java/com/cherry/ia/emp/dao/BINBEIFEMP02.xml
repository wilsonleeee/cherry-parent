<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINBEIFEMP02">
	
	<!-- 备份员工信息表 -->
	<insert id="backupEmployee" parameterClass="java.util.HashMap">
		<![CDATA[
			INSERT INTO
				Basis.BIN_Employee_Backup
				   (BIN_EmployeeID,
					BIN_OrganizationInfoID,
					BIN_BrandInfoID,
					BIN_OrganizationID,
					BIN_PositionCategoryID,
					NodeID,
					EmployeeCode,
					EmployeeName,
					EmployeeNameForeign,
					IdentityCard,
					Phone,
					MobilePhone,
					Email,
					Academic,
					BirthDay,
					Gender,
					MaritalStatus,
					ValidFlag,
					CreateTime,
					CreatedBy,
					CreatePGM,
					UpdateTime,
					UpdatedBy,
					UpdatePGM,
					ModifyCount
					)
			    SELECT 
					BIN_EmployeeID,
					BIN_OrganizationInfoID,
					BIN_BrandInfoID,
					BIN_OrganizationID,
					BIN_PositionCategoryID,
					NodeID,
					EmployeeCode,
					EmployeeName,
					EmployeeNameForeign,
					IdentityCard,
					Phone,
					MobilePhone,
					Email,
					Academic,
					BirthDay,
					Gender,
					MaritalStatus,
					ValidFlag,
					CreateTime,
					CreatedBy,
					CreatePGM,
					UpdateTime,
					UpdatedBy,
					UpdatePGM,
					ModifyCount
				FROM 
					Basis.BIN_Employee	
				WHERE
					BIN_OrganizationInfoID = #organizationInfoId# AND
					BIN_BrandInfoID = #brandInfoId#
	]]>	
    </insert>	
	
	<!--清理员工备份表-->
	<delete id="clearBackupData" parameterClass="java.util.HashMap">
		<![CDATA[
			DELETE FROM
				Basis.BIN_Employee_Backup
			WHERE 
				BIN_OrganizationInfoID = #organizationInfoId# AND
				BIN_BrandInfoID = #brandInfoId# AND
				Count >= #count#
		]]>
    </delete>
	
	<!--更新备份表世代数 -->
	<update id="updateBackupCount" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE
				Basis.BIN_Employee_Backup
			SET 
				Count = Count+1
			WHERE
				BIN_OrganizationInfoID = #organizationInfoId# AND
				BIN_BrandInfoID = #brandInfoId#	
		]]>
    </update>
	
	<!-- 从接口数据库中查询员工数据-->
	<resultMap id="employeesList" class="java.util.HashMap">
		<result property="employeeCode" column="EmployeeCode"/>
		<result property="employeeName" column="EmployeeName"/>
		<result property="employeeNameForeign" column="EmployeeNameForeign"/>
		<result property="departCode" column="DepartCode"/>
		<result property="positionCode" column="PositionCode"/>
		<result property="positionName" column="PositionName"/>
		<result property="seniorEmployeeCode" column="SeniorEmployeeCode"/>	
		<result property="phone" column="Phone"/>	
		<result property="mobilePhone" column="MobilePhone"/>	
		<result property="email" column="Email"/>	
		<result property="level" column="level"/>		
	</resultMap>
	<select id="getEmployeesList" parameterClass="java.util.HashMap" resultMap="employeesList">	
		<![CDATA[
			WITH EmpTemp(level, EmployeeCode) 
			AS (
				SELECT 
					1,
					C.EmployeeCode 
				FROM 
					dbo.BIN_Employee_SCS C LEFT JOIN dbo.BIN_Employee_SCS D 
					ON (C.SeniorEmployeeCode = D.EmployeeCode AND D.Brand = #brandCode#)
				WHERE
					C.Brand	= #brandCode# AND
					D.EmployeeCode IS NULL
				
				UNION ALL 
				SELECT 
					P.level+1, 
					C.EmployeeCode
				FROM 
					dbo.BIN_Employee_SCS C JOIN EmpTemp P
					ON C.SeniorEmployeeCode = P.EmployeeCode
				WHERE
					C.Brand	= #brandCode#		
			)
		]]>	
			<include refid="BINBECMINC99.pageheader" />		
		<![CDATA[	
			SELECT 
				A.EmployeeCode,
				A.EmployeeName,
				A.EmployeeNameForeign,
				A.DepartCode,
				A.PositionCode,
				A.PositionName,
				A.SeniorEmployeeCode,
				A.Phone,
				A.MobilePhone,
				A.Email,
				P.level
			FROM 
				dbo.BIN_Employee_SCS A JOIN EmpTemp P 
				ON A.EmployeeCode = P.EmployeeCode
			WHERE
				A.Brand	= #brandCode#		
		]]>
			<include refid="BINBECMINC99.pagefooter" />		
    </select>
	
	<!--查询员工信息 -->
	<select id="getEmployeeInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 						
				A.BIN_EmployeeID AS employeeId,
				B.BIN_UserID AS userId,
				B.LonginName AS longinName			
			FROM						
				Basis.BIN_Employee A LEFT JOIN Privilege.BIN_User B		
				ON A.BIN_EmployeeID = B.BIN_EmployeeID		
			WHERE						
				A.BIN_OrganizationInfoID = #organizationInfoId# AND
				A.BIN_BrandInfoID = #brandInfoId# AND
				A.EmployeeCode = #employeeCode#
		]]>
    </select>
	
	<!--更新员工信息表 -->
	<update id="updateEmployee" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE				
				Basis.BIN_Employee			
			SET				
				EmployeeName = #employeeName#,
				EmployeeNameForeign = #employeeNameForeign#,
				BIN_OrganizationID = #organizationId#,
				BIN_PositionCategoryID = #positionCategoryId#,
				NodeID = #nodeId#,
				Phone = #phone#,
				MobilePhone = #mobilePhone#,
				Email = #email#,
				ValidFlag = '1',
		]]>
			<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_EmployeeID = #employeeId#
		]]>
    </update>
    
    <!-- 更新用户信息  -->
	<update id="updateUser" parameterClass="java.util.HashMap">
		<![CDATA[
	    	UPDATE
	        	Privilege.BIN_User
			SET     
		    	LonginPhone = #phone#,
		        LonginEmail = #email#,																
		]]>	
			<include refid="BINBECMINC99.updateSql" />									
		<![CDATA[								
			WHERE		
		    	BIN_UserID = #userId#
		]]> 
	</update>
	
	<!-- 更新用户信息(配置数据库)  -->
	<update id="updateUserConf" parameterClass="java.util.HashMap">
		<![CDATA[
	    	UPDATE
	    		dbo.BIN_LoginConfig
			SET     
		        LonginPhone = #phone#,
		        LonginEmail = #email#,																
		]]>	
			<include refid="BINBECMINC99.updateSql" />									
		<![CDATA[								
			WHERE		
		    	LonginName = #longinName#
		]]>
	</update>
    
    <!--查询员工上级节点 -->
	<select id="getSeniorEmpPath" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		<![CDATA[
			SELECT 						
				Path					
			FROM						
				Basis.BIN_Employee				
			WHERE						
				BIN_OrganizationInfoID = #organizationInfoId# AND
				BIN_BrandInfoID = #brandInfoId# AND
				EmployeeCode = #seniorEmployeeCode#
		]]>
    </select>
    
    <!-- 取得新节点 -->
	<select id="getNewEmpNodeId" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		<![CDATA[
			SELECT 
				CONVERT(hierarchyid,#path#).GetDescendant(max(NodeID), NULL).ToString() AS newNodeId
        	FROM 
        		Basis.BIN_Employee
            WHERE 
            	NodeID.GetAncestor(1)=#path#
		]]>
    </select>	
	
	<!-- 插入员工信息 -->
	<insert id="insertEmployee" parameterClass="java.util.HashMap">
		<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_EmployeeID" >
		<![CDATA[
			INSERT INTO	
				Basis.BIN_Employee
				(
					BIN_OrganizationInfoID,
					BIN_BrandInfoID,
					EmployeeCode,
					EmployeeName,
					EmployeeNameForeign,
					BIN_OrganizationID,
					BIN_PositionCategoryID,
					NodeID,
					Phone,
					MobilePhone,
					Email,
		]]>
			<include refid="BINBECMINC99.insertKeySql" />		
		<![CDATA[
				)VALUES
				(		
					#organizationInfoId#,
					#brandInfoId#,
					#employeeCode#,
					#employeeName#,
					#employeeNameForeign#,
					#organizationId#,
					#positionCategoryId#,
					#nodeId#,
					#phone#,
					#mobilePhone#,
					#email#,
		]]>
			<include refid="BINBECMINC99.insertValueSql" />		
		<![CDATA[
				)
				select SCOPE_IDENTITY() as value
    	]]>
    	</selectKey>   				
    </insert>	

	<!--更新员工入退职信息表 -->
	<update id="updateEmployeeQuit" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE				
				Basis.BIN_EmployeeQuit			
			SET				
				DepartureDate  = NULL,
				ValidFlag = '1',			
		]]>
			<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_EmployeeID = #employeeId#
		]]>
    </update>	
	
	<!-- 插入员工入退职信息表 -->
	<insert id="insertEmployeeQuit" parameterClass="java.util.HashMap">
		<![CDATA[
			INSERT INTO	
				Basis.BIN_EmployeeQuit
				(
					BIN_EmployeeID,
					CommencementDate,
		]]>
			<include refid="BINBECMINC99.insertKeySql" />		
		<![CDATA[
				)VALUES
				(		
					#employeeId#,
					GETDATE(),
		]]>
			<include refid="BINBECMINC99.insertValueSql" />		
		<![CDATA[
				)
    	]]>
    </insert>	
	
	<!-- 查询需要伦理删除的员工数据-->
	<select id="getDelList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
				SELECT 	
					A.BIN_EmployeeID AS employeeId,
					A.EmployeeCode AS employeeCode,
					A.EmployeeName AS employeeName,
					D.BIN_UserID AS userId,
					D.LonginName AS longinName
				FROM	
					Basis.BIN_Employee A LEFT JOIN Privilege.BIN_PositionCategory C
					ON A.BIN_PositionCategoryID = C.BIN_PositionCategoryID LEFT JOIN Privilege.BIN_User D
					ON A.BIN_EmployeeID = D.BIN_EmployeeID,
					Basis.BIN_Employee_Backup B
				WHERE
					A.BIN_OrganizationInfoID = #organizationInfoId# AND 
					A.BIN_BrandInfoID = #brandInfoId# AND
					B.BIN_OrganizationInfoID = #organizationInfoId# AND 
					B.BIN_BrandInfoID = #brandInfoId# AND	
					A.BIN_EmployeeID = B.BIN_EmployeeID AND
					A.ModifyCount = B.ModifyCount AND
					A.UpdateTime = B.UpdateTime AND
					B.Count = 1 AND
					A.ValidFlag='1' AND
					(C.CategoryCode <> '01' OR C.CategoryCode IS NULL)
		]]>
    </select>
	
	<!--删除无效的员工数据 -->
	<update id="delInvalidEmployees" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE	
				Basis.BIN_Employee
			SET	
				ValidFlag = '0',
		]]>
			<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_EmployeeID  = #employeeId# AND
				ValidFlag='1'		
		]]>
    </update>
    
    <!--删除无效的用户数据 -->
	<update id="delInvalidUser" parameterClass="java.util.HashMap">
    	<![CDATA[
			UPDATE 
				Privilege.BIN_User		
			SET				
				ValidFlag = '0',	
		]]>
			<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[					
			WHERE
				BIN_UserID = #userId# AND
				ValidFlag='1'			
		]]>
    </update>
    
    <!--删除无效的用户数据(配置数据库) -->
    <update id="delInvalidUserConf" parameterClass="java.util.HashMap">
    	<![CDATA[
			UPDATE 
				dbo.BIN_LoginConfig
			SET				
				ValidFlag = '0',			
		]]>
			<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[					
			WHERE
				LonginName = #longinName# AND
				ValidFlag='1'			
		]]>
    </update>

	<!--删除无效的员工入退职信息 -->
	<update id="delInvalidEmployeeQuit" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE	
				Basis.BIN_EmployeeQuit
			SET	
				DepartureDate = GETDATE(),
		]]>
			<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_EmployeeID  = #employeeId# AND
				ValidFlag='1'		
		]]>
    </update>
    
    <!-- 查询员工部门信息-->
	<select id="getOrganization" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 	
				BIN_OrganizationID AS organizationId,
				Type AS type
			FROM	
				Basis.BIN_Organization
			WHERE	
				BIN_OrganizationInfoID = #organizationInfoId# AND
				BIN_BrandInfoID = #brandInfoId# AND
				DepartCode = #departCode# AND
				ValidFlag = '1' 
		]]>
    </select>	
	
	<!-- 查询员工岗位类别ID-->
	<select id="getPositionCategoryId" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT 	
				BIN_PositionCategoryID
			FROM	
				Privilege.BIN_PositionCategory
			WHERE	
				BIN_OrganizationInfoID = #organizationInfoId# AND
				BIN_BrandInfoID = #brandInfoId# AND
				CategoryCode = #positionCode# AND
				ValidFlag = '1'
		]]>
    </select>	
    
    <!-- 插入员工管辖部门对应表  -->
	<insert id="insertEmployeeDepart" parameterClass="java.util.HashMap">	
		<![CDATA[
		   INSERT INTO Privilege.BIN_EmployeeDepart (			
				BIN_EmployeeID,		
				BIN_OrganizationID,		
				DepartType,
				ManageType,	
		]]>
		<include refid="BINBECMINC99.insertKeySql" />									
		<![CDATA[								
			)VALUES (
				#employeeId#,		
				#organizationId#,		
				#departType#,
				'2',
		]]>
		<include refid="BINBECMINC99.insertValueSql" />
		<![CDATA[ ) ]]>
	</insert>
	
	<!--更新员工管辖部门对应表 -->
	<update id="updateEmployeeDepart" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE	
				Privilege.BIN_EmployeeDepart
			SET	
				BIN_OrganizationID = #organizationId#,
		]]>
			<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_EmployeeID  = #employeeId# AND
				manageType = '2'		
		]]>
    </update>

	
</sqlMap>
