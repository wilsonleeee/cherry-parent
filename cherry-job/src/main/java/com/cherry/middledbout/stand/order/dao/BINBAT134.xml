<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINBAT134">
    
    <!-- 取得标准发货单接口表SynchFlag字段为null的单据号 -->
    <select id="getBillCodeList" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[  
		SELECT 
		    TOP (#upCount#) T.BillCode 
		FROM 
		  (SELECT DISTINCT BillCode FROM dbo.IF_Delivery WHERE SynchFlag IS NULL AND BrandCode = #brandCode#) T
	 ]]> 
	 <dynamic prepend="WHERE">
	 	<!-- 排除失败的发货单据 -->
		<isNotEmpty property="falidBillCodeList" >
			T.BillCode NOT IN
			<iterate property="falidBillCodeList" open="(" close=")" conjunction=","> 
				#falidBillCodeList[]#
			</iterate>
		</isNotEmpty>		
	 </dynamic>
    </select>

	<!-- 更新标准发货单接口表的synchFlag字段从[synchFlag=1]变为[synchFlag=2 || synchFlag=3] -->
	<update id="updateSynchFlagOneToOther" parameterClass="java.util.HashMap">
		UPDATE
			dbo.IF_Delivery
		SET
			SynchFlag = #synchFlag#,
			<isNotEmpty property="synchMsg">
				SynchMsg = #synchMsg#,
			</isNotEmpty>
			SynchTime=GETDATE()
		WHERE
			BrandCode = #BrandCode# AND
			BillCode=#BillCode#
	</update>

    <!-- 更新标准发货单接口表的synchFlag字段从[synchFlag=null]变为[synchFlag=1] -->
    <update id="updateSynchFlagNullToOne" parameterClass="java.util.HashMap">
	  UPDATE 
		dbo.IF_Delivery
	  SET 
		SynchFlag ='1',
		SynchTime=GETDATE()
	  WHERE
		BrandCode = #brandCode# AND
		SynchFlag IS NULL
    </update>
    <!-- 更新标准发货单接口明细表的SynchMsg字段 -->
	<update id="updateDetailSynchMsg" parameterClass="java.util.HashMap">
		UPDATE
			dbo.IF_DeliveryDetail
		SET
			SynchMsg = #detailSynchMsg#,
			SynchTime=GETDATE()
		WHERE
			BrandCode = #BrandCode#
			AND BillCode = #BillCode#
			AND UnitCode = #UnitCode#
			AND BarCode = #BarCode#
	</update>
    <!-- 取得标准发货单接口表数据 (主数据)-->
    <select id="getExportTransList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			TOP (#batchSize#)
			A.BrandCode,
		    A.BillCode,
		    CONVERT(varchar(100), A.BusinessDate, 23) AS TradeDate,
		    CONVERT(varchar(100), A.BillCreateTime, 108) AS TradeTime,
		    A.BillStatus,
		    A.OutDepartCode,
		    A.InDepartCode,
		    A.TotalQuantity,
		    A.TotalAmount,
		    A.OperatorCode,		    
		    A.RelateBillCode,
		    A.ConsigneeAddress,
		    A.Comment,
		    A.PuttingTime
		FROM 
		  	dbo.IF_Delivery A WITH(NOLOCK)
		where
			A.SynchFlag=#synchFlag# AND
			A.BrandCode=#brandCode#
    </select>
    
    
    <!-- 取得标准发货单接口表数据 (单据明细)-->
    <select id="getExportTransListdeatils" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.BrandCode,
		    A.BillCode,
		    A.IFProductId,		    
		    A.UnitCode,
		    A.BarCode,
		    A.Quantity,
		    A.Price,
		    A.ReferencePrice,
		    A.PuttingTime
		FROM 
		  	dbo.IF_DeliveryDetail A WITH(NOLOCK)		
		where
			A.BillCode=#BillCode# AND
			A.BrandCode=#BrandCode#

    </select>
   
    
    <!-- 取得品牌Code  -->
    <select id="getBrandCode" parameterClass="java.util.HashMap" resultClass="java.lang.String">
       <![CDATA[
			SELECT
				BrandCode AS brandCode
			FROM
				Basis.BIN_BrandInfo
			WHERE
				BIN_BrandInfoID = #brandInfoId#
		]]>	
    </select>
    	<!-- 查询促销产品信息 -->
	<select id ="selPrmProductInfo" parameterClass="java.util.HashMap" resultClass ="java.util.HashMap">
	<![CDATA[
		SELECT
			B.BIN_PromotionProductVendorID AS promotionProductVendorID,
			C.SalePrice AS salePrice,
			C.AllocationPrice AS allocationPrice,
			D.BIN_ProductVendorPackageID AS productVendorPackageID,
			A.UnitCode AS unitCode,
			A.IsStock AS isStock,
			A.PromotionCateCD
		FROM
			Basis.BIN_PromotionProduct A 
			]]> 
			LEFT JOIN (
							SELECT
								pp.BIN_PromotionProductID,
								case when pb.SalePrice IS NULL then pp.SalePrice
								else pb.SalePrice end AS SalePrice,
								case when pb.AllocationPrice IS NULL then pp.SalePrice
								else pb.AllocationPrice end AS AllocationPrice
							FROM
								Basis.BIN_PromotionPrice pp
								LEFT JOIN Basis.BIN_PrmPriceDepart pb
								ON(pp.BIN_PromotionPriceID = pb.BIN_PromotionProductID AND
									pb.BIN_OrganizationID = #organizationID# AND
									<![CDATA[
										pb.StartDate <= CONVERT(date, GETDATE()) AND
									]]>
									pb.endDate > CONVERT(date, GETDATE()) AND
									pb.ValidFlag = '1'
								)
							WHERE
								<![CDATA[
									pp.StartDate <= CONVERT(date, GETDATE()) AND
								]]>
								<![CDATA[
								pp.endDate > CONVERT(date, GETDATE()) AND
								pp.ValidFlag = '1'
   							) C ON (A.BIN_PromotionProductID = C.BIN_PromotionProductID),
			Basis.BIN_PromotionProductVendor B 
			LEFT JOIN Basis.BIN_ProductVendorPackage D ON D.BIN_ProductVendorID = B.BIN_ManufacturerInfoID AND D.ValidFlag = '1' AND D.DefaultFlag = '1'
		WHERE
			A.UnitCode = #unitcode# AND
			A.BIN_PromotionProductID = B.BIN_PromotionProductID AND
			B.BarCode = #barcode# AND 
			A.ValidFlag = '1' AND
			B.ValidFlag = '1'
	]]>
	</select>
		<!-- 查询barcode变更后的促销产品信息-->
	<select id="selPrmProductPrtBarCodeInfo" parameterClass="java.util.HashMap" resultClass ="java.util.HashMap">
	   <![CDATA[
         SELECT
		       A.BarCode as barcode,
               A.UnitCode as unitcode,
			   A.BIN_PromotionProductVendorID as promotionProductVendorID
         FROM 
               Basis.BIN_PromotionPrtBarCode A
         WHERE 
               A.OldBarCode=#barcode# AND 
               A.OldUnitCode=#unitcode# AND 
               A.StartTime<=convert(datetime,#tradeDateTime#,121) AND (
               A.ClosingTime is null or
               A.ClosingTime>=convert(datetime,#tradeDateTime#,121)) AND
			   A.ValidFlag ='1'
		]]>
	</select>
	    <!-- 查询barcode变更后的促销产品信息（按tradeDateTime与StartTime最接近的升序）-->
    <select id="selPrmPrtBarCodeList" parameterClass="java.util.HashMap" resultClass ="java.util.HashMap">
        <![CDATA[
            SELECT
                A.BarCode as barcode,
                A.UnitCode as unitcode,
                A.BIN_PromotionProductVendorID as promotionProductVendorID
            FROM 
                Basis.BIN_PromotionPrtBarCode A
            WHERE 
                A.OldBarCode=#barcode#
                AND A.OldUnitCode=#unitcode#
                AND A.ValidFlag ='1'
                AND DATEDIFF(SECOND, A.StartTime, #tradeDateTime#) >= 0
            ORDER BY
                DATEDIFF(SECOND, A.StartTime, #tradeDateTime#)
        ]]>
    </select>
        <!-- 查询促销产品信息  根据促销产品厂商ID 不区分有效状态 -->
    <select id ="selPrmByPrmVenID" parameterClass="java.util.HashMap" resultClass ="java.util.HashMap">
        <![CDATA[
            SELECT 
                B.BIN_PromotionProductVendorID AS promotionProductVendorID,
                A.UnitCode AS unitCode,
                A.IsStock AS isStock,
                A.PromotionCateCD
            FROM 
                Basis.BIN_PromotionProduct A,
                Basis.BIN_PromotionProductVendor B
            WHERE 
                A.BIN_PromotionProductID = B.BIN_PromotionProductID AND
                B.BIN_PromotionProductVendorID = #promotionProductVendorID#
            ORDER BY  
                B.CreateTime DESC,B.BIN_PromotionProductVendorID DESC
        ]]>
    </select>
    	<!-- 查询产品信息 -->
	<select id="selProductInfo" parameterClass="java.util.HashMap" resultClass ="java.util.HashMap">
		SELECT 
			B.BIN_ProductVendorID AS productVendorID
		FROM
			Basis.BIN_Product A,
			Basis.BIN_ProductVendor B
		WHERE
			A.UnitCode = #UnitCode# AND
			A.BIN_ProductID = B.BIN_ProductID AND
			B.BarCode = #BarCode# AND
			A.BIN_BrandInfoID = #brandInfoId# AND
			A.BIN_OrganizationInfoID = #organizationInfoId#
	</select>
		<!-- 查询barcode变更后的产品信息 -->
	<select id="selPrtBarCode" parameterClass="java.util.HashMap" resultClass ="java.util.HashMap">
		<![CDATA[
         SELECT
		       A.BarCode as barcode,
               A.UnitCode as unitcode,
			   A.BIN_ProductVendorID as productVendorID
         FROM 
               Basis.BIN_PrtBarCode A
         WHERE 
               A.OldBarCode=#BarCode# AND
               A.OldUnitCode=#UnitCode# AND
               A.StartTime<=#tradeDateTime# AND (
               A.ClosingTime is null or
               A.ClosingTime>=#tradeDateTime#) AND
			   A.ValidFlag ='1'
	    ]]>
	</select>
	    <!-- 查询barcode变更后的产品信息（按tradeDateTime与StartTime最接近的升序） -->
    <select id="selPrtBarCodeList" parameterClass="java.util.HashMap" resultClass ="java.util.HashMap">
        <![CDATA[
            SELECT
                A.BarCode as barcode,
                A.UnitCode as unitcode,
                A.BIN_ProductVendorID as productVendorID
            FROM 
                Basis.BIN_PrtBarCode A
            WHERE 
                A.OldBarCode = #BarCode#
                AND A.OldUnitCode = #UnitCode#
                AND A.ValidFlag ='1'
                AND DATEDIFF(SECOND, A.StartTime, #tradeDateTime#) >= 0
            ORDER BY
                DATEDIFF(SECOND, A.StartTime, #tradeDateTime#)
        ]]>
    </select>
    	<!-- 查询柜台部门信息 -->
	<select id ="selCounterDepartmentInfo" parameterClass="java.util.HashMap" resultClass ="java.util.HashMap">
	<![CDATA[
		SELECT		
			ORG.BIN_OrganizationID AS organizationID,
			A.BIN_CounterInfoID AS counterInfoID,
			ORG.DepartName AS counterName,
			A.CounterKind AS counterKind,
			A.PosFlag AS posFlag,
			B.BIN_ChannelID AS channelId,
			B.ChannelName AS channelName
		FROM
			Basis.BIN_Organization ORG WITH(NOLOCK)
			LEFT JOIN Basis.BIN_CounterInfo A
			ON(ORG.BIN_OrganizationID=A.BIN_OrganizationID)
			LEFT JOIN Basis.BIN_Channel B ON A.BIN_ChannelID = B.BIN_ChannelID
		WHERE
			ORG.DepartCode = #counterCode# AND
			ORG.BIN_BrandInfoID = #brandInfoId# AND
			ORG.BIN_OrganizationInfoID = #organizationInfoId#
	]]> 
	</select>
</sqlMap>