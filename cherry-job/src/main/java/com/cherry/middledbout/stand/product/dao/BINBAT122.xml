<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINBAT122">

	<!-- 查询电商接口表配置 -->
	<select id="getStandardProductList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT TOP (#batchSize#)
			BrandCode,
			IFProductId,
			Mode,
			Grade,
			SecQty,
			DisplayQty,
			OriginalBrand,
			UnitCode,
			BarCode,
			ProductNameCN,
			SalePrice,
			CostPrice,
			MemPrice,
			MemPrice2,
			TagPrice,
			DistributionPrice,
			ValidFlag,
			StockFlag,
			isExchanged,
			
			SaleFlag,
			StockTakingFlag,
			OrderFlag,
			ReturnFlag,
			Spec,
			Color,
			
			ClassCode1,
			ClassName1,
			ClassCode2,
			ClassName2,
			ClassCode3,
			ClassName3,
			ClassCode4,
			ClassName4,
			ClassCode5,
			ClassName5,

			PuttingTime,
			SynchFlag,
			SynchMsg,
			SynchTime
			
		FROM
			IF_Product
		WHERE
			BrandCode = #brandCode#
			<isNotEmpty property="TargetDataStartTime" prepend="AND">
				<!-- 通过Job控制表控制程序整体处理数据的数量  -->
				(PuttingTime BETWEEN #TargetDataStartTime# AND #TargetDataEndTime#)
			</isNotEmpty>
		    <isNotEmpty property="bathLastIFProductId" prepend="AND">
		        IFProductId > #bathLastIFProductId#
		    </isNotEmpty>
			ORDER BY PuttingTime,IFProductId
	</select>
	
    <!-- 取得失败的产品信息数据 -->
    <select id="getJobRunFaildHistoryList" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TOP (#batchSize#)
			JFH.UnionIndex
		FROM 
			Tools.BIN_JobRunFaildHistory JFH WITH(NOLOCK)
		WHERE 				
			JFH.BIN_OrganizationInfoID = #organizationInfoId# 
		AND JFH.BIN_BrandInfoID = #brandInfoId# 
		AND JFH.JobCode = #JobCode#
		<isNotEmpty property="bathLastIFProductId" prepend="AND">
	    	JFH.UnionIndex > #bathLastIFProductId#
		</isNotEmpty>
		ORDER BY JFH.UnionIndex
	</select>
	
	
    <!-- 取得失败的产品信息数据 -->
    <select id="getFaildProductList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    
		SELECT
			IP.BrandCode,
			IP.IFProductId,
			IP.Mode,
			IP.Grade,
			IP.SecQty,
			IP.DisplayQty,
			IP.OriginalBrand,
			IP.UnitCode,
			IP.BarCode,
			IP.ProductNameCN,
			IP.SalePrice,
			IP.CostPrice,
			IP.MemPrice,
			IP.MemPrice2,
			IP.TagPrice,
			IP.DistributionPrice,
			IP.ValidFlag,
			IP.StockFlag,
			IP.isExchanged,
			
			IP.SaleFlag,
			IP.StockTakingFlag,
			IP.OrderFlag,
			IP.ReturnFlag,
			IP.Spec,
			IP.Color,
			
			IP.ClassCode1,
			IP.ClassName1,
			IP.ClassCode2,
			IP.ClassName2,
			IP.ClassCode3,
			IP.ClassName3,
			IP.ClassCode4,
			IP.ClassName4,
			IP.ClassCode5,
			IP.ClassName5,

			IP.PuttingTime,
			IP.SynchFlag,
			IP.SynchMsg,
			IP.SynchTime
			
		FROM
			IF_Product IP
		WHERE
			IP.BrandCode = #brandCode#
			<isNotEmpty property="jobRunFaildHistoryList" prepend="AND">
			IFProductId IN
			<iterate property="jobRunFaildHistoryList" open="(" close=")" conjunction=",">
				#jobRunFaildHistoryList[]#
			</iterate>	
			</isNotEmpty>
		ORDER BY PuttingTime,IFProductId
    </select>
	
	<!-- 备注标准产品接口数据到履历表  -->
	<insert id="backupItems" parameterClass="java.util.HashMap">
		INSERT INTO Interfaces.BIN_StandardProductImportHis
			(
				BrandCode,
				IFProductId,
				Mode,
				Grade,
				SecQty,
				DisplayQty,
				OriginalBrand,
				UnitCode,
				BarCode,
				ProductNameCN,
				SalePrice,
				CostPrice,
				MemPrice,
				MemPrice2,
				TagPrice,
				DistributionPrice,
				ValidFlag,
				StockFlag,
				isExchanged,
				
				SaleFlag,
				StockTakingFlag,
				OrderFlag,
				ReturnFlag,
				Spec,
				Color,
				
				ClassCode1,
				ClassName1,
				ClassCode2,
				ClassName2,
				ClassCode3,
				ClassName3,
				ClassCode4,
				ClassName4,
				ClassCode5,
				ClassName5,
	
				PuttingTime,
				SynchFlag,
				SynchMsg,
				SynchTime,
				BackupDate
			)
			VALUES
			(
				#BrandCode#,
				#IFProductId#,
				#Mode#,
				#Grade#,
				#SecQty#,
				#DisplayQty#,
				#OriginalBrand#,
				#UnitCode#,
				#BarCode#,
				#ProductNameCN#,
				#SalePrice#,
				#CostPrice#,
				#MemPrice#,
				#MemPrice2#,
				#TagPrice#,
				#DistributionPrice#,
				#ValidFlag#,
				#StockFlag#,
				#isExchanged#,
				
				#SaleFlag#,
				#StockTakingFlag#,
				#OrderFlag#,
				#ReturnFlag#,
				#Spec#,
				#Color#,
				 
				#ClassCode1#,
				#ClassName1#,
				#ClassCode2#,
				#ClassName2#,
				#ClassCode3#,
				#ClassName3#,
				#ClassCode4#,
				#ClassName4#,
				#ClassCode5#,
				#ClassName5#,
				 
				#PuttingTime#,
				#SynchFlag#,
				#SynchMsg#,
				#SynchTime#,
				GETDATE()
			)
	</insert>
	
   	<!--查询产品信息 -->
	<select id="searchProductId" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT
				BIN_ProductID					
			FROM
				Basis.BIN_Product
			WHERE
				BIN_BrandInfoID = #brandInfoId#
			AND ItemCode = #IFProductId#
		]]>
    </select>

	<!-- 插入产品信息 -->
	<insert id="insertProductInfo" parameterClass="java.util.HashMap">
		<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_ProductID" >
			<![CDATA[
				INSERT INTO	Basis.BIN_Product(
					BIN_OrganizationInfoID,
					BIN_BrandInfoID,
					ItemCode,
					NameTotal,
					UnitCode,

					Status,
					IsStock,
					IsExchanged,
					Mode,
					Grade,
					SecQty,
					DisplayQty,
					
					OriginalBrand,
					OrderPrice,
					
					SaleFlag,
					StockTakingFlag,
					OrderFlag,
					ReturnFlag,
					
					Spec,
					Color,
										
					Version,
			]]>
			<include refid="BINBECMINC99.insertKeySql" />		
			<![CDATA[)VALUES(
					#organizationInfoId#,
					#brandInfoId#,
					#IFProductId#,
					#ProductNameCN#,
					#UnitCode#,
					
					#Status#,
					#StockFlag#,
					#isExchanged#,
					#Mode#,
					#Grade#,
					#SecQty#,
					#DisplayQty#,
					
					#OriginalBrand#,
					#CostPrice#,
					
					#SaleFlag#,
					#StockTakingFlag#,
					#OrderFlag#,
					#ReturnFlag#,
					
					#Spec#,
					#Color#,
					
					#prtTVersion# + 1,
			]]>
			<include refid="BINBECMINC99.insertValueSql" />		
			<![CDATA[)
				select SCOPE_IDENTITY() as value
			]]> 
    	</selectKey> 
	</insert>
	
	<!--更新产品信息表 -->
	<update id="updateProductInfo" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE					
				Basis.BIN_Product				
			SET
				BIN_OrganizationInfoID = #organizationInfoId#,
				BIN_BrandInfoID = #brandInfoId#,
				NameTotal = #ProductNameCN#,
				UnitCode = #UnitCode#,
				
				Status = #Status#,
				IsStock = #StockFlag#,
				IsExchanged = #isExchanged#,
				Mode = #Mode#,
				Grade = #Grade# ,
				SecQty = #SecQty#,
				DisplayQty = #DisplayQty#,
				OriginalBrand = #OriginalBrand#,
				
				Spec = #Spec#,
				Color = #Color#,
				
				OrderPrice =#CostPrice#,
				SaleFlag = #SaleFlag#,
				StockTakingFlag = #StockTakingFlag#,
				OrderFlag = #OrderFlag#,
				ReturnFlag = #ReturnFlag#,
				
				ValidFlag = #ValidFlag#,
				Version = #prtTVersion# + 1,
		]]>
		<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_ProductID = #productId# 
		]]>
    </update>

    
        <!-- 插入产品价格表  -->
	<insert id="insertProductPrice" parameterClass="java.util.HashMap">
        <![CDATA[ 
		INSERT INTO Basis.BIN_ProductPrice(	
			BIN_ProductID,
			SalePrice,
			MemPrice,
			PlatinumPrice,
			TagPrice,
			DistributionPrice,
			StartDate,
			EndDate,	
			Type,				
		]]>	
		<include refid="BINBECMINC99.insertKeySql" />	
		<![CDATA[			
        )VALUES	(
			#productId#,
			Convert(decimal(16,4),#SalePrice#),
			Convert(decimal(16,4),#MemPrice#),
			Convert(decimal(16,4),#MemPrice2#),
			Convert(decimal(16,4),#TagPrice#),
			Convert(decimal(12,2),#DistributionPrice#),
			#startDate#,
			#endDate#,	
			'2',						
       	]]>
	   	<include refid="BINBECMINC99.insertValueSql" />
		<![CDATA[ ) ]]>
    </insert>
    
	<!-- 查询产品价格信息 -->
	<select id="selProductPrice" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[
		SELECT 
			BIN_ProductPriceID
		FROM 
			Basis.BIN_ProductPrice 
		WHERE 
			BIN_ProductID = #productId#
		AND Type = '2'
		AND	SalePrice = #SalePrice#
	]]>
    </select>
    
    <!--更新产品价格数据 -->
	<update id="updProductPrice" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE	
				Basis.BIN_ProductPrice
			SET	
				SalePrice = #SalePrice#,
				MemPrice = #MemPrice#,
				PlatinumPrice = #MemPrice2#,
				TagPrice = #TagPrice#,
				StartDate = #startDate#,
				DistributionPrice = #DistributionPrice#,
		]]>
			<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_ProductID  = #productId#
			AND Type = '2'
		]]>
    </update>
    
	<!-- 插入产品厂商信息 -->
	<insert id="insertProductVendor" parameterClass="java.util.HashMap">
		<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_ProductVendorID" >
		<![CDATA[
			INSERT INTO Basis.BIN_ProductVendor(
				BIN_ProductID,
				BarCode,
		]]>
		<include refid="BINBECMINC99.insertKeySql" />		
		<![CDATA[)VALUES(
				#productId#,
				#BarCode#,
		]]>
		<include refid="BINBECMINC99.insertValueSql" />		
		<![CDATA[)
			SELECT SCOPE_IDENTITY() AS value
		]]>
		</selectKey>
    </insert>
    
    <!-- 查询有效产品厂商条码信息 -->
	<select id="getProductVendorInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT 	
			BIN_ProductVendorID AS proVendorId,
			BarCode AS barCode
		FROM
			Basis.BIN_ProductVendor
		WHERE
			BIN_ProductID = #productId#
		]]>
    </select>
    
   	<!-- 更新产品厂商  -->
	<update id="updPrtVendor" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE
			Basis.BIN_ProductVendor
		SET
		]]>
		<isNotEmpty property="BarCode">
			BarCode = #BarCode#,
		</isNotEmpty>
			ValidFlag = 1,
		<include refid="BINBECMINC99.updateSql" />
		<![CDATA[
		WHERE
			BIN_ProductVendorID = #prtVendorId#
		]]>
	</update>
	
	<!-- 更新产品条码对应关系表  -->
	<update id="updPrtBarCode" parameterClass="java.util.HashMap">
        <![CDATA[ 
		  UPDATE   
		       		Basis.BIN_PrtBarCode						
		  SET				
	          		UnitCode = #UnitCode#,
					BarCode = #BarCode#,
					ValidFlag = '1',
		]]>	
	    	<include refid="BINOLCMINC99.updateSql" />	
		<![CDATA[			
       	  WHERE									
		      BIN_ProductVendorID = #prtVendorId#
		  AND ClosingTime IS NULL
		  AND (OldUnitCode != #UnitCode# OR OldBarCode != #BarCode#)
       ]]>
	        
    </update>
    
	<!--删除无效的产品数据 -->
	<update id="delInvalidProducts" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE	
				Basis.BIN_Product
			SET	
				ValidFlag = '0',
				Version = #prtTVersion# + 1,
		]]>
		<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_ProductID  = #productId# AND
				ValidFlag='1'		
		]]>
    </update>
    
	<!--伦理删除无效的产品厂商数据 -->
	<update id="delInvalidProVendors" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE	
				Basis.BIN_ProductVendor
			SET	
				ValidFlag = '0',
		]]>
		<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_ProductID  = #productId# AND
				ValidFlag='1'		
		]]>
    </update>
    
	<!--更新停用日时 -->
	<update id="updateClosingTime" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE 		
				Basis.BIN_PrtBarCode	
			SET		
				ClosingTime = #closingTime#,
				UpdateFlag = '1',
				ValidFlag = '1',
		]]>
			<include refid="BINOLCMINC99.updateSql" />
		<![CDATA[				
			WHERE					
				BIN_ProductVendorID = #prtVendorId# AND
				ClosingTime IS NULL
		]]>
    </update>
    
   	<!-- 备份Kingdee产品导入数据履历表-->
	<insert id="backProductImpKingdee" parameterClass="java.util.HashMap">
		<![CDATA[		
		INSERT INTO Interfaces.BIN_ProductImportKingdeeBackup(
			FItemID,
			FNumber,
			FBarCode,
			FFullName,
			FName,
			
	        FNumber1,
	        FName1,
	        FNumber2,
	        FName2,
	        FNumber3,
	        FName3,
	        FNumber4,
	        FName4,
	        FNumber5,
	        FName5,

			
			
			FSalePrice,
			FRefCost,
			FModel,
			FDeleteD,
			FSOLowPrc,
			FKFPeriod,
			FTaxRate,
			FModifyTime,
			FIsStopPDAShopManage,
			
			FilterResult,
			BackupDate,
			BusinessDate,
			BackupPGM
		)
		VALUES(
			#FItemID#,
			#FNumber#,
			#FBarCode#,
			#FFullName#,
			#FName#,
			
	        #FNumber1#,
	        #FName1#,
	        #FNumber2#,
	        #FName2#,
	        #FNumber3#,
	        #FName3#,
	        #FNumber4#,
	        #FName4#,
	        #FNumber5#,
	        #FName5#,
			
			
			
			#FSalePrice#,
			#FRefCost#,
			#FModel#,
			#FDeleteD#,
			#FSOLowPrc#,
			#FKFPeriod#,
			#FTaxRate#,
			#FModifyTime#,
			#FIsStopPDAShopManageStr#,
			
			#filterResult#,
			#createTime#,
			#businessDate#,
			#updatePGM#
		)
		
		]]>  
	</insert>







	<!-- ################################################## 更新产品分类 start  ######################################################################## -->

	<!-- 根据分类名查询分类Id -->
	<select id="getCatPropId1" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT
			BIN_PrtCatPropertyID
		FROM
			Basis.BIN_PrtCatProperty
		WHERE
			BIN_BrandInfoID = #brandInfoId#
			AND PropertyNameChinese = #propNameCN#
		]]>
    </select>
	<!-- 根据分类终端显示区分查询分类Id -->
	<select id="getCatPropId2" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT
			BIN_PrtCatPropertyID
		FROM
			Basis.BIN_PrtCatProperty
		WHERE
			BIN_BrandInfoID = #brandInfoId#
			AND TeminalFlag = #teminalFlag#
		]]>
    </select>
	<!-- 根据分类类别属性查询分类Id -->
	<select id="getCatPropId3" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT
			BIN_PrtCatPropertyID
		FROM
			Basis.BIN_PrtCatProperty
		WHERE
			BIN_BrandInfoID = #brandInfoId#
			AND Property = #property#
		]]>
    </select>
    
   	<!-- 添加分类  -->
	<insert id="addCatProperty" parameterClass="java.util.HashMap">
		<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_PrtCatPropertyID" >
			<![CDATA[
			INSERT Basis.BIN_PrtCatProperty(
				BIN_OrganizationInfoID,
				BIN_BrandInfoID,
				PropertyNameChinese,
				PropertyNameForeign,
				ViewSeq,
				TeminalFlag,
				Property,
			]]>
			<include refid="BINBECMINC99.insertKeySql" />
			<![CDATA[)VALUES(
				#organizationInfoId#,
				#brandInfoId#,
				#propNameCN#,
				#propNameEN#,
				IDENT_CURRENT('Basis.BIN_PrtCatProperty'),
				#teminalFlag#,
				#property#,
			]]>
			<include refid="BINBECMINC99.insertValueSql" />
			<![CDATA[ )
				select SCOPE_IDENTITY() as value
			]]>
	    </selectKey>
	</insert>
	
	<!-- 分类终端下发区分更新  -->
	<update id="updProp" parameterClass="java.util.HashMap">
		<![CDATA[
		UPDATE	
			Basis.BIN_PrtCatProperty
		SET
			TeminalFlag = #teminalFlag#,
		]]>
		<include refid="BINOLCMINC99.updateSql" />
		<![CDATA[
		WHERE
			BIN_PrtCatPropertyID = #prtCatPropId#
		]]>
	</update>
	
	<!--删除产品分类属性对应表  -->
	<delete id="delPrtCategory" parameterClass="java.util.HashMap">
		<![CDATA[DELETE FROM Basis.BIN_PrtCategory WHERE BIN_ProductID = #productId#]]>
    </delete>
    
	
	<!-- 根据属性值查询分类属性值ID -->
	<select id="getCatPropValInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT
				BIN_PrtCatPropValueID AS propValId,
				PropValueCherry AS propValueCherry,
				PropValue AS propValue,
				PropValueChinese AS propValueCN
			FROM
				Basis.BIN_PrtCatPropValue
			WHERE
				BIN_PrtCatPropertyID = #prtCatPropId#
		]]>
		<isNotEmpty property="propValueCherry" prepend="AND">
			PropValueCherry = #propValueCherry#
		</isNotEmpty>
		<isNotEmpty property="propValue" prepend="AND">
			PropValue = #propValue#
		</isNotEmpty>
		<isNotEmpty property="propValueCN" prepend="AND">
			PropValueChinese = #propValueCN#
		</isNotEmpty>
    </select>
    
	<!-- 根据属性值查询分类属性值ID -->
	<select id="getCatPropValId1" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT
				BIN_PrtCatPropValueID AS propValId
			FROM
				Basis.BIN_PrtCatPropValue
			WHERE
				BIN_PrtCatPropertyID = #prtCatPropId#
		]]>
		<isNotEmpty property="propValueCherry" prepend="AND">
			PropValueCherry = #propValueCherry#
		</isNotEmpty>
		<isNotEmpty property="propValue" prepend="AND">
			PropValue = #propValue#
		</isNotEmpty>
    </select>
    
	<!-- 根据属性值名称查询分类属性值ID -->
	<select id="getCatPropValId2" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT
				BIN_PrtCatPropValueID AS propValId
			FROM
				Basis.BIN_PrtCatPropValue
			WHERE
				BIN_PrtCatPropertyID = #prtCatPropId#
			AND PropValueChinese = #propValueCN#
		]]>
    </select>
    
   	<!-- 根据属性名查询分类属性值ID -->
	<select id="getCateValId1" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		<![CDATA[
			SELECT
				BIN_PrtCatPropValueID AS propValId
			FROM
				Basis.BIN_PrtCatPropValue
			WHERE
				BIN_PrtCatPropertyID = #prtCatPropId#
		]]>
		<isNotEmpty property="propValueCherry" prepend="AND">
			PropValueCherry = #propValueCherry#
		</isNotEmpty>
		<isNotEmpty property="propValue" prepend="AND">
			PropValue = #propValue#
		</isNotEmpty>
    </select>
    
	<!-- 添加分类属性选项值  -->
	<insert id="addPropVal" parameterClass="java.util.HashMap">
		<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_PrtCatPropValueID" > 
			<![CDATA[
			INSERT Basis.BIN_PrtCatPropValue(
				BIN_PrtCatPropertyID,
				PropValue,
				PropValueCherry,
				PropValueChinese,
				PropValueForeign,
			]]>
			<include refid="BINBECMINC99.insertKeySql" />
			<![CDATA[
			)VALUES(
				#prtCatPropId#,
				#propValue#,
				#propValueCherry#,
				#propValueCN#,
				#propValueEN#,
			]]>
			<include refid="BINBECMINC99.insertValueSql" />
			<![CDATA[ )
				select SCOPE_IDENTITY() as value
			]]> 
	    </selectKey>
	</insert>
	
	<!--更新分类选项值 -->
	<update id="updPropVal" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE	
				Basis.BIN_PrtCatPropValue
			SET	
				PropValueChinese = #propValueCN#,
				PropValueForeign = #propValueEN#,
				ValidFlag = '1',
		]]>
		<include refid="BINBECMINC99.updateSql" />		
		<![CDATA[				
			WHERE					
				BIN_PrtCatPropValueID = #catPropValId#
		]]>
    </update>
    
	<!-- 插入产品分类对应表  -->
	<insert id="insertPrtCategory" parameterClass="java.util.HashMap">
        <![CDATA[ 
		INSERT INTO Basis.BIN_PrtCategory(	
			BIN_ProductID,
			BIN_PrtCatPropValueID,
		]]>	
	    <include refid="BINBECMINC99.insertKeySql" />	
		<![CDATA[			
        )VALUES(
			#productId#,
			#catPropValId#,							
       	]]>
	   	<include refid="BINBECMINC99.insertValueSql" />
		<![CDATA[ ) ]]>
    </insert>

	<!-- ################################################## 更新产品分类 start  ######################################################################## -->




   	
</sqlMap>
