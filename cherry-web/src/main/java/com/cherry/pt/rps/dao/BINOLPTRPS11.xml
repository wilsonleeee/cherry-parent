<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINOLPTRPS11">
	<!-- 链接产品分类用于查询分类信息相对应的产品ID -->
	<sql id="getProductIdSql">
	  <isNotEmpty property="bigCateInfo">
		<![CDATA[
   			JOIN(
					SELECT DISTINCT PC.BIN_ProductID
					FROM Basis.BIN_Product P WITH (NOLOCK)
					JOIN Basis.BIN_PrtCategory PC WITH (NOLOCK)
						ON PC.BIN_ProductID = P.BIN_ProductID
					JOIN Basis.BIN_PrtCatPropValue PCPV WITH (NOLOCK)
						ON PCPV.BIN_PrtCatPropValueID = PC.BIN_PrtCatPropValueID
					JOIN Basis.BIN_PrtCatProperty PCP WITH (NOLOCK)
						ON PCP.BIN_PrtCatPropertyID = PCPV.BIN_PrtCatPropertyID
					JOIN (
							  select S.prtCatPropValueID  from
							  (select convert( xml,'<root><v>' +replace( #bigCateInfo# ,',' ,'</v><v>')+ '</v></root>') AS prtCateID ) Resolve
								outer apply
							  (select prtCatPropValueID=Q.v.value('.' ,'nvarchar(100)') from resolve.prtCateID.nodes('/root/v')Q (v)) S 
						 )
						   PRT ON PRT.prtCatPropValueID = PC.BIN_PrtCatPropValueID
					WHERE P.BIN_OrganizationInfoID = #organizationInfoId# 
					AND P.BIN_BrandInfoID = #brandInfoId#
					AND P.ValidFlag = 1
					AND PCP.TeminalFlag = '1'
			 	 ) AS R ON R.BIN_ProductID=D.BIN_ProductID
		 	 ]]>
		</isNotEmpty>
		<isNotEmpty property="mediumCateInfo">
		<![CDATA[
		 	JOIN(
					SELECT DISTINCT PC.BIN_ProductID
					FROM Basis.BIN_Product P WITH (NOLOCK)
					JOIN Basis.BIN_PrtCategory PC WITH (NOLOCK)
						ON PC.BIN_ProductID = P.BIN_ProductID
					JOIN Basis.BIN_PrtCatPropValue PCPV WITH (NOLOCK)
						ON PCPV.BIN_PrtCatPropValueID = PC.BIN_PrtCatPropValueID
					JOIN Basis.BIN_PrtCatProperty PCP WITH (NOLOCK)
						ON PCP.BIN_PrtCatPropertyID = PCPV.BIN_PrtCatPropertyID
					JOIN (
						  	  select S.prtCatPropValueID from
							  (select convert( xml,'<root><v>' +replace( #mediumCateInfo# ,',' ,'</v><v>')+ '</v></root>') AS prtCateID ) Resolve
								outer apply
							  (select prtCatPropValueID=Q.v.value('.' ,'nvarchar(100)') from resolve.prtCateID.nodes('/root/v')Q (v)) S
						)
						  PRT ON PRT.prtCatPropValueID = PC.BIN_PrtCatPropValueID
					WHERE P.BIN_OrganizationInfoID = #organizationInfoId# 
					AND P.BIN_BrandInfoID = #brandInfoId#
					AND P.ValidFlag = 1
					AND PCP.TeminalFlag = '3'
				) AS Q ON Q.BIN_ProductID=D.BIN_ProductID
			]]>
		</isNotEmpty>
		<isNotEmpty property="samllCateInfo">
		<![CDATA[
			JOIN(
					SELECT	DISTINCT PC.BIN_ProductID
					FROM Basis.BIN_Product P WITH (NOLOCK)
					JOIN Basis.BIN_PrtCategory PC WITH (NOLOCK)
						ON PC.BIN_ProductID = P.BIN_ProductID
					JOIN Basis.BIN_PrtCatPropValue PCPV WITH (NOLOCK)
						ON PCPV.BIN_PrtCatPropValueID = PC.BIN_PrtCatPropValueID
					JOIN Basis.BIN_PrtCatProperty PCP WITH (NOLOCK)
						ON PCP.BIN_PrtCatPropertyID = PCPV.BIN_PrtCatPropertyID
					JOIN (
							  select S.prtCatPropValueID  from
							  (select convert( xml,'<root><v>' +replace( #samllCateInfo# ,',' ,'</v><v>')+ '</v></root>') AS prtCateID ) Resolve
								outer apply
							  (select prtCatPropValueID=Q.v.value('.' ,'nvarchar(100)') from resolve.prtCateID.nodes('/root/v')Q (v)) S 
						  )
						    PRT ON PRT.prtCatPropValueID = PC.BIN_PrtCatPropValueID
					WHERE P.BIN_OrganizationInfoID = #organizationInfoId#
					AND P.BIN_BrandInfoID = #brandInfoId#
					AND P.ValidFlag = 1
					AND PCP.TeminalFlag = '2'
				) AS W ON W.BIN_ProductID=D.BIN_ProductID
   			]]>
   		</isNotEmpty>
	</sql>

	<!-- 月度库存历史记录查询sql文  -->
	<sql id="ProStockHistorySQL">
		<![CDATA[
		SELECT
			H.BIN_InventoryInfoID,
			H.BIN_ProductVendorID,
			ISNULL(H.Quantity,0) AS hQuantity,
			0 AS inQuantity,
			0 AS outQuantity,
			0 AS hDinQuantity,
			0 AS hDoutQuantity,
			0 AS hinQuantity,
			0 AS houtQuantity
		FROM
			Inventory.BIN_ProStockHistory H
			JOIN T99 ON(H.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
		WHERE
			H.CutOfDate = CONVERT(date,#cutOfDate#)
			AND H.ValidFlag = '1'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			H.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			H.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			H.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>
	<!-- 月度库存历史到集结日点延迟上传数据（入库）  -->
	<sql id="ProStockHistoryDelayInSQL">
		<![CDATA[
		SELECT
			A1.BIN_InventoryInfoID,
			A1.BIN_ProductVendorID,
			0 AS hQuantity,
			0 AS inQuantity,
			0 AS outQuantity,
			ISNULL(A1.Quantity,0) AS hDinQuantity,
			0 AS hDoutQuantity,
			0 AS hinQuantity,
			0 AS houtQuantity
		FROM				
			Inventory.BIN_ProductInOut H WITH(NOLOCK)
			JOIN Inventory.BIN_ProductInOutDetail A1 WITH(NOLOCK)
			ON(H.BIN_ProductInOutID = A1.BIN_ProductInOutID
				AND A1.StockType = '0'
				AND A1.ValidFlag = '1')
			JOIN T99 ON(A1.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
		WHERE
			H.StockInOutDate <= CONVERT(date,#cutOfDate#)
			AND H.ValidFlag = '1'
			AND H.CloseFlag = '0'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			A1.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			A1.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			A1.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>	
	<!-- 月度库存历史到集结日点延迟上传数据（出库）  -->
	<sql id="ProStockHistoryDelayOutSQL">
		<![CDATA[
		SELECT
			A1.BIN_InventoryInfoID,
			A1.BIN_ProductVendorID,
			0 AS hQuantity,
			0 AS inQuantity,
			0 AS outQuantity,
			0 AS hDinQuantity,
			ISNULL(A1.Quantity,0) AS hDoutQuantity,
			0 AS hinQuantity,
			0 AS houtQuantity
		FROM				
			Inventory.BIN_ProductInOut H WITH(NOLOCK)
			JOIN Inventory.BIN_ProductInOutDetail A1 WITH(NOLOCK)
			ON(H.BIN_ProductInOutID = A1.BIN_ProductInOutID
				AND A1.StockType = '1'
				AND A1.ValidFlag = '1')
			JOIN T99 ON(A1.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
		WHERE
			H.StockInOutDate <= CONVERT(date,#cutOfDate#)
			AND H.ValidFlag = '1'
			AND H.CloseFlag = '0'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			A1.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			A1.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			A1.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>	
	<!-- 月度库存历史到集结日时间段的收入变化统计sql文  -->
	<sql id="ProStockHistoryInSQL">
		<![CDATA[
		SELECT
			A1.BIN_InventoryInfoID,
			A1.BIN_ProductVendorID,
			0 AS hQuantity,
			0 AS inQuantity,
			0 AS outQuantity,
			0 AS hDinQuantity,
			0 AS hDoutQuantity,
			ISNULL(A1.Quantity,0) AS hinQuantity,
			0 AS houtQuantity
		FROM				
			Inventory.BIN_ProductInOut H WITH(NOLOCK)
			JOIN Inventory.BIN_ProductInOutDetail A1 WITH(NOLOCK)
			ON(H.BIN_ProductInOutID = A1.BIN_ProductInOutID
				AND A1.StockType = '0'
				AND A1.ValidFlag = '1')
			JOIN T99
			ON(A1.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
		WHERE
			H.StockInOutDate > CONVERT(date,#date1#)
			AND H.StockInOutDate <= CONVERT(date,#date2#)
			AND H.ValidFlag = '1'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			A1.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			A1.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			A1.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>	
	<!-- 月度库存历史到集结日时间段的发出变化统计sql文  -->
	<sql id="ProStockHistoryOutSQL">
		<![CDATA[
		SELECT
			A1.BIN_InventoryInfoID,
			A1.BIN_ProductVendorID,
			0 AS hQuantity,
			0 AS inQuantity,
			0 AS outQuantity,
			0 AS hDinQuantity,
			0 AS hDoutQuantity,
			0 AS hinQuantity,
			ISNULL(A1.Quantity,0) AS houtQuantity
		FROM				
			Inventory.BIN_ProductInOut H WITH(NOLOCK)
			JOIN Inventory.BIN_ProductInOutDetail A1 WITH(NOLOCK)
			ON(H.BIN_ProductInOutID = A1.BIN_ProductInOutID
				AND A1.StockType = '1'
				AND A1.ValidFlag = '1')
			JOIN T99
			ON(A1.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
		WHERE
			H.StockInOutDate > CONVERT(date,#date1#)
			AND H.StockInOutDate <= CONVERT(date,#date2#)
			AND H.ValidFlag = '1'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			A1.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			A1.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			A1.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>	
	<!-- 本期发出变化统计sql文  -->
	<sql id="ProStockOutSQL">
		<![CDATA[
		SELECT		
			A1.BIN_InventoryInfoID,
			A1.BIN_ProductVendorID,
			0 AS hQuantity,
			0 AS inQuantity,
			ISNULL(A1.Quantity,0) AS outQuantity,
			0 AS hDinQuantity,
			0 AS hDoutQuantity,
			0 AS hinQuantity,
			0 AS houtQuantity
		FROM
			Inventory.BIN_ProductInOut H WITH(NOLOCK)
			JOIN Inventory.BIN_ProductInOutDetail A1 WITH(NOLOCK)
			ON(H.BIN_ProductInOutID = A1.BIN_ProductInOutID
				AND A1.StockType = '1'
				AND A1.ValidFlag = '1')
			JOIN T99
			ON(A1.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
		WHERE
			H.StockInOutDate >= CONVERT(date,#startDate#)
			AND H.StockInOutDate <= CONVERT(date,#endDate#)
			AND H.ValidFlag = '1'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			A1.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			A1.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			A1.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>
	<!-- 本期收入变化统计sql文  -->
	<sql id="ProStockInSQL">
		<![CDATA[
		SELECT		
			A1.BIN_InventoryInfoID,
			A1.BIN_ProductVendorID,
			0 AS hQuantity,
			ISNULL(A1.Quantity,0) AS inQuantity,
			0 AS outQuantity,
			0 AS hDinQuantity,
			0 AS hDoutQuantity,
			0 AS hinQuantity,
			0 AS houtQuantity
		FROM
			Inventory.BIN_ProductInOut H WITH(NOLOCK)
			JOIN Inventory.BIN_ProductInOutDetail A1 WITH(NOLOCK)
			ON(H.BIN_ProductInOutID = A1.BIN_ProductInOutID
				AND A1.StockType = '0'
				AND A1.ValidFlag = '1')
			JOIN T99
			ON(A1.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
		WHERE
			H.StockInOutDate >= CONVERT(date,#startDate#)
			AND H.StockInOutDate <= CONVERT(date,#endDate#)
			AND H.ValidFlag = '1'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			A1.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			A1.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			A1.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>	
	<!-- 库存记录查询sql文  -->
	<sql id="ProStockSQL">
		<![CDATA[
        SELECT *,
                        ISNULL(T00.startQuantity * T00.price,0) AS startAmount,
                        ISNULL(T00.endQuantity * T00.price,0) AS endAmount
        FROM (
		SELECT
			E.UnitCode AS unitCode,
			E.OriginalBrand AS originalBrand,
			E.ModuleCode AS moduleCode,
			E.SaleUnit AS saleUnit,
			E.Spec AS spec,
			SUM(CONVERT(BIGINT,T0.inQuantity)) AS inQuantity,
			SUM(CONVERT(BIGINT,T0.outQuantity)) AS outQuantity,
			ISNULL(Convert(decimal(16,2),F.SalePrice),0) AS price,
		]]>
		<dynamic>
			<!-- 按照厂商编码统计  -->
			<isEqual property="type" compareValue="2">
				E.BIN_ProductID AS productId,
			</isEqual>
			<isNotEqual property="type" compareValue="2">
				T0.BIN_ProductVendorID AS prtVendorId,
				D.BarCode AS barCode,
			</isNotEqual>
			<isNotEmpty property="language">
				<isEqual property="language" compareValue="en_US">
					E.NameForeign AS nameTotal,
				</isEqual>
				<isEqual property="language" compareValue="zh_CN">	
					E.NameTotal AS nameTotal,
				</isEqual>								
			</isNotEmpty>
			<isEmpty property="language">
				E.NameTotal AS nameTotal,
			</isEmpty>
		</dynamic>
		<isNotEmpty property="flagB" >
			<![CDATA[		
				SUM(CONVERT(BIGINT,T0.hQuantity) + (CONVERT(BIGINT,T0.hDinQuantity) - CONVERT(BIGINT,T0.hDoutQuantity)) 
				+ (CONVERT(BIGINT,T0.hinQuantity) - CONVERT(BIGINT,T0.houtQuantity)) * #flag#) AS endQuantity,
				SUM(CONVERT(BIGINT,T0.hQuantity) + (CONVERT(BIGINT,T0.hDinQuantity) - CONVERT(BIGINT,T0.hDoutQuantity)) 
				+ (CONVERT(BIGINT,T0.hinQuantity) - CONVERT(BIGINT,T0.houtQuantity)) * #flag# - (CONVERT(BIGINT,T0.inQuantity) - CONVERT(BIGINT,T0.outQuantity))) AS startQuantity
			]]>		
		</isNotEmpty>
		<isEmpty property="flagB" >
			<![CDATA[		
				SUM(CONVERT(BIGINT,T0.hQuantity) + (CONVERT(BIGINT,T0.hDinQuantity) - CONVERT(BIGINT,T0.hDoutQuantity)) 
				+ (CONVERT(BIGINT,T0.hinQuantity) - CONVERT(BIGINT,T0.houtQuantity)) * #flag#) AS startQuantity,
				SUM(CONVERT(BIGINT,T0.hQuantity) + (CONVERT(BIGINT,T0.hDinQuantity) - CONVERT(BIGINT,T0.hDoutQuantity)) 
				+ (CONVERT(BIGINT,T0.hinQuantity) - CONVERT(BIGINT,T0.houtQuantity)) * #flag# + (CONVERT(BIGINT,T0.inQuantity) - CONVERT(BIGINT,T0.outQuantity))) AS endQuantity
			]]>		
		</isEmpty>
		<![CDATA[ FROM( ]]>
			<include refid="BINOLPTRPS11.ProStockHistorySQL" />
			<![CDATA[ UNION ALL ]]>
			<include refid="BINOLPTRPS11.ProStockHistoryDelayInSQL" />
			<![CDATA[ UNION ALL ]]>
			<include refid="BINOLPTRPS11.ProStockHistoryDelayOutSQL" />
			<![CDATA[ UNION ALL ]]>
			<include refid="BINOLPTRPS11.ProStockHistoryInSQL" />
			<![CDATA[ UNION ALL ]]>
			<include refid="BINOLPTRPS11.ProStockHistoryOutSQL" />
			<![CDATA[ UNION ALL ]]>
			<include refid="BINOLPTRPS11.ProStockInSQL" />
			<![CDATA[ UNION ALL ]]>
			<include refid="BINOLPTRPS11.ProStockOutSQL" />
		<![CDATA[ ) T0
				JOIN Basis.BIN_ProductVendor D WITH(NOLOCK)
				ON(T0.BIN_ProductVendorID = D.BIN_ProductVendorID
					AND D.ValidFlag = #validFlag#)
				JOIN Basis.BIN_Product E WITH(NOLOCK)
				ON(D.BIN_ProductID = E.BIN_ProductID AND E.IsStock='1')
				LEFT JOIN Basis.BIN_ProductPrice F WITH(NOLOCK)
                ON (E.BIN_ProductID = F.BIN_ProductID AND F.Type = '2' AND #businessDate# BETWEEN F.StartDate AND F.EndDate AND F.ValidFlag = '1')
		]]>
		<!-- 大中小分类条件 -->
		<include refid="BINOLPTRPS11.getProductIdSql"/>
		<isNotEmpty property="catePropValId" prepend="JOIN">
		<![CDATA[ Basis.BIN_PrtCategory G
		ON(E.BIN_ProductID = G.BIN_ProductID
			AND G.BIN_PrtCatPropValueID = #catePropValId# AND G.ValidFlag='1')
		]]>
		</isNotEmpty>
		<dynamic prepend="WHERE">
			<isNotEmpty property="productId" prepend="AND">
				E.BIN_ProductID = #productId#
			</isNotEmpty>
			<isNotEmpty property="originalBrand" prepend="AND">
				E.OriginalBrand = #originalBrand#
			</isNotEmpty>
		</dynamic>
		<![CDATA[
			GROUP BY
				E.UnitCode,
				E.OriginalBrand,
				E.ModuleCode,
				E.SaleUnit,
			    E.Spec,
				F.SalePrice,
		]]>
		<dynamic>
			<isEqual property="type" compareValue="2">
				E.BIN_ProductID,
			</isEqual>
			<isNotEqual property="type" compareValue="2">
				T0.BIN_ProductVendorID,
				D.BarCode,
			</isNotEqual>
			<isNotEmpty property="language">
				<isEqual property="language" compareValue="en_US">
					E.NameForeign
				</isEqual>
				<isEqual property="language" compareValue="zh_CN">	
					E.NameTotal
				</isEqual>								
			</isNotEmpty>
			<isEmpty property="language">
				E.NameTotal
			</isEmpty>
		</dynamic>					
        <![CDATA[
        )T00
        ]]>
	</sql>
	<!-- 取得库存记录总数  -->
    <select id="getProStockCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    	<include refid="BINOLCMINC99.getInventoryList" />
    	<![CDATA[
			SELECT	COUNT(SORT_T1.unitCode) AS count FROM (
		]]>	
		<include refid="BINOLPTRPS11.ProStockSQL" />
		<![CDATA[
			)SORT_T1
		]]>										
    </select>
    
    <!-- 取得库存记录一览概要LIST -->
    <select id="getProStockSummaryInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
    	<include refid="BINOLCMINC99.getInventoryList" />
		<include refid="BINOLPTRPS11.ProStockSQL" />
		<![CDATA[
			ORDER BY
				nameTotal asc
		]]>
    </select>
    
	<!-- 取得库存记录LIST  -->
	<select id="getProStockList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		<include refid="BINOLCMINC99.getInventoryList" />
		<include refid="BINOLCMINC99.pageheader" />
		<include refid="BINOLPTRPS11.ProStockSQL" />
		<include refid="BINOLCMINC99.pagefooter" />
    </select>
    <!-- 取得汇总信息  -->
    <select id="getSumInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	<include refid="BINOLCMINC99.getInventoryList" />
    	<![CDATA[
			SELECT	
				COUNT(SORT_T1.unitCode) AS count,
				ISNULL(SUM(CONVERT(BIGINT,ISNULL(SORT_T1.startQuantity,0))),0) AS sumStartQuantity,
				ISNULL(SUM(CONVERT(BIGINT,ISNULL(SORT_T1.inQuantity,0))),0) AS sumInQuantity,
				ISNULL(SUM(CONVERT(BIGINT,ISNULL(SORT_T1.outQuantity,0))),0) AS sumOutQuantity,
			 	ISNULL(SUM(CONVERT(BIGINT,ISNULL(SORT_T1.endQuantity,0))),0) AS sumEndQuantity,
			 	ISNULL(SUM(SORT_T1.startAmount),0) AS sumStartAmount,
			 	ISNULL(SUM(SORT_T1.endAmount),0) AS sumEndAmount
			FROM (
		]]>	
		<include refid="BINOLPTRPS11.ProStockSQL" />
		<![CDATA[	
			)SORT_T1
		]]>		
    </select>
</sqlMap>
