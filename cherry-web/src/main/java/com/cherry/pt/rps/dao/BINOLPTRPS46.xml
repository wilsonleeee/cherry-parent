<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINOLPTRPS46">
	<!-- 链接产品分类用于查询分类信息相对应的产品ID -->
	<sql id="getProductIdSql">
	  <isNotEmpty property="bigCateInfo">
		<![CDATA[
   			JOIN(
					SELECT DISTINCT PC.BIN_ProductID
					FROM Basis.BIN_Product P WITH (NOLOCK)
					JOIN Basis.BIN_PrtCategory PC WITH (NOLOCK)
						ON PC.BIN_ProductID = P.BIN_ProductID
					JOIN Basis.BIN_PrtCatPropValue PCPV WITH (NOLOCK)
						ON PCPV.BIN_PrtCatPropValueID = PC.BIN_PrtCatPropValueID
					JOIN Basis.BIN_PrtCatProperty PCP WITH (NOLOCK)
						ON PCP.BIN_PrtCatPropertyID = PCPV.BIN_PrtCatPropertyID
					JOIN (
							  select S.prtCatPropValueID  from
							  (select convert( xml,'<root><v>' +replace( #bigCateInfo# ,',' ,'</v><v>')+ '</v></root>') AS prtCateID ) Resolve
								outer apply
							  (select prtCatPropValueID=Q.v.value('.' ,'nvarchar(100)') from resolve.prtCateID.nodes('/root/v')Q (v)) S 
						 )
						   PRT ON PRT.prtCatPropValueID = PC.BIN_PrtCatPropValueID
					WHERE P.BIN_OrganizationInfoID = #organizationInfoId# 
					AND P.BIN_BrandInfoID = #brandInfoId#
					AND P.ValidFlag = 1
					AND PCP.TeminalFlag = '1'
			 	 ) AS R ON R.BIN_ProductID=D.BIN_ProductID
		 	 ]]>
		</isNotEmpty>
		<isNotEmpty property="mediumCateInfo">
		<![CDATA[
		 	JOIN(
					SELECT DISTINCT PC.BIN_ProductID
					FROM Basis.BIN_Product P WITH (NOLOCK)
					JOIN Basis.BIN_PrtCategory PC WITH (NOLOCK)
						ON PC.BIN_ProductID = P.BIN_ProductID
					JOIN Basis.BIN_PrtCatPropValue PCPV WITH (NOLOCK)
						ON PCPV.BIN_PrtCatPropValueID = PC.BIN_PrtCatPropValueID
					JOIN Basis.BIN_PrtCatProperty PCP WITH (NOLOCK)
						ON PCP.BIN_PrtCatPropertyID = PCPV.BIN_PrtCatPropertyID
					JOIN (
						  	  select S.prtCatPropValueID from
							  (select convert( xml,'<root><v>' +replace( #mediumCateInfo# ,',' ,'</v><v>')+ '</v></root>') AS prtCateID ) Resolve
								outer apply
							  (select prtCatPropValueID=Q.v.value('.' ,'nvarchar(100)') from resolve.prtCateID.nodes('/root/v')Q (v)) S
						)
						  PRT ON PRT.prtCatPropValueID = PC.BIN_PrtCatPropValueID
					WHERE P.BIN_OrganizationInfoID = #organizationInfoId# 
					AND P.BIN_BrandInfoID = #brandInfoId#
					AND P.ValidFlag = 1
					AND PCP.TeminalFlag = '3'
				) AS Q ON Q.BIN_ProductID=D.BIN_ProductID
			]]>
		</isNotEmpty>
		<isNotEmpty property="samllCateInfo">
		<![CDATA[
			JOIN(
					SELECT	DISTINCT PC.BIN_ProductID
					FROM Basis.BIN_Product P WITH (NOLOCK)
					JOIN Basis.BIN_PrtCategory PC WITH (NOLOCK)
						ON PC.BIN_ProductID = P.BIN_ProductID
					JOIN Basis.BIN_PrtCatPropValue PCPV WITH (NOLOCK)
						ON PCPV.BIN_PrtCatPropValueID = PC.BIN_PrtCatPropValueID
					JOIN Basis.BIN_PrtCatProperty PCP WITH (NOLOCK)
						ON PCP.BIN_PrtCatPropertyID = PCPV.BIN_PrtCatPropertyID
					JOIN (
							  select S.prtCatPropValueID  from
							  (select convert( xml,'<root><v>' +replace( #samllCateInfo# ,',' ,'</v><v>')+ '</v></root>') AS prtCateID ) Resolve
								outer apply
							  (select prtCatPropValueID=Q.v.value('.' ,'nvarchar(100)') from resolve.prtCateID.nodes('/root/v')Q (v)) S 
						  )
						    PRT ON PRT.prtCatPropValueID = PC.BIN_PrtCatPropValueID
					WHERE P.BIN_OrganizationInfoID = #organizationInfoId#
					AND P.BIN_BrandInfoID = #brandInfoId#
					AND P.ValidFlag = 1
					AND PCP.TeminalFlag = '2'
				) AS W ON W.BIN_ProductID=D.BIN_ProductID
   			]]>
   		</isNotEmpty>
	</sql>

	<!-- 月度库存历史记录查询sql文  -->
	<sql id="ProStockHistorySQL">
		<![CDATA[
		SELECT
			IVT.BIN_OrganizationID,
			H.BIN_InventoryInfoID,
			H.BIN_LogicInventoryInfoID,
			H.BIN_ProductVendorID,
			ISNULL(H.Quantity,0) AS hQuantity,
			0 AS inQuantity,
			0 as inAmount,
			0 AS outQuantity,
			0 AS outAmount,
			0 AS hDinQuantity,
			0 AS hDoutQuantity,
			0 AS hinQuantity,
			0 AS houtQuantity
		FROM
			Inventory.BIN_ProStockHistory H
			JOIN T99 ON(H.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
			LEFT JOIN Basis.BIN_InventoryInfo IVT WITH(NOLOCK)
			ON(H.BIN_InventoryInfoID=IVT.BIN_InventoryInfoID)
		WHERE
			H.CutOfDate = CONVERT(date,#cutOfDate#)
			AND H.ValidFlag = '1'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			H.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			H.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			H.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>

	<sql id="ProStockInoutSQL">
		<![CDATA[
		SELECT 
			H.BIN_OrganizationID,
		    A1.BIN_InventoryInfoID,
		    A1.BIN_LogicInventoryInfoID,
		    A1.BIN_ProductVendorID,
		    0 AS hQuantity,
			CASE WHEN
				H.TradeType IN('RD','AR','GR','BG','CA') AND A1.StockType = '0'
				and H.StockInOutDate >= CONVERT(date,#startDate#)
		        AND H.StockInOutDate <= CONVERT(date,#endDate#)
		    THEN ISNULL(A1.Quantity,0)
		    WHEN H.TradeType IN('RR','LG','CA') AND A1.StockType = '1'
				and H.StockInOutDate >= CONVERT(date,#startDate#)
		        AND H.StockInOutDate <= CONVERT(date,#endDate#)
		    THEN 0-ISNULL(A1.Quantity,0)
		    ELSE 0 end AS inQuantity,

		    CASE WHEN
				H.TradeType IN('RD','AR','GR','BG','CA') AND A1.StockType = '0'
				and H.StockInOutDate >= CONVERT(date,#startDate#)
		        AND H.StockInOutDate <= CONVERT(date,#endDate#)
		    THEN ISNULL(A1.Quantity,0)*ISNULL(PWAP.AvgPrice, ISNULL(E.StandardCost,0))
		    WHEN H.TradeType IN('RR','LG','CA') AND A1.StockType = '1'
				and H.StockInOutDate >= CONVERT(date,#startDate#)
		        AND H.StockInOutDate <= CONVERT(date,#endDate#)
		    THEN 0-ISNULL(A1.Quantity,0)*ISNULL(PWAP.AvgPrice, ISNULL(E.StandardCost,0))
		    ELSE 0 end AS inAmount,

			CASE WHEN
				H.TradeType IN('NS','PX','SP') AND A1.StockType = '1'
				and H.StockInOutDate >= CONVERT(date,#startDate#)
		        AND H.StockInOutDate <= CONVERT(date,#endDate#)
			THEN ISNULL(A1.Quantity,0)
			WHEN H.TradeType IN('SR','PX','SP') AND A1.StockType = '0'
				and H.StockInOutDate >= CONVERT(date,#startDate#)
		        AND H.StockInOutDate <= CONVERT(date,#endDate#)
		    THEN 0-ISNULL(A1.Quantity,0)
			else 0 end AS outQuantity,

			CASE WHEN
				H.TradeType IN('NS','PX','SP') AND A1.StockType = '1'
				and H.StockInOutDate >= CONVERT(date,#startDate#)
		        AND H.StockInOutDate <= CONVERT(date,#endDate#)
			THEN ISNULL(A1.Quantity,0)*ISNULL(PWAP.AvgPrice, ISNULL(E.StandardCost,0))
			WHEN H.TradeType IN('SR','PX','SP') AND A1.StockType = '0'
				and H.StockInOutDate >= CONVERT(date,#startDate#)
		        AND H.StockInOutDate <= CONVERT(date,#endDate#)
		    THEN 0-ISNULL(A1.Quantity,0)*ISNULL(PWAP.AvgPrice, ISNULL(E.StandardCost,0))
			else 0 end AS outAmount,

		    CASE WHEN A1.StockType = '0' and H.StockInOutDate <= CONVERT(date,#cutOfDate#)
				AND H.ValidFlag = '1' AND H.CloseFlag = '0'
			THEN ISNULL(A1.Quantity,0) else 0 end AS hDinQuantity,

		    CASE WHEN A1.StockType = '1' and H.StockInOutDate <= CONVERT(date,#cutOfDate#)
				AND H.ValidFlag = '1' AND H.CloseFlag = '0'
			THEN ISNULL(A1.Quantity,0) else 0 end AS hDoutQuantity,

			CASE WHEN A1.StockType = '0' and H.StockInOutDate > CONVERT(date,#date1#)
		           AND H.StockInOutDate <= CONVERT(date,#date2#)
			THEN ISNULL(A1.Quantity,0) else 0 end AS hinQuantity,

		    CASE WHEN A1.StockType = '1' and H.StockInOutDate > CONVERT(date,#date1#)
		           AND H.StockInOutDate <= CONVERT(date,#date2#)
			THEN ISNULL(A1.Quantity,0) else 0 end AS houtQuantity 
		FROM 
			Inventory.BIN_ProductInOut H WITH(NOLOCK)
		    JOIN Inventory.BIN_ProductInOutDetail A1 WITH(NOLOCK) 
			ON(H.BIN_ProductInOutID = A1.BIN_ProductInOutID
		       AND A1.ValidFlag = '1')
			JOIN T99 ON(A1.BIN_InventoryInfoID = T99.BIN_InventoryInfoID)
			LEFT JOIN Inventory.BIN_ProductWeightedAvgPrice PWAP WITH(NOLOCK)
			ON(PWAP.Date <=H.StockInOutDate and A1.BIN_InventoryInfoID=PWAP.BIN_InventoryInfoID
                    AND A1.BIN_LogicInventoryInfoID=PWAP.BIN_LogicInventoryInfoID
                    and A1.BIN_ProductVendorID=PWAP.BIN_ProductVendorID
                    and not EXISTS(
						select 1
						from
							Inventory.BIN_ProductWeightedAvgPrice TP
                    	where
                    		PWAP.BIN_ProductVendorID=TP.BIN_ProductVendorID
                    		AND PWAP.BIN_InventoryInfoID=TP.BIN_InventoryInfoID
                    		AND PWAP.BIN_LogicInventoryInfoID=TP.BIN_LogicInventoryInfoID
                    		AND (PWAP.Date<TP.Date or (PWAP.Date=TP.Date and PWAP.UpdateTime<TP.UpdateTime))
					)
			)
			JOIN Basis.BIN_ProductVendor D WITH(NOLOCK)
			ON(A1.BIN_ProductVendorID = D.BIN_ProductVendorID)
			JOIN Basis.BIN_Product E WITH(NOLOCK)
			ON(D.BIN_ProductID = E.BIN_ProductID)
		WHERE 
			H.ValidFlag='1'
		]]>
		<isNotEmpty property="prtVendorId" prepend="AND">
			A1.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty property="depotId" prepend="AND">
			A1.BIN_InventoryInfoID = #depotId#
		</isNotEmpty>
		<isNotEmpty property="lgcInventoryId" prepend="AND">
			A1.BIN_LogicInventoryInfoID = #lgcInventoryId#
		</isNotEmpty>
	</sql>
	
	<!-- 库存记录查询sql文  -->
	<sql id="ProStockCheckoutSQL">
		<![CDATA[
        SELECT 
        	T00.unitCode,
			T00.originalBrand,
			T00.prtVendorId,
			T00.barCode,
			T00.DepartCode AS counterCode,
			T00.DepartName AS counterName,
			T00.BIN_OrganizationID,
			T00.BIN_InventoryInfoID,
			T00.nameTotal,
			sum(isnull(T00.startQuantity,0)) as startQuantity,
			convert(decimal(32,2),sum(isnull(T00.startQuantity,0))*T00.startPrice/1.17) as startAmountNet,
			sum(isnull(T00.inQuantity,0)) as inQuantity,
			convert(decimal(32,2),sum(isnull(T00.inAmount,0))/1.17) as inAmountNet,
			sum(isnull(T00.outQuantity,0)) as outQuantity,
			convert(decimal(32,2),sum(isnull(T00.outAmount,0))/1.17) as outAmountNet,
			sum(isnull(T00.endQuantity,0)) as endQuantity,
			convert(decimal(32,2),sum(isnull(T00.endQuantity,0))*T00.endPrice/1.17) as endAmountNet
        FROM (
		SELECT
			E.UnitCode AS unitCode,
			E.OriginalBrand AS originalBrand,
			SUM(CONVERT(BIGINT,T0.inQuantity)) AS inQuantity,
			SUM(CONVERT(DECIMAL(32,6),T0.inAmount)) as inAmount,
			SUM(CONVERT(BIGINT,T0.outQuantity)) AS outQuantity,
			sum(CONVERT(DECIMAL(32,6),T0.outAmount)) as outAmount,
			case when TT1.avgPrice is null 
				then Convert(decimal(32,6),ISNULL(E.StandardCost,0))
				else Convert(decimal(32,6),TT1.AvgPrice) end as startPrice,
			case when TT2.avgPrice is null 
				then Convert(decimal(32,6),ISNULL(E.StandardCost,0))
				else Convert(decimal(32,6),TT2.AvgPrice) end as endPrice,
			T0.BIN_ProductVendorID AS prtVendorId,
			D.BarCode AS barCode,
			ORG.DepartCode,
			ORG.DepartName,
			T0.BIN_OrganizationID,
			T0.BIN_InventoryInfoID,
			T0.BIN_LogicInventoryInfoID,
		]]>
		<dynamic>
			<isNotEmpty property="language">
				<isEqual property="language" compareValue="en_US">
					E.NameForeign AS nameTotal,
				</isEqual>
				<isEqual property="language" compareValue="zh_CN">	
					E.NameTotal AS nameTotal,
				</isEqual>								
			</isNotEmpty>
			<isEmpty property="language">
				E.NameTotal AS nameTotal,
			</isEmpty>
		</dynamic>
		<isNotEmpty property="flagB" >
			<![CDATA[		
				SUM(CONVERT(BIGINT,T0.hQuantity) + (CONVERT(BIGINT,T0.hDinQuantity) - CONVERT(BIGINT,T0.hDoutQuantity)) 
				+ (CONVERT(BIGINT,T0.hinQuantity) - CONVERT(BIGINT,T0.houtQuantity)) * #flag#) AS endQuantity,
				SUM(CONVERT(BIGINT,T0.hQuantity) + (CONVERT(BIGINT,T0.hDinQuantity) - CONVERT(BIGINT,T0.hDoutQuantity)) 
				+ (CONVERT(BIGINT,T0.hinQuantity) - CONVERT(BIGINT,T0.houtQuantity)) * #flag# - (CONVERT(BIGINT,T0.inQuantity) - CONVERT(BIGINT,T0.outQuantity))) AS startQuantity
			]]>		
		</isNotEmpty>
		<isEmpty property="flagB" >
			<![CDATA[		
				SUM(CONVERT(BIGINT,T0.hQuantity) + (CONVERT(BIGINT,T0.hDinQuantity) - CONVERT(BIGINT,T0.hDoutQuantity)) 
				+ (CONVERT(BIGINT,T0.hinQuantity) - CONVERT(BIGINT,T0.houtQuantity)) * #flag#) AS startQuantity,
				SUM(CONVERT(BIGINT,T0.hQuantity) + (CONVERT(BIGINT,T0.hDinQuantity) - CONVERT(BIGINT,T0.hDoutQuantity)) 
				+ (CONVERT(BIGINT,T0.hinQuantity) - CONVERT(BIGINT,T0.houtQuantity)) * #flag# + (CONVERT(BIGINT,T0.inQuantity) - CONVERT(BIGINT,T0.outQuantity))) AS endQuantity
			]]>		
		</isEmpty>
		<![CDATA[ FROM( ]]>
			<include refid="BINOLPTRPS46.ProStockHistorySQL" />
			<![CDATA[ UNION ALL ]]>
			<include refid="BINOLPTRPS46.ProStockInoutSQL" />
		<![CDATA[ ) T0
				JOIN Basis.BIN_ProductVendor D WITH(NOLOCK)
				ON(T0.BIN_ProductVendorID = D.BIN_ProductVendorID)
				JOIN Basis.BIN_Product E WITH(NOLOCK)
				ON(D.BIN_ProductID = E.BIN_ProductID)
				LEFT JOIN Basis.BIN_Organization ORG WITH(NOLOCK) 
				ON(T0.BIN_OrganizationID=ORG.BIN_OrganizationID)
				LEFT JOIN (
					SELECT 
						PW1.* 
					FROM
						Inventory.BIN_ProductWeightedAvgPrice PW1 WITH(NOLOCK)
					where
						PW1.Date<=#startDate# and not exists(
						select 1 from Inventory.BIN_ProductWeightedAvgPrice TP
						where PW1.BIN_ProductVendorID=TP.BIN_ProductVendorID AND PW1.BIN_InventoryInfoID=TP.BIN_InventoryInfoID
						AND PW1.BIN_LogicInventoryInfoID=TP.BIN_LogicInventoryInfoID AND (PW1.Date<TP.Date or (PW1.Date=TP.Date and PW1.UpdateTime<TP.UpdateTime))
						)
				      
				) TT1 ON(T0.BIN_InventoryInfoID=TT1.BIN_InventoryInfoID
							AND T0.BIN_LogicInventoryInfoID=TT1.BIN_LogicInventoryInfoID and T0.BIN_ProductVendorID=TT1.BIN_ProductVendorID)
				LEFT JOIN (
					SELECT 
						PW1.* 
					FROM
						Inventory.BIN_ProductWeightedAvgPrice PW1 WITH(NOLOCK)
					where
						PW1.Date<=#endDate# and not exists(
						select 1 from Inventory.BIN_ProductWeightedAvgPrice TP
						where PW1.BIN_ProductVendorID=TP.BIN_ProductVendorID AND PW1.BIN_InventoryInfoID=TP.BIN_InventoryInfoID
						AND PW1.BIN_LogicInventoryInfoID=TP.BIN_LogicInventoryInfoID AND (PW1.Date<TP.Date or (PW1.Date=TP.Date and PW1.UpdateTime<TP.UpdateTime))
						)
				) TT2 ON(T0.BIN_InventoryInfoID=TT2.BIN_InventoryInfoID
						AND T0.BIN_LogicInventoryInfoID=TT2.BIN_LogicInventoryInfoID and T0.BIN_ProductVendorID=TT2.BIN_ProductVendorID)
		]]>
		<!-- 大中小分类条件 -->
		<include refid="BINOLPTRPS46.getProductIdSql"/>
		<isNotEmpty property="catePropValId" prepend="JOIN">
		<![CDATA[ Basis.BIN_PrtCategory G
		ON(E.BIN_ProductID = G.BIN_ProductID
			AND G.BIN_PrtCatPropValueID = #catePropValId# AND G.ValidFlag='1')
		]]>
		</isNotEmpty>
		<dynamic prepend="WHERE">
			<isNotEmpty property="belongFaction" prepend="AND">
				EXISTS(
					SELECT 1 FROM Basis.BIN_CounterInfo CNT WITH(NOLOCK)
					WHERE ORG.BIN_OrganizationID=CNT.BIN_OrganizationID
					AND CNT.BelongFaction = #belongFaction#
				)
			</isNotEmpty>
		</dynamic>
		<![CDATA[
			GROUP BY
				E.UnitCode,
				E.OriginalBrand,
				E.StandardCost,
				TT1.AvgPrice,
				TT2.AvgPrice,
				T0.BIN_ProductVendorID,
				D.BarCode,
				ORG.DepartCode,
				ORG.DepartName,
				T0.BIN_OrganizationID,
				T0.BIN_InventoryInfoID,
				T0.BIN_LogicInventoryInfoID,
		]]>
		<dynamic>
			<isNotEmpty property="language">
				<isEqual property="language" compareValue="en_US">
					E.NameForeign
				</isEqual>
				<isEqual property="language" compareValue="zh_CN">	
					E.NameTotal
				</isEqual>								
			</isNotEmpty>
			<isEmpty property="language">
				E.NameTotal
			</isEmpty>
		</dynamic>					
        <![CDATA[
        )T00
        group by 
        	T00.unitCode,
			T00.originalBrand,
			T00.startPrice,
			T00.endPrice,
			T00.prtVendorId,
			T00.barCode,
			T00.DepartCode,
			T00.DepartName,
			T00.BIN_OrganizationID,
			T00.BIN_InventoryInfoID,
			T00.nameTotal
        
        ]]>
	</sql>
	<!-- 取得库存记录总数  -->
    <select id="getPrtCheckoutInfoCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    	<include refid="BINOLCMINC99.getInventoryList" />
    	<![CDATA[
			SELECT	COUNT(1) AS count FROM (
		]]>	
		<include refid="BINOLPTRPS46.ProStockCheckoutSQL" />
		<![CDATA[
			)SORT_T1
		]]>										
    </select>
    
    <!-- 取得库存记录一览概要LIST -->
    <select id="getProStockSummaryInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
    	<include refid="BINOLCMINC99.getInventoryList" />
		<include refid="BINOLPTRPS46.ProStockCheckoutSQL" />
		<![CDATA[
			ORDER BY
				nameTotal asc
		]]>
    </select>
    
	<!-- 获取产品库存结账信息LIST  -->
	<select id="getPrtCheckoutInfoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		<include refid="BINOLCMINC99.getInventoryList" />
		<include refid="BINOLCMINC99.pageheader" />
		<include refid="BINOLPTRPS46.ProStockCheckoutSQL" />
		<include refid="BINOLCMINC99.pagefooter" />
    </select>
    
    <!-- 取得汇总信息  -->
    <select id="getSumInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	<include refid="BINOLCMINC99.getInventoryList" />
    	<![CDATA[
			SELECT	
				COUNT(SORT_T1.unitCode) AS count,
				ISNULL(SUM(CONVERT(BIGINT,ISNULL(SORT_T1.startQuantity,0))),0) AS sumStartQuantity,
				ISNULL(SUM(CONVERT(BIGINT,ISNULL(SORT_T1.inQuantity,0))),0) AS sumInQuantity,
				ISNULL(SUM(CONVERT(BIGINT,ISNULL(SORT_T1.outQuantity,0))),0) AS sumOutQuantity,
			 	ISNULL(SUM(CONVERT(BIGINT,ISNULL(SORT_T1.endQuantity,0))),0) AS sumEndQuantity,
			 	ISNULL(SUM(SORT_T1.startAmount),0) AS sumStartAmount,
			 	ISNULL(SUM(SORT_T1.endAmount),0) AS sumEndAmount
			FROM (
		]]>	
		<include refid="BINOLPTRPS46.ProStockCheckoutSQL" />
		<![CDATA[	
			)SORT_T1
		]]>		
    </select>
</sqlMap>
