<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINOLSTIOS11">
    <sql id="importBatchQuery">
        <![CDATA[
            SELECT 
                A.BIN_ImportBatchID AS importBatchId,
                A.ImportBatchCode AS importBatchCode,
                A.Type AS type,
                A.ImportDate AS importDate,
                A.Comments AS comments,
                A.ValidFlag AS validFlag,
                B.EmployeeCode AS employeeCode,
        ]]>
        <dynamic>
            <isNotEmpty property="language">
                <isEqual property="language" compareValue="en_US">
                    <![CDATA[
                        B.EmployeeNameForeign  AS employeeName
                    ]]>
                </isEqual>
                <isEqual property="language" compareValue="zh_CN">
                    <![CDATA[
                        B.EmployeeName AS employeeName
                    ]]>
                </isEqual>
            </isNotEmpty>
            <isEmpty property="language">
                <![CDATA[
                    B.EmployeeName AS employeeName
                ]]>
            </isEmpty>
        </dynamic>
        <![CDATA[
            FROM 
                Inventory.BIN_ImportBatch A WITH(NOLOCK)
                LEFT JOIN Basis.BIN_Employee B WITH(NOLOCK)
                ON(A.BIN_EmployeeID = B.BIN_EmployeeID)
        ]]>
		<isNotEmpty property="privilegeFlag">
			<isEqual property="privilegeFlag" compareValue="1">			
				<![CDATA[		
					JOIN (]]><include refid="BINOLCMINC99.employeePrivilegeSql" /><![CDATA[) A99 
					ON A.BIN_EmployeeID=A99.BIN_SubEmployeeID
				]]>
			</isEqual>
		</isNotEmpty>
		<![CDATA[
            WHERE 
                A.BIN_OrganizationInfoID = #organizationInfoId#
                AND A.BIN_BrandInfoID = #brandInfoId#
        ]]>
            <isNotEmpty prepend="and" property="importBatchId">
                <![CDATA[A.BIN_ImportBatchID = #importBatchId#]]>
            </isNotEmpty>
            <isNotEmpty prepend="and" property="importBatchCode">
                <![CDATA[A.ImportBatchCode like '%' + #importBatchCode# + '%']]>
            </isNotEmpty>
            <isNotEmpty prepend="and" property="type">
                <![CDATA[A.Type = #type#]]>
            </isNotEmpty>
            <isNotEmpty prepend="and" property="importStartTime">
                <![CDATA[A.ImportDate >= #importStartTime#]]>
            </isNotEmpty>
            <isNotEmpty prepend="and" property="importEndTime">
                <![CDATA[A.ImportDate <= #importEndTime#]]>
            </isNotEmpty>
            <isNotEmpty prepend="and" property="validFlag">
                <![CDATA[A.ValidFlag = #validFlag#]]>
            </isNotEmpty>
            <isNotEmpty prepend="and" property="importBatchCodeR">
                <![CDATA[A.ImportBatchCode = #importBatchCodeR#]]>
            </isNotEmpty>
    </sql>
    
    <!-- 查询退库申请单Excel导入批次总数 -->
    <select id="getImportBatchCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        <![CDATA[
            SELECT  COUNT(SORT_T1.importBatchId) AS count FROM (
        ]]>
        <include refid="BINOLSTIOS11.importBatchQuery" />
        <![CDATA[
            )SORT_T1
        ]]>
    </select>
    
    <!-- 查询退库申请单Excel导入批次信息 -->
    <select id="getImportBatchList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <include refid="BINOLCMINC99.pageheader" />
        <include refid="BINOLSTIOS11.importBatchQuery" />
        <include refid="BINOLCMINC99.pagefooter" />
    </select>
    
    <!-- 判断是否为重复数据 -->
    <select id="getRepeatData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
        SELECT 
            1
        FROM
            Inventory.BIN_ProReturnRequestExcel A WITH(NOLOCK)
            LEFT JOIN Inventory.BIN_ProReturnReqExcelDetail B WITH(NOLOCK) 
            ON(A.BIN_ProReturnRequestExcelID = B.BIN_ProReturnRequestExcelID)
            LEFT JOIN Inventory.BIN_ProReturnRequest C WITH(NOLOCK)
            ON(A.BillNo = C.BillNo)
        WHERE 
            A.BIN_BrandInfoID = #brandInfoId#
            AND A.BIN_OrganizationInfoID = #organizationInfoId#
            AND A.DepartCodeFrom = #departCodeFrom#
            AND A.DepartCodeTo = #departCodeTo#
            AND A.ValidFlag = '1'
            AND A.ImportResult = '1'
            AND B.UnitCode = #unitCode#
            AND B.Quantity = #quantity#
        ]]>
        <isNotEmpty prepend="and" property="barCode">
            B.BarCode = #barCode#
        </isNotEmpty>
    </select>
    
    <!-- 插入导入批次表 -->
    <insert id="insertImportBatch" parameterClass="java.util.HashMap">
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_ImportBatchID" >    
        <![CDATA[
        INSERT INTO Inventory.BIN_ImportBatch(
            BIN_OrganizationInfoID,
            BIN_BrandInfoID,
            ImportBatchCode,
            ImportBatchCodeIF,
            Type,
            ImportDate,
            BIN_EmployeeID,
            Comments,
            ValidFlag,
            CreateTime,
            UpdateTime,
            CreatedBy,
            CreatePGM,
            UpdatedBy,
            UpdatePGM,
            ModifyCount
        )VALUES(
            #BIN_OrganizationInfoID#,
            #BIN_BrandInfoID#,
            #ImportBatchCode#,
            #ImportBatchCodeIF#,
            #Type#,
            #ImportDate#,
            #BIN_EmployeeID#,
            #Comments#,
            1,
            GETDATE(),
            GETDATE(),
            #CreatedBy#,
            #CreatePGM#,
            #UpdatedBy#,
            #UpdatePGM#,
            0 
        )
        SELECT SCOPE_IDENTITY() AS value
        ]]> 
        </selectKey> 
    </insert>
    
    <!-- 通过部门编码取得部门信息 -->
    <select id="getOrgByCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
        SELECT 
            A.BIN_BrandInfoID AS BIN_BrandInfoID,
            A.BIN_OrganizationID AS BIN_OrganizationID,
            A.DepartCode AS DepartCode,
            A.DepartName AS DepartName,
            A.Type AS Type
        FROM
            Basis.BIN_Organization A WITH(NOLOCK)
        WHERE
            A.DepartCode=#DepartCode# 
            AND A.BIN_OrganizationInfoID = #BIN_OrganizationInfoID#
            AND A.BIN_BrandInfoID = #BIN_BrandInfoID#
            AND A.ValidFlag='1'
        ]]>
    </select>
    
    <!-- 查询逻辑仓库信息 -->
    <select id="getLogicInventoryByName" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT 
                TOP(1)
                A.BIN_LogicInventoryInfoID AS BIN_LogicInventoryInfoID,
                A.InventoryNameCN AS LogicInventoryName
            FROM 
                Basis.BIN_LogicInventory A WITH(NOLOCK)
            WHERE 
                (A.InventoryNameCN = #InventoryName# OR  A.InventoryNameEN = #InventoryName# )
                AND A.BIN_BrandInfoID = #BIN_BrandInfoID#
                AND A.BIN_OrganizationInfoID = #BIN_OrganizationInfoID#
                AND A.ValidFlag = '1'
        ]]>
        <dynamic>
            <isNotEmpty prepend="and" property="Type">
                A.Type=#Type#
            </isNotEmpty>
        </dynamic>
    </select>
    
    <!--根据仓库ID取得与之关联的所有部门的上级部门(带权限或者不带权限)List,带有测试部门和正式部门控制-->
    <select id="getSupDepartCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        <![CDATA[
        WITH E AS(
            SELECT
                A.BIN_OrganizationID AS organizationID,
                A.NodeID AS nodeID,
                A.DepartName AS departName,
                A.DepartCode AS departCode,
                A.Type AS type ,
                F.TestType
            FROM
                Basis.BIN_Organization  A
                JOIN Basis.BIN_InventoryInfo B
                ON(A.BIN_OrganizationID = B.BIN_OrganizationID
                AND A.ValidFlag = '1'
                AND B.BIN_InventoryInfoID = #DepotID#)
                JOIN Basis.BIN_DepotInfo F
                ON(F.BIN_DepotInfoID = B.BIN_InventoryInfoID)
            UNION ALL
            SELECT
                C.BIN_OrganizationID,
                C.NodeID,
                C.DepartName,
                C.DepartCode,
                C.Type AS type ,
                C.TestType
            FROM
                Basis.BIN_Organization C
                JOIN E
                ON(C.NodeId = E.NodeId.GetAncestor(1)
                AND C.TestType = E.TestType)
        )
        ]]>
        <![CDATA[
            SELECT  COUNT(1) AS count FROM (
        ]]>
        <![CDATA[
        SELECT
            distinct
            E.nodeID,
            E.departName,
            E.organizationID AS organizationId,
            E.TestType,
            E.departCode,
            E.Type AS type
        FROM
            E
        ]]> 
        <dynamic>
            <isNotEmpty property="BIN_UserID">
            <![CDATA[
                JOIN (]]><include refid="BINOLCMINC99.departPrivilegeSql" /><![CDATA[) A99
                ON E.organizationID = A99.BIN_OrganizationID
            ]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
        WHERE
            E.organizationID <> #BIN_OrganizationID#
        ]]>
        <dynamic>
            <isNotEmpty prepend="AND" property="BIN_OrganizationIDAccept">
                <![CDATA[
                    E.organizationID = #BIN_OrganizationIDAccept#
                ]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
            )SORT_T1
        ]]> 
    </select>
    
    <sql id="getDepartInfo">
        <![CDATA[
        SELECT
            distinct
            A.BIN_OrganizationID AS organizationId,
            A.DepartCode AS departCode,
            A.Type AS type ,
            B.BIN_InventoryInfoID AS inventoryInfoID,
        ]]>
        <dynamic>
            <isNotEmpty property="language">
                    <isEqual property = "language" compareValue="en_US">
                        A.NameForeign AS departName 
                    </isEqual>
                    <isEqual property = "language" compareValue="zh_CN">
                        A.DepartName AS departName
                    </isEqual>
            </isNotEmpty>
            <isEmpty property="language">
                    A.DepartName AS departName
            </isEmpty>
        </dynamic>
        <![CDATA[
        FROM
            Basis.BIN_Organization A
            JOIN (]]><include refid="BINOLCMINC99.departPrivilegeSql" /><![CDATA[) A99 
            ON(A.BIN_OrganizationID=A99.BIN_OrganizationID)
            left join Basis.BIN_CounterInfo E on(A.BIN_OrganizationID = E.BIN_OrganizationID),
            Basis.BIN_InventoryInfo B
        WHERE
        ]]>
        <dynamic>
            <isNotEmpty property="inventoryInfoID">
                <iterate property="inventoryInfoID" open="(" close=")" conjunction="OR">
                    B.BIN_InventoryInfoID = #inventoryInfoID[]#
                </iterate>
                <![CDATA[ AND ]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
            A.BIN_OrganizationID = B.BIN_OrganizationID
            AND (A.TestType = #TestType# OR E.CounterKind = #TestType#)
            AND B.ValidFlag = '1'
            AND A.BIN_OrganizationID <> #BIN_OrganizationID#
        ]]>
        <dynamic>
            <isNotEmpty prepend="AND" property="BIN_OrganizationIDAccept">
                <![CDATA[
                    A.BIN_OrganizationID = #BIN_OrganizationIDAccept#
                ]]>
            </isNotEmpty>
        </dynamic>
    </sql>
    
    <!--根据仓库ID判断指定的接受订货部门是否存在,带权限,按仓库业务区域大小关系设定-->
    <select id="getDepartInfoCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        <![CDATA[
            SELECT  COUNT(SORT_T1.organizationId) AS count FROM (
        ]]> 
        <include refid="BINOLSTIOS11.getDepartInfo" />  
        <![CDATA[
            )SORT_T1
        ]]> 
    </select>
    
    <!-- 查询产品的信息 -->
    <select id="getPrtInfoByUnitCode"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
        SELECT 
            A.BIN_ProductID AS BIN_ProductID,
            A.NameTotal AS NameTotal,
            B.BarCode AS BarCode,
            B.BIN_ProductVendorID AS BIN_ProductVendorID
        FROM 
            Basis.BIN_Product A WITH(NOLOCK)
            left join Basis.BIN_ProductVendor B WITH(NOLOCK) 
            ON(A.BIN_ProductID = B.BIN_ProductID)
        WHERE
            A.ValidFlag ='1' 
            AND B.ValidFlag = '1'
            AND A.UnitCode = #UnitCode#
            AND A.BIN_OrganizationInfoID = #BIN_OrganizationInfoID#
            AND A.BIN_BrandInfoID = #BIN_BrandInfoID#
        ]]>
    </select>   
    
    <!-- 查询产品的价格 -->
    <select id="getPrtPrice"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
        SELECT 
			 A.BIN_ProductID as BIN_ProductID,
			 A.SalePrice as SalePrice,
			 A.MemPrice AS MemPrice,
			 B.StandardCost,
			 B.OrderPrice,
			 A.StartDate as StartDate,
			 A.EndDate as EndDate,
			 A.ValidFlag as ValidFlag
		FROM 
			Basis.BIN_ProductPrice A WITH(NOLOCK)
			RIGHT JOIN Basis.BIN_Product B WITH(NOLOCK)
			ON(A.BIN_ProductID=B.BIN_ProductID AND A.Type = '2' AND A.ValidFlag='1')
		WHERE 
			B.BIN_ProductID=#BIN_ProductID#
		ORDER BY A.StartDate
        ]]>
    </select>
    
    <!-- 往退库申请Excel导入主表添加数据key -->
    <sql id="insertProReturnRequestExcelKey">
        <dynamic>
            <isNotEmpty property="BillNo">
                BillNo,
            </isNotEmpty>
            <isNotEmpty property="BillNoIF">
                BillNoIF,
            </isNotEmpty>
            <isNotEmpty property="BIN_OrganizationIDFrom">
                BIN_OrganizationIDFrom,
            </isNotEmpty>
            <isNotEmpty property="ImportDepartCodeFrom">
                DepartCodeFrom,
            </isNotEmpty>
            <isNotEmpty property="ImportDepartNameFrom">
                DepartNameFrom,
            </isNotEmpty>
            <isNotEmpty property="BIN_InventoryInfoIDFrom">
                BIN_InventoryInfoIDFrom,
            </isNotEmpty>
            <isNotEmpty property="BIN_LogicInventoryInfoIDFrom">
                BIN_LogicInventoryInfoIDFrom,
            </isNotEmpty>
            <isNotEmpty property="LogicInventoryNameFrom">
                LogicInventoryNameFrom,
            </isNotEmpty>
            <isNotEmpty property="BIN_OrganizationIDTo">
                BIN_OrganizationIDTo,
            </isNotEmpty>
            <isNotEmpty property="ImportDepartCodeTo">
                DepartCodeTo,
            </isNotEmpty>
            <isNotEmpty property="ImportDepartNameTo">
                DepartNameTo,
            </isNotEmpty>
            <isNotEmpty property="BIN_InventoryInfoIDTo">
                BIN_InventoryInfoIDTo,
            </isNotEmpty>
            <isNotEmpty property="BIN_LogicInventoryInfoIDTo">
                BIN_LogicInventoryInfoIDTo,
            </isNotEmpty>
            <isNotEmpty property="BIN_EmployeeID">
                BIN_EmployeeID,
            </isNotEmpty>
            <isNotEmpty property="TotalQuantity">
                TotalQuantity,
            </isNotEmpty>
            <isNotEmpty property="TotalAmount">
                TotalAmount,
            </isNotEmpty>
            <isNotEmpty property="Comments">
                Comments,
            </isNotEmpty>
            <isNotEmpty property="ImportDate">
                ImportDate,
            </isNotEmpty>
            <isNotEmpty property="ImportResult">
                ImportResult,
            </isNotEmpty>
            <isNotEmpty property="WorkFlowID">
                WorkFlowID,
            </isNotEmpty>
        </dynamic>
    </sql>
    
    <!-- 往退库申请Excel导入主表添加数据value -->
    <sql id="insertProReturnRequestExcelValue">
        <dynamic>
            <isNotEmpty property="BillNo">
                #BillNo#,
            </isNotEmpty>
            <isNotEmpty property="BillNoIF">
                #BillNoIF#,
            </isNotEmpty>
            <isNotEmpty property="BIN_OrganizationIDFrom">
                #BIN_OrganizationIDFrom#,
            </isNotEmpty>
            <isNotEmpty property="ImportDepartCodeFrom">
                #ImportDepartCodeFrom#,
            </isNotEmpty>
            <isNotEmpty property="ImportDepartNameFrom">
                #ImportDepartNameFrom#,
            </isNotEmpty>
            <isNotEmpty property="BIN_InventoryInfoIDFrom">
                #BIN_InventoryInfoIDFrom#,
            </isNotEmpty>
            <isNotEmpty property="BIN_LogicInventoryInfoIDFrom">
                #BIN_LogicInventoryInfoIDFrom#,
            </isNotEmpty>
            <isNotEmpty property="LogicInventoryNameFrom">
                #LogicInventoryNameFrom#,
            </isNotEmpty>
            <isNotEmpty property="BIN_OrganizationIDTo">
                #BIN_OrganizationIDTo#,
            </isNotEmpty>
            <isNotEmpty property="ImportDepartCodeTo">
                #ImportDepartCodeTo#,
            </isNotEmpty>
            <isNotEmpty property="ImportDepartNameTo">
                #ImportDepartNameTo#,
            </isNotEmpty>
            <isNotEmpty property="BIN_InventoryInfoIDTo">
                #BIN_InventoryInfoIDTo#,
            </isNotEmpty>
            <isNotEmpty property="BIN_LogicInventoryInfoIDTo">
                #BIN_LogicInventoryInfoIDTo#,
            </isNotEmpty>
            <isNotEmpty property="BIN_EmployeeID">
                #BIN_EmployeeID#,
            </isNotEmpty>
            <isNotEmpty property="TotalQuantity">
                #TotalQuantity#,
            </isNotEmpty>
            <isNotEmpty property="TotalAmount">
                #TotalAmount#,
            </isNotEmpty>
            <isNotEmpty property="Comments">
                #Comments#,
            </isNotEmpty>
            <isNotEmpty property="ImportDate">
                #ImportDate#,
            </isNotEmpty>
            <isNotEmpty property="ImportResult">
                #ImportResult#,
            </isNotEmpty>
            <isNotEmpty property="WorkFlowID">
                #WorkFlowID#,
            </isNotEmpty>
        </dynamic>
    </sql>
    
    <!-- 往退库申请Excel导入主表中添加数据 -->
    <insert id="insertProReturnRequestExcel" parameterClass="java.util.HashMap">
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_ProReturnRequestExcelID" >
        <![CDATA[
        INSERT INTO Inventory.BIN_ProReturnRequestExcel(
                BIN_OrganizationInfoID,
                BIN_BrandInfoID,
                BIN_ImportBatchID,
                ImportBatch,
        ]]>
        <include refid="BINOLSTIOS11.insertProReturnRequestExcelKey" />
        <![CDATA[
                CreateTime,
                UpdateTime,
                CreatedBy,
                CreatePGM,
                UpdatedBy,
                UpdatePGM,
                ValidFlag,
                ModifyCount
         )
        VALUES
            (
                #BIN_OrganizationInfoID#,
                #BIN_BrandInfoID#,
                #BIN_ImportBatchID#,
                #ImportBatchCode#,
        ]]>
        <include refid="BINOLSTIOS11.insertProReturnRequestExcelValue" />
        <![CDATA[
                GETDATE(),
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                #UpdatedBy#,
                #UpdatePGM#,
                '1',
                0
            )
                SELECT SCOPE_IDENTITY() AS value
        ]]> 
       </selectKey> 
    </insert>
    
    <!-- 往退库申请Excel导入明细表中添加数据 -->
    <insert id="insertProReturnReqExcelDetail" parameterClass="java.util.HashMap">
        <![CDATA[
        INSERT INTO Inventory.BIN_ProReturnReqExcelDetail(
                BIN_ProReturnRequestExcelID,
        ]]>
        <dynamic>
            <isNotEmpty property="BIN_ProductVendorID">
                BIN_ProductVendorID,
            </isNotEmpty>
            <isNotEmpty property="ImportUnitCode">
                UnitCode,
            </isNotEmpty>
            <isNotEmpty property="BarCode">
                BarCode,
            </isNotEmpty>
            <isNotEmpty property="ImportNameTotal">
                NameTotal,
            </isNotEmpty>
            <isNotEmpty property="Quantity">
                Quantity,
            </isNotEmpty>
            <isNotEmpty property="Price">
                Price,
            </isNotEmpty>
            <isNotEmpty property="ErrorMsg">
                ErrorMsg,
            </isNotEmpty>
        </dynamic>
       <![CDATA[
                CreateTime,
                UpdateTime,
                CreatedBy,
                CreatePGM,
                UpdatedBy,
                UpdatePGM,
                ValidFlag,
                ModifyCount
         )
        VALUES
            (
            #BIN_ProReturnRequestExcelID#,
        ]]>
        <dynamic>
            <isNotEmpty property="BIN_ProductVendorID">
                #BIN_ProductVendorID#,
            </isNotEmpty>
            <isNotEmpty property="ImportUnitCode">
                #ImportUnitCode#,
            </isNotEmpty>
            <isNotEmpty property="BarCode">
                #BarCode#,
            </isNotEmpty>
            <isNotEmpty property="ImportNameTotal">
                #ImportNameTotal#,
            </isNotEmpty>
            <isNotEmpty property="Quantity">
                #Quantity#,
            </isNotEmpty>
            <isNotEmpty property="Price">
                #Price#,
            </isNotEmpty>
            <isNotEmpty property="ErrorMsg">
                #ErrorMsg#,
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                GETDATE(),
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                #UpdatedBy#,
                #UpdatePGM#,
                '1',
                0
            )
        ]]> 
    </insert>
    
    <sql id="billExcelQuery">
    <![CDATA[
        SELECT
            A.BIN_ProReturnRequestExcelID AS proReturnRequestExcelID,
            A.BillNo AS billNo,
            A.BillNoIF AS billNoIF,
            A.BIN_OrganizationIDFrom AS organizationIdFrom,
            A.BIN_OrganizationIDTo AS organizationIdTo,
            A.BIN_InventoryInfoIDFrom AS inventoryInfoIDFrom,
            A.BIN_LogicInventoryInfoIDFrom AS logicInventoryInfoIDFrom,
            A.LogicInventoryNameFrom AS logicInventoryNameFrom,
            A.BIN_EmployeeID AS employeeID,
            A.TotalQuantity AS totalQuantity,
            A.TotalAmount AS totalAmount,
            A.Comments AS comments,
            A.ImportDate AS importDate,
            A.ImportResult AS importResult,
            A.WorkFlowID AS workFlowId,
            CASE ISNULL(A.DepartCodeFrom,'') WHEN '' THEN A.DepartNameFrom 
                ELSE '('+A.DepartCodeFrom+')'+ISNULL(A.DepartNameFrom,'') END AS departNameFrom,
            CASE ISNULL(A.DepartCodeTo,'') WHEN '' THEN A.DepartNameTo
                ELSE '('+A.DepartCodeTo+')'+ISNULL(A.DepartNameTo,'') END AS departNameTo,
        ]]> 
        <isNotEmpty property="language">
            <isEqual property="language" compareValue="en_US">
                CASE ISNULL(B.DepotCode,'') WHEN '' THEN B.DepotNameEN 
                    ELSE '('+B.DepotCode+')'+B.DepotNameEN END AS inventoryNameFrom,
                CASE ISNULL(E.DepotCode,'') WHEN '' THEN E.DepotNameEN 
                    ELSE '('+E.DepotCode+')'+E.DepotNameEN END AS inventoryNameTo,
                CASE ISNULL(F.LogicInventoryCode,'') WHEN '' THEN F.InventoryNameEN
                    ELSE '('+F.LogicInventoryCode+')'+F.InventoryNameEN END AS logicInventoryNameTo,
                CASE ISNULL(C.EmployeeCode,'') WHEN '' THEN C.EmployeeNameForeign 
                    ELSE '('+C.EmployeeCode+')'+C.EmployeeNameForeign END AS employeeName,
            </isEqual>
            <isEqual property="language" compareValue="zh_CN">
                CASE ISNULL(B.DepotCode,'') WHEN '' THEN B.DepotNameCN 
                    ELSE '('+B.DepotCode+')'+B.DepotNameCN END AS inventoryNameFrom,
                CASE ISNULL(E.DepotCode,'') WHEN '' THEN E.DepotNameCN 
                    ELSE '('+E.DepotCode+')'+E.DepotNameCN END AS inventoryNameTo,
                CASE ISNULL(F.LogicInventoryCode,'') WHEN '' THEN F.InventoryNameCN
                    ELSE '('+F.LogicInventoryCode+')'+F.InventoryNameCN END AS logicInventoryNameTo,
                CASE ISNULL(C.EmployeeCode,'') WHEN '' THEN C.EmployeeName 
                    ELSE '('+C.EmployeeCode+')'+C.EmployeeName END AS employeeName,
            </isEqual>
        </isNotEmpty>
        <isEmpty property="language">
            CASE ISNULL(B.DepotCode,'') WHEN '' THEN B.DepotNameCN 
                ELSE '('+B.DepotCode+')'+B.DepotNameCN END AS inventoryNameFrom,
            CASE ISNULL(E.DepotCode,'') WHEN '' THEN E.DepotNameCN 
                ELSE '('+E.DepotCode+')'+E.DepotNameCN END AS inventoryNameTo,
            CASE ISNULL(F.LogicInventoryCode,'') WHEN '' THEN F.InventoryNameCN
                ELSE '('+F.LogicInventoryCode+')'+F.InventoryNameCN END AS logicInventoryNameTo,
            CASE ISNULL(C.EmployeeCode,'') WHEN '' THEN C.EmployeeName
                ELSE '('+C.EmployeeCode+')'+C.EmployeeName END AS employeeName,
        </isEmpty>
        <![CDATA[
            A.ValidFlag AS ValidFlag
        FROM 
            Inventory.BIN_ProReturnRequestExcel A WITH(NOLOCK)
            LEFT JOIN  Basis.BIN_DepotInfo B with(NOLOCK) 
            ON(B.BIN_DepotInfoID = A.BIN_InventoryInfoIDFrom)
            LEFT JOIN Basis.BIN_Employee C with(NOLOCK)
            ON(A.BIN_EmployeeID = C.BIN_EmployeeID)
            LEFT JOIN Inventory.BIN_ProReturnRequest D WITH(NOLOCK)
            ON(A.BillNo = D.BillNo and A.ImportBatch = D.ImportBatch)
            LEFT JOIN Basis.BIN_DepotInfo E WITH(NOLOCK)
            ON(A.BIN_InventoryInfoIDTo = E.BIN_DepotInfoID)
            LEFT JOIN Basis.BIN_LogicInventory F WITH(NOLOCK)
            ON(A.BIN_LogicInventoryInfoIDTo = F.BIN_LogicInventoryInfoID)
        ]]>
        <dynamic prepend="WHERE">
            <isNotEmpty prepend="AND" property="brandInfoId">
                A.BIN_BrandInfoID = #brandInfoId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="organizationInfoId">
                A.BIN_OrganizationInfoID = #organizationInfoId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="proReturnRequestExcelID">
                A.BIN_ProReturnRequestExcelID = #proReturnRequestExcelID#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="importBatchId">
                A.BIN_ImportBatchID = #importBatchId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="billNo">
                A.BillNo = #billNo#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="organizationIdFrom">
                A.BIN_OrganizationIDFrom = #organizationIdFrom#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="organizationIdTo">
                A.BIN_OrganizationIDTo = #organizationIdTo#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="importDateStart">
                <![CDATA[ A.ImportDate >= #importDateStart# ]]>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="importDateEnd">
                <![CDATA[ A.ImportDate <= #importDateEnd# ]]>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="importResult">
                A.ImportResult = #importResult#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="validFlag">
                A.ValidFlag = #validFlag#
            </isNotEmpty>
        </dynamic>
    </sql>
    
    <!-- 查询退库申请单（Excel导入）总数 -->
    <select id="getBillExcelCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        <![CDATA[
            SELECT  COUNT(1) AS count FROM (
        ]]> 
        <include refid="BINOLSTIOS11.billExcelQuery" />
        <![CDATA[
            )SORT_T1
        ]]>
    </select>
    
    <!-- 查询退库申请单（Excel导入）信息 -->
    <select id="getBillExcelList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <include refid="BINOLCMINC99.pageheader" />
        <include refid="BINOLSTIOS11.billExcelQuery" />
        <include refid="BINOLCMINC99.pagefooter" />
    </select>
    
    <!-- 根据ID查询退库申请单（Excel导入）的主信息 -->
    <select id="getBillExcelInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <include refid="BINOLSTIOS11.billExcelQuery" />
    </select>
    
    <!--退库申请单（Excel导入）产品明细 SQL文 -->
    <sql id="queryBillExcelDetail">
        <![CDATA[
            SELECT 
                A.BIN_ProReturnReqExcelDetailID AS proReturnReqExcelDetailID,
                A.BIN_ProReturnRequestExcelID AS proReturnRequestExcelID,
                A.BIN_ProductVendorID AS productVendorId,
                A.UnitCode AS unitCode,
                A.Barcode AS barCode,
                A.NameTotal AS nameTotal,
                A.Quantity AS quantity,
                ISNULL(Convert(decimal(16,2),A.Price),0) AS price,
                A.ErrorMsg AS errorMsg,
                A.ValidFlag AS validFlag
            FROM 
                Inventory.BIN_ProReturnReqExcelDetail A WITH(NOLOCK)
            WHERE
                A.BIN_ProReturnRequestExcelID = #proReturnRequestExcelID#
        ]]>
            <isNotEmpty prepend="AND" property="validFlag">
                A.ValidFlag = #validFlag#
            </isNotEmpty>
    </sql>
    
    <!-- 查询退库申请单（Excel导入）产品明细 -->
    <select id="getBillExcelDetailList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
        <include refid="BINOLSTIOS11.queryBillExcelDetail" />
    </select>
    
    <!-- 导出数据查询SQL文 -->
    <sql id="queryExportData">
        <![CDATA[
            SELECT 
                A.BIN_ProReturnRequestExcelID as proReturnRequestExcelID,
                A.BillNo as billNo,
                A.ImportBatch as importBatch,
                A.DepartCodeFrom as departCodeFrom,
                A.DepartNameFrom as departNameFrom,
                A.DepartCodeTo as departCodeTo,
                A.DepartNameTo as departNameTo,
                A.ImportResult as importResult,
                A.LogicInventoryNameFrom as logicInventoryNameFrom,
                A.ImportDate AS importDate,
                B.UnitCode as unitCode,
                B.NameTotal as nameTotal,
                B.BarCode as barCode,
                B.Quantity as quantity,
                ISNULL(Convert(decimal(16,2),B.Price),0) AS price,
                B.ErrorMsg as errorMsg
            FROM 
                Inventory.BIN_ProReturnRequestExcel A WITH(NOLOCK)
                LEFT JOIN Inventory.BIN_ProReturnReqExcelDetail B WITH(NOLOCK)
                ON(A.BIN_ProReturnRequestExcelID = B.BIN_ProReturnRequestExcelID)
                LEFT JOIN Inventory.BIN_ProReturnRequest C WITH(NOLOCK)
                ON(A.BillNo = C.BillNo and A.ImportBatch = C.ImportBatch)
        ]]> 
        <dynamic prepend="WHERE">
            <isNotEmpty prepend="AND" property="brandInfoId">
                A.BIN_BrandInfoID = #brandInfoId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="organizationInfoId">
                A.BIN_OrganizationInfoID = #organizationInfoId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="importBatchId">
                A.BIN_ImportBatchID = #importBatchId#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="billNo">
                A.BillNo = #billNo#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="organizationIdFrom">
                A.BIN_OrganizationIDFrom = #organizationIdFrom#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="organizationIdTo">
                A.BIN_OrganizationIDTo = #organizationIdTo#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="importDateStart">
                <![CDATA[ A.ImportDate >= #importDateStart# ]]>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="importDateEnd">
                <![CDATA[ A.ImportDate <= #importDateEnd# ]]>
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="importResult">
                A.ImportResult = #importResult#
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="validFlag">
                A.ValidFlag = #validFlag#
            </isNotEmpty>
        </dynamic>
    </sql>
    
    <!-- 导出数据总数 -->
    <select id="getExportDataCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        <![CDATA[
            SELECT  COUNT(1) AS count FROM (
        ]]>
        <include refid="BINOLSTIOS11.queryExportData" />
        <![CDATA[
            )SORT_T1
        ]]>
    </select>
    
    <!-- 导出数据 -->
    <select id="getExportDataList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <include refid="BINOLCMINC99.pageheader" />
        <include refid="BINOLSTIOS11.queryExportData" />
        <include refid="BINOLCMINC99.pagefooter" />
    </select>
</sqlMap>