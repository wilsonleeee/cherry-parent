<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINOLSTJCS05">
	
	<!--取得仓库业务关系SQL文-->
	<!--
	<sql id="getDepotBusinessSQL">
		SELECT
			A1.BIN_DepotBusinessID AS depotBusinessId,
			A1.BusinessType AS businessType,
			B.DepotCode AS outCode,
			C.DepotCode AS inCode,
			<dynamic>
				<isNotEmpty property="language">
					<isEqual property = "language" compareValue="en_US">
						<![CDATA[B.DepotNameEN AS outName,
						C.DepotNameEN AS inName,
						D.BrandNameForeign AS brandName]]>
					</isEqual>
					<isEqual property = "language" compareValue="zh_CN">
						<![CDATA[B.DepotNameCN AS outName,
						C.DepotNameCN AS inName,
						D.BrandNameChinese AS brandName]]>
					</isEqual>
				</isNotEmpty>
				<isEmpty property="language">
					<![CDATA[B.DepotNameCN AS outName,
					C.DepotNameCN AS inName,
					D.BrandNameChinese AS brandName]]>
				</isEmpty>
			</dynamic>
		FROM
			Basis.BIN_DepotBusiness A1
			JOIN Basis.BIN_DepotInfo B
			ON(A1.OutID = B.BIN_DepotInfoID
			AND A1.OutIdFlag = '0')
			JOIN Basis.BIN_DepotBusiness A2
			ON(A2.BIN_DepotBusinessID = A1.BIN_DepotBusinessID)
			JOIN Basis.BIN_DepotInfo C
			ON(A2.InID = C.BIN_DepotInfoID
			AND A2.InIdFlag = '0')
			JOIN Basis.BIN_BrandInfo D
			ON(A1.BIN_BrandInfoID = D.BIN_BrandInfoID)
		WHERE
			A1.ValidFlag = '1'
			AND A2.ValidFlag = '1'
			AND A1.BIN_BrandInfoID = #brandInfoId#
			AND A1.BIN_OrganizationInfoID = #organizationInfoId#
			<dynamic>
				<isNotEmpty prepend = "AND" property="businessType">
					A1.BusinessType = #businessType#
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="code">
					<![CDATA[(B.DepotCode LIKE '%'+#code#+'%'
					OR C.DepotCode LIKE '%'+#code#+'%')]]>
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="name">
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[(B.DepotNameEN LIKE '%'+#name#+'%'
							OR C.DepotNameEN LIKE '%'+#name#+'%')]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[(B.DepotNameCN LIKE '%'+#name#+'%'
							OR C.DepotNameCN LIKE '%'+#name#+'%')]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[(B.DepotNameCN LIKE '%'+#name#+'%'
							OR C.DepotNameCN LIKE '%'+#name#+'%')]]>
					</isEmpty>
				</isNotEmpty>
			</dynamic>
		UNION
		SELECT
			A1.BIN_DepotBusinessID AS depotBusinessId,
			A1.BusinessType AS businessType,
			B.DepotCode AS outCode,
			C.RegionCode AS inCode,
			<dynamic>
				<isNotEmpty property="language">
					<isEqual property = "language" compareValue="en_US">
						<![CDATA[B.DepotNameEN AS outName,
						C.RegionNameForeign AS inName,
						D.BrandNameForeign AS brandName]]>
					</isEqual>
					<isEqual property = "language" compareValue="zh_CN">
						<![CDATA[B.DepotNameCN AS outName,
						C.RegionNameChinese AS inName,
						D.BrandNameChinese AS brandName]]>
					</isEqual>
				</isNotEmpty>
				<isEmpty property="language">
					<![CDATA[B.DepotNameCN AS outName,
					C.RegionNameChinese AS inName,
					D.BrandNameChinese AS brandName]]>
				</isEmpty>
			</dynamic>
		FROM
			Basis.BIN_DepotBusiness A1
			JOIN Basis.BIN_DepotInfo B
			ON(A1.OutID = B.BIN_DepotInfoID
			AND A1.OutIdFlag = '0')
			JOIN Basis.BIN_DepotBusiness A2
			ON(A2.BIN_DepotBusinessID = A1.BIN_DepotBusinessID)
			JOIN Basis.BIN_Region C
			ON(A2.InID = C.BIN_RegionID
			AND A2.InIdFlag = '1')
			JOIN Basis.BIN_BrandInfo D
			ON(A1.BIN_BrandInfoID = D.BIN_BrandInfoID)
		WHERE
			A1.ValidFlag = '1'
			AND A2.ValidFlag = '1'
			AND A1.BIN_BrandInfoID = #brandInfoId#
			AND A1.BIN_OrganizationInfoID = #organizationInfoId#
			<dynamic>
				<isNotEmpty prepend = "AND" property="businessType">
					A1.BusinessType = #businessType#
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="code">
					<![CDATA[(B.DepotCode LIKE '%'+#code#+'%'
					OR C.RegionCode LIKE '%'+#code#+'%')]]>
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="name">
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[(B.DepotNameEN LIKE '%'+#name#+'%'
							OR C.RegionNameForeign LIKE '%'+#name#+'%')]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[(B.DepotNameCN LIKE '%'+#name#+'%'
							OR C.RegionNameChinese LIKE '%'+#name#+'%')]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[(B.DepotNameCN LIKE '%'+#name#+'%'
							OR C.RegionNameChinese LIKE '%'+#name#+'%')]]>
					</isEmpty>
				</isNotEmpty>
			</dynamic>
		UNION
		SELECT
			A1.BIN_DepotBusinessID AS depotBusinessId,
			A1.BusinessType AS businessType,
			B.RegionCode AS outCode,
			C.DepotCode AS inCode,
			<dynamic>
				<isNotEmpty property="language">
					<isEqual property = "language" compareValue="en_US">
						<![CDATA[B.RegionNameForeign AS outName,
						C.DepotNameEN AS inName,
						D.BrandNameForeign AS brandName]]>
					</isEqual>
					<isEqual property = "language" compareValue="zh_CN">
						<![CDATA[B.RegionNameChinese AS outName,
						C.DepotNameCN AS inName,
						D.BrandNameChinese AS brandName]]>
					</isEqual>
				</isNotEmpty>
				<isEmpty property="language">
					<![CDATA[B.RegionNameChinese AS outName,
					C.DepotNameCN AS inName,
					D.BrandNameChinese AS brandName]]>
				</isEmpty>
			</dynamic>
		FROM
			Basis.BIN_DepotBusiness A1
			JOIN Basis.BIN_Region B
			ON(A1.OutID = B.BIN_RegionID
			AND A1.OutIdFlag = '1')
			JOIN Basis.BIN_DepotBusiness A2
			ON(A2.BIN_DepotBusinessID = A1.BIN_DepotBusinessID)
			JOIN Basis.BIN_DepotInfo C
			ON(A2.InID = C.BIN_DepotInfoID
			AND A2.InIdFlag = '0')
			JOIN Basis.BIN_BrandInfo D
			ON(A1.BIN_BrandInfoID = D.BIN_BrandInfoID)
		WHERE
			A1.ValidFlag = '1'
			AND A2.ValidFlag = '1'
			AND A1.BIN_BrandInfoID = #brandInfoId#
			AND A1.BIN_OrganizationInfoID = #organizationInfoId#
			<dynamic>
				<isNotEmpty prepend = "AND" property="businessType">
					A1.BusinessType = #businessType#
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="code">
					<![CDATA[(B.RegionCode LIKE '%'+#code#+'%'
					OR C.DepotCode LIKE '%'+#code#+'%')]]>
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="name">
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[(B.RegionNameForeign LIKE '%'+#name#+'%'
							OR C.DepotNameEN LIKE '%'+#name#+'%')]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[(B.RegionNameChinese LIKE '%'+#name#+'%'
							OR C.DepotNameCN LIKE '%'+#name#+'%')]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[(B.RegionNameChinese LIKE '%'+#name#+'%'
							OR C.DepotNameCN LIKE '%'+#name#+'%')]]>
					</isEmpty>
				</isNotEmpty>
			</dynamic>
	</sql>
    -->
	  
	<sql id="getDepotBusinessSQL">
	   <![CDATA[
	   SELECT T.* FROM (
            SELECT
                A.BIN_DepotBusinessID AS depotBusinessId,
                A.BusinessType AS businessType,
                CASE
                    WHEN A.OutIdFlag = '0' THEN Out1.DepotCode
                    WHEN A.OutIdFlag = '1' THEN Out2.RegionCode
                    WHEN A.OutIdFlag = '2' THEN Out3.DepartCode
                END AS outCode,
                CASE
                    WHEN A.InIdFlag = '0' THEN In1.DepotCode
                    WHEN A.InIdFlag = '1' THEN In2.RegionCode
                    WHEN A.InIdFlag = '2' THEN In3.DepartCode
                END AS inCode,
        ]]>
        <dynamic>
            <isNotEmpty property="language">
                <isEqual property = "language" compareValue="en_US">
                    <![CDATA[
		                CASE
		                    WHEN A.OutIdFlag = '0' THEN Out1.DepotNameEN
		                    WHEN A.OutIdFlag = '1' THEN Out2.RegionNameForeign
		                    WHEN A.OutIdFlag = '2' THEN Out3.NameForeign
		                END AS outName,
		                CASE
		                    WHEN A.InIdFlag = '0' THEN In1.DepotNameEN
		                    WHEN A.InIdFlag = '1' THEN In2.RegionNameForeign
		                    WHEN A.InIdFlag = '2' THEN In3.NameForeign
		                END AS inName,
                        D.BrandNameForeign AS brandName
                     ]]>
                </isEqual>
                <isEqual property = "language" compareValue="zh_CN">
                    <![CDATA[
                        CASE
                            WHEN A.OutIdFlag = '0' THEN Out1.DepotNameCN
                            WHEN A.OutIdFlag = '1' THEN Out2.RegionNameChinese
                            WHEN A.OutIdFlag = '2' THEN Out3.DepartName
                        END AS outName,
                        CASE
                            WHEN A.InIdFlag = '0' THEN In1.DepotNameCN
                            WHEN A.InIdFlag = '1' THEN In2.RegionNameChinese
                            WHEN A.InIdFlag = '2' THEN In3.DepartName
                        END AS inName,
                        D.BrandNameChinese AS brandName
                    ]]>
                </isEqual>
                </isNotEmpty>
                <isEmpty property="language">
                    <![CDATA[
                        CASE
                            WHEN A.OutIdFlag = '0' THEN Out1.DepotNameCN
                            WHEN A.OutIdFlag = '1' THEN Out2.RegionNameChinese
                            WHEN A.OutIdFlag = '2' THEN Out3.DepartName
                        END AS outName,
                        CASE
                            WHEN A.InIdFlag = '0' THEN In1.DepotNameCN
                            WHEN A.InIdFlag = '1' THEN In2.RegionNameChinese
                            WHEN A.InIdFlag = '2' THEN In3.DepartName
                        END AS inName,
                        D.BrandNameChinese AS brandName
                    ]]>
                </isEmpty>
            </dynamic>
        <![CDATA[
            FROM Basis.BIN_DepotBusiness A
            LEFT JOIN Basis.BIN_DepotInfo Out1
            ON A.OutID = Out1.BIN_DepotInfoID
            LEFT JOIN Basis.BIN_Region Out2
            ON A.OutID = Out2.BIN_RegionID
            LEFT JOIN Basis.BIN_Organization Out3
            ON A.OutID = Out3.BIN_OrganizationID
            LEFT JOIN Basis.BIN_DepotInfo In1
            ON A.InID = In1.BIN_DepotInfoID
            LEFT JOIN Basis.BIN_Region In2
            ON A.InID = In2.BIN_RegionID
            LEFT JOIN Basis.BIN_Organization In3
            ON A.InID = In3.BIN_OrganizationID
            JOIN Basis.BIN_BrandInfo D
            ON A.BIN_BrandInfoID = D.BIN_BrandInfoID
        WHERE
            A.ValidFlag = '1'
            AND A.BIN_BrandInfoID = #brandInfoId#
            AND A.BIN_OrganizationInfoID = #organizationInfoId#
        )T WHERE 1=1
        ]]>
        <dynamic>
            <isNotEmpty prepend = "AND" property="businessType">
                T.BusinessType = #businessType#
            </isNotEmpty>
            <isNotEmpty prepend = "AND" property="code">
                <![CDATA[
                    (T.outCode LIKE '%'+#code#+'%' OR T.inCode LIKE '%'+#code#+'%')
                ]]>
            </isNotEmpty>
            <isNotEmpty prepend = "AND" property="name">
                <![CDATA[
                    (T.outName LIKE '%'+#name#+'%' OR T.inName LIKE '%'+#name#+'%')
                ]]>
            </isNotEmpty>
        </dynamic>
	</sql>
	
	<!--取得仓库业务关系list-->
	<select id="getDepotBusinessList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<include refid="BINOLCMINC99.pageheader" />
        <include refid="BINOLSTJCS05.getDepotBusinessSQL" />
        <include refid="BINOLCMINC99.pagefooter" />
	</select>
	
	<!--取得仓库业务关系总数-->
	<select id="getDepotBusinessCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
            SELECT COUNT(SORT_T1.depotBusinessId) AS count FROM (
        ]]>
        <include refid="BINOLSTJCS05.getDepotBusinessSQL" />
        <![CDATA[
            )SORT_T1
        ]]>
	</select>
	
	<!--往仓库业务表中插入数据-->
	<insert id="insertToDepotBusiness" parameterClass="java.util.HashMap">
		INSERT INTO 
			Basis.BIN_DepotBusiness
           	(
				[BIN_OrganizationInfoID]
           		,[BIN_BrandInfoID]
           		,[BusinessType]
           		,[OutID]
           		,[OutIdFlag]
           		,[InID]
           		,[InIdFlag]
           		,[ValidFlag]
           		,[CreateTime]
           		,[CreatedBy]
           		,[CreatePGM]
           		,[UpdateTime]
           		,[UpdatedBy]
           		,[UpdatePGM]
          	 	,[ModifyCount]
			)
     	VALUES
           (
		   		#BIN_OrganizationInfoID#,
           		#BIN_BrandInfoID#,
          	 	#BusinessType#,
           		#OutID#,
           		#OutIdFlag#,
           		#InID#,
           		#InIdFlag#,
           		'1',
           		GETDATE(),
           		#CreatedBy#,
           		'BINOLSTJCS05',
           		GETDATE(),
           		#UpdatedBy#,
           		'BINOLSTJCS05',
           		0
			)
	</insert>
	
	<!--删除仓库业务关系-->
	<delete id="deleteDepotBusiness" parameterClass="java.util.HashMap">
		DELETE FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_DepotBusinessID = #BIN_DepotBusinessID#
	</delete>
	
	<!--获取柜台仓库及其所属区域-->
	<select id="getCounterDeportAndRegion" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			-1 AS flagId,
			C.BIN_RegionID AS regionId,
			B.BIN_RegionID AS provinceId,
			A.BIN_RegionID AS cityId,
			E.BIN_DepotInfoID AS deportId,
			E.TestType AS testType,
			<dynamic>
				<isNotEmpty property="language">
					<isEqual property = "language" compareValue="en_US">
						'Counter Deport' AS regionName,
						case  
							when C.RegionCode IS NULL 
							then C.RegionNameForeign
							else '('+C.RegionCode+')'+C.RegionNameForeign end AS regionName, 
						case  
							when B.RegionCode IS NULL 
							then B.RegionNameForeign
							else '('+B.RegionCode+')'+B.RegionNameForeign end AS provinceName,                                                                                  
						case  
							when A.RegionCode IS NULL 
							then A.RegionNameForeign
							else '('+A.RegionCode+')'+A.RegionNameForeign end AS cityName, 
						case
							when E.DepotCode IS NULL
							then E.DepotNameEN
							else '('+E.DepotCode+')'+E.DepotNameEN end AS deportName,
					</isEqual>
					<isEqual property = "language" compareValue="zh_CN">
						'柜台仓库' AS flagName,
						case  
							when C.RegionCode IS NULL 
							then C.RegionNameChinese
							else '('+C.RegionCode+')'+C.RegionNameChinese end  AS regionName, 
						case  
							when B.RegionCode IS NULL 
							then B.RegionNameChinese
							else '('+B.RegionCode+')'+B.RegionNameChinese end AS provinceName,                                                                                  
						case  
							when A.RegionCode IS NULL 
							then A.RegionNameChinese
							else '('+A.RegionCode+')'+A.RegionNameChinese end AS cityName, 
						case
							when E.DepotCode IS NULL
							then E.DepotNameCN
							else '('+E.DepotCode+')'+E.DepotNameCN end AS deportName,
					</isEqual>
				</isNotEmpty>
				<isEmpty property="language">
					'柜台仓库' AS flagName,
						case  
							when C.RegionCode IS NULL 
							then C.RegionNameChinese
							else '('+C.RegionCode+')'+C.RegionNameChinese end  AS regionName, 
						case  
							when B.RegionCode IS NULL 
							then B.RegionNameChinese
							else '('+B.RegionCode+')'+B.RegionNameChinese end AS provinceName,                                                                                  
						case  
							when A.RegionCode IS NULL 
							then A.RegionNameChinese
							else '('+A.RegionCode+')'+A.RegionNameChinese end AS cityName, 
						case
							when E.DepotCode IS NULL
							then E.DepotNameCN
							else '('+E.DepotCode+')'+E.DepotNameCN end AS deportName,   
				</isEmpty>
			</dynamic>      
			'1' AS deportFlag
		FROM                        
			Basis.BIN_Region A,            
			Basis.BIN_Region B,            
			Basis.BIN_Region C,            
			Basis.BIN_CounterInfo D,              
			Basis.BIN_Region AD,
			Basis.BIN_DepotInfo E,
			Basis.BIN_InventoryInfo F  
		WHERE            
			C.BIN_OrganizationInfoID = #organizationInfoId#         
			AND C.BIN_BrandInfoID = #brandInfoId#        
			AND C.RegionType = '0'     
			AND A.NodeID.GetAncestor(1) = B.NodeID        
			AND B.NodeID.GetAncestor(1) = C.NodeID        
			AND D.BIN_RegionID = AD.BIN_RegionID        
			AND AD.NodeID.IsDescendantOf(A.NodeID)=1        
			AND D.BIN_OrganizationID = F.BIN_OrganizationID
			AND E.BIN_DepotInfoID =  F.BIN_InventoryInfoID    
			AND D.ValidFlag = '1'     
			AND A.ValidFlag = '1'     
			AND B.ValidFlag = '1'     
			AND C.ValidFlag = '1'
			AND E.DepotType = '02'  
	</select>
	
	<!--获取带有柜台仓库的所有区域-->
	<select id="getRegion" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			-1 AS flagId,
			<dynamic>
				<isNotEmpty property="language">
					<isEqual property = "language" compareValue="en_US">
						'Region' AS flagName,
					</isEqual>
					<isEqual property = "language" compareValue="zh_CN">
						'区域' AS flagName,
					</isEqual>
				</isNotEmpty>
				<isEmpty property="language">
					'区域' AS flagName,  
				</isEmpty>
			</dynamic>       
			C.BIN_RegionID AS regionId,
			<dynamic>
				<isNotEmpty property="language">
					<isEqual property = "language" compareValue="en_US">
						C.RegionNameForeign AS regionName,
					</isEqual>
					<isEqual property = "language" compareValue="zh_CN">
						C.RegionNameChinese AS regionName,
					</isEqual>
				</isNotEmpty>
				<isEmpty property="language">
					C.RegionNameChinese AS regionName,  
				</isEmpty>
			</dynamic>     
			B.BIN_RegionID AS provinceId,
			<dynamic>
				<isNotEmpty property="language">
					<isEqual property = "language" compareValue="en_US">                                                   
						B.RegionNameForeign AS provinceName,
					</isEqual>
					<isEqual property = "language" compareValue="zh_CN">                                                   
						B.RegionNameChinese AS provinceName,
					</isEqual>
				</isNotEmpty>
				<isEmpty property="language">                                               
					B.RegionNameChinese AS provinceName,
				</isEmpty>
			</dynamic>     
			A.BIN_RegionID AS cityId,
			<dynamic>
				<isNotEmpty property="language">
					<isEqual property = "language" compareValue="en_US">
						A.RegionNameForeign AS cityName
					</isEqual>
					<isEqual property = "language" compareValue="zh_CN">
						A.RegionNameChinese AS cityName
					</isEqual>
				</isNotEmpty>
				<isEmpty property="language">
					A.RegionNameChinese AS cityName    
				</isEmpty>
			</dynamic>     
		FROM                        
			Basis.BIN_Region A,            
			Basis.BIN_Region B,            
			Basis.BIN_Region C
		WHERE            
			C.BIN_OrganizationInfoID = #organizationInfoId#         
			AND C.BIN_BrandInfoID = #brandInfoId#       
			AND C.RegionType = '0'     
			AND A.NodeID.GetAncestor(1) = B.NodeID        
			AND B.NodeID.GetAncestor(1) = C.NodeID
			AND A.ValidFlag = '1'     
			AND B.ValidFlag = '1'     
			AND C.ValidFlag = '1'
			AND A.BIN_RegionID in(
			SELECT
				distinct AD.BIN_RegionID
			FROM
				Basis.BIN_CounterInfo D,           
				Basis.BIN_Region AD,
				Basis.BIN_DepotInfo E,
				Basis.BIN_InventoryInfo F
			WHERE
				D.BIN_OrganizationID = F.BIN_OrganizationID
				AND E.BIN_DepotInfoID =  F.BIN_InventoryInfoID
				AND D.BIN_RegionID = AD.BIN_RegionID
				AND D.ValidFlag = '1'
				AND AD.ValidFlag = '1'
				AND E.ValidFlag = '1'
				AND F.ValidFlag = '1' 
			)
	</select>
	
	<!--取得非柜台实体仓库List-->
	<select id="getDepotInfoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			-2 AS flagId,
			<dynamic>
				<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							'Non-counter' AS flagName,
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							'非柜台仓库' AS flagName,
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						'非柜台仓库' AS flagName,
					</isEmpty>
			</dynamic>
			BIN_DepotInfoID AS inventoryInfoId,
			TestType AS testType,
			<dynamic>
				<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							'('+DepotCode+')'+DepotNameEN AS inventoryName,
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							'('+DepotCode+')'+DepotNameCN AS inventoryName,
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						'('+DepotCode+')'+DepotNameCN AS inventoryName,
					</isEmpty>
			</dynamic>
			'1' AS deportFlag
		FROM
			Basis.BIN_DepotInfo
		WHERE
			BIN_OrganizationInfoID = #organizationInfoId#
			AND DepotType = '01'
			AND ValidFlag = 1
			<isNotEmpty prepend = "AND" property="inventoryInfoId">
				BIN_DepotInfoID = #inventoryInfoId#
			</isNotEmpty>
	</select>
	
	<!-- 部门组织结构List -->
    <select id="getDepartInfoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
        SELECT
            BIN_OrganizationID AS id,
            Level AS level,
            Path AS path,
            '(' + DepartCode + ')' + DepartName AS name,
            TestType AS testType,
            '1' AS deportFlag
        FROM
            Basis.BIN_Organization
        WHERE
            BIN_OrganizationInfoID = #organizationInfoId#
            AND BIN_BrandInfoID = #brandInfoId#
            AND ValidFlag = '1'
        ORDER BY Path
        ]]>
    </select>
	
	<!--判断仓库业务关系是否已经存在-->
	<select id="isExist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			BIN_DepotBusinessID
		FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_OrganizationInfoID = #BIN_OrganizationInfoID#
			AND BIN_BrandInfoID = #BIN_BrandInfoID#
			AND BusinessType = #BusinessType#
			AND OutID = #OutID#
			AND OutIdFlag = #OutIdFlag#
			AND InID = #InID#
			AND InIdFlag = #InIdFlag#
			AND ValidFlag = '1'
	</select>
	
	<!--根据入库ID删除相应的退货业务，逆向业务中的入库ID对应的都是仓库ID-->
	<delete id="deleteReturnByInId" parameterClass="java.util.HashMap">
		DELETE FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_OrganizationInfoID=#BIN_OrganizationInfoID#
			AND BIN_BrandInfoID = #BIN_BrandInfoID#
			AND BusinessType= #BusinessType#
			AND InID = #DeportID#
            <isEqual property="configByDepOrg" compareValue="2">
                AND OutIdFlag = '2'
            </isEqual>
            <isNotEqual property="configByDepOrg" compareValue="2">
                AND OutIdFlag != '2'
            </isNotEqual>
	</delete>
	
	<!--根据出库ID以及业务类型删除相应的记录-->
	<delete id="deleteDeliverByOuId" parameterClass="java.util.HashMap">
		DELETE FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_OrganizationInfoID=#BIN_OrganizationInfoID#
			AND BIN_BrandInfoID = #BIN_BrandInfoID#
			AND BusinessType= #BusinessType#
			AND OutID = #DeportID#
            <isEqual property="configByDepOrg" compareValue="2">
                AND InIdFlag = '2'
            </isEqual>
            <isNotEqual property="configByDepOrg" compareValue="2">
                AND InIdFlag != '2'
            </isNotEqual>
	</delete>
	<!--根据入库ID以及业务类型删除相应的记录-->
	<delete id="deleteDeliverByInId" parameterClass="java.util.HashMap">
		DELETE FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_OrganizationInfoID=#BIN_OrganizationInfoID#
			AND BIN_BrandInfoID = #BIN_BrandInfoID#
			AND BusinessType= #BusinessType#
			AND InID = #DeportID#
			<isEqual property="configByDepOrg" compareValue="2">
                AND OutIdFlag = '2'
			</isEqual>
            <isNotEqual property="configByDepOrg" compareValue="2">
                AND OutIdFlag != '2'
            </isNotEqual>
	</delete>
	
	<!--根据入库ID查询出所有的退货业务对应的出库ID及其出库ID区分标志，退货业务中的入库ID对应的都是仓库ID-->
	<select id="getReturnOutIdByInId" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			OutID AS outId,
			OutIdFlag AS outIdFlag
		FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_OrganizationInfoID = #BIN_OrganizationInfoID#
			AND BIN_BrandInfoID = #BIN_BrandInfoID#
			AND BusinessType = '60'
			AND InID = #DeportID#
			AND ValidFlag = '1'
	</select>
	
	<!--根据出库ID查询出所有的发货或者订货业务对应的入库ID及其入库ID区分标志，发货和订货业务中的出库ID对应的都是仓库ID-->
	<select id="getDeliverInIdByOutId" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			InID AS inOutId,
			InIdFlag AS inOutIdFlag
		FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_OrganizationInfoID = #BIN_OrganizationInfoID#
			AND BIN_BrandInfoID = #BIN_BrandInfoID#
			AND BusinessType = #BusinessType#
			AND OutID = #DeportID#
			AND ValidFlag = '1'
			<isNotEmpty property="configByDepOrg">
                <isEqual property="configByDepOrg" compareValue="2">
                    AND InIdFlag = '2'
                </isEqual>
			</isNotEmpty>
			<isEmpty property="configByDepOrg">
                AND InIdFlag != '2'
			</isEmpty>
	</select>
	
	<!--根据入库ID查询出所有的退库业务对应的出库ID及其出库ID区分标志，退库业务中的入库ID对应的都是仓库ID-->
	<select id="getOutIdByInId" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			OutID AS inOutId,
			OutIdFlag AS inOutIdFlag
		FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_OrganizationInfoID = #BIN_OrganizationInfoID#
			AND BIN_BrandInfoID = #BIN_BrandInfoID#
			AND BusinessType = #BusinessType#
			AND InID = #DeportID#
			AND ValidFlag = '1'
            <isNotEmpty property="configByDepOrg">
                <isEqual property="configByDepOrg" compareValue="2">
                    AND OutIdFlag = '2'
                </isEqual>
            </isNotEmpty>
            <isEmpty property="configByDepOrg">
                AND OutIdFlag != '2'
            </isEmpty>
	</select>
	
	<!--根据仓库业务关系ID查询出出库ID（编辑订货和发货业务时使用，出库方的ID对应的永远是非柜台的实体仓库ID）-->
	<select id="getOutIdById" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			OutID,
			OutIdFlag,
			BIN_BrandInfoID
		FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_DepotBusinessID = #BIN_DepotBusinessID#
	</select>
	
	<!--根据仓库业务关系ID查询出入库ID（编辑退库业务时使用，入库方的ID对应的永远是非柜台的实体仓库ID）-->
	<select id="getInIdById" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			InID,
			InIdFlag,
			BIN_BrandInfoID
		FROM
			Basis.BIN_DepotBusiness
		WHERE
			BIN_DepotBusinessID = #BIN_DepotBusinessID#
	</select>
	
	<sql id="getDepotBusinessByOrgRelationSQL">
		<isNotEmpty property="businessType">
			<isEqual property = "businessType" compareValue="30">
				<![CDATA[
				SELECT
					distinct
					A2.DepotCode AS outCode,
					B2.DepotCode AS inCode,
					'30' AS businessType,
				]]>
						<isNotEmpty property="language">
							<isEqual property = "language" compareValue="en_US">
								<![CDATA[A2.DepotNameEN AS outName,
								B2.DepotNameEN AS inName,
								C.BrandNameForeign AS brandName]]>
							</isEqual>
							<isEqual property = "language" compareValue="zh_CN">
								<![CDATA[A2.DepotNameCN AS outName,
								B2.DepotNameCN AS inName,
								C.BrandNameChinese AS brandName]]>
							</isEqual>
						</isNotEmpty>
						<isEmpty property="language">
							<![CDATA[A2.DepotNameCN AS outName,
							B2.DepotNameCN AS inName,
							C.BrandNameChinese AS brandName]]>
						</isEmpty>
				<![CDATA[
				FROM
					Basis.BIN_Organization	A
					JOIN Basis.BIN_InventoryInfo A1
					ON(A.BIN_OrganizationID = A1.BIN_OrganizationID
					AND A1.ValidFlag = '1')
					JOIN Basis.BIN_DepotInfo A2
					ON(A1.BIN_InventoryInfoID = A2.BIN_DepotInfoID
					AND A2.ValidFlag = '1'),
					Basis.BIN_Organization	B
					JOIN Basis.BIN_InventoryInfo B1
					ON(B.BIN_OrganizationID = B1.BIN_OrganizationID
					AND B1.ValidFlag = '1')
					JOIN Basis.BIN_DepotInfo B2
					ON(B1.BIN_InventoryInfoID = B2.BIN_DepotInfoID
					AND B2.ValidFlag = '1'),
					Basis.BIN_BrandInfo C
				WHERE
					B.NodeID.IsDescendantOf(A.NodeID) = 1
					AND A.ValidFlag = '1'
					AND B.ValidFlag = '1'
					AND A.TestType = B.TestType
				]]>
					<isNotEmpty prepend = "AND" property="brandInfoId">
						A.BIN_BrandInfoID = #brandInfoId#
					</isNotEmpty>
				<![CDATA[
					AND A1.BIN_BrandInfoID = C.BIN_BrandInfoID
					AND A1.BIN_OrganizationInfoID = #organizationInfoId#
					AND A.BIN_OrganizationID != B.BIN_OrganizationID
				]]>
						<isNotEmpty prepend = "AND" property="code">
							<![CDATA[(A2.DepotCode LIKE '%'+#code#+'%'
							OR B2.DepotCode LIKE '%'+#code#+'%')]]>
						</isNotEmpty>
						<isNotEmpty prepend = "AND" property="name">
							<isNotEmpty property="language">
								<isEqual property = "language" compareValue="en_US">
									<![CDATA[(B2.DepotNameEN LIKE '%'+#name#+'%'
									OR A2.DepotNameEN LIKE '%'+#name#+'%')]]>
								</isEqual>
								<isEqual property = "language" compareValue="zh_CN">
									<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
									OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
								</isEqual>
							</isNotEmpty>
							<isEmpty property="language">
								<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
									OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
							</isEmpty>
						</isNotEmpty>
			</isEqual>
			<isEqual property = "businessType" compareValue="40">
				<![CDATA[
				SELECT
					distinct
					A2.DepotCode AS outCode,
					B2.DepotCode AS inCode,
					'40' AS businessType,
				]]>
						<isNotEmpty property="language">
							<isEqual property = "language" compareValue="en_US">
								<![CDATA[A2.DepotNameEN AS outName,
								B2.DepotNameEN AS inName,
								C.BrandNameForeign AS brandName]]>
							</isEqual>
							<isEqual property = "language" compareValue="zh_CN">
								<![CDATA[A2.DepotNameCN AS outName,
								B2.DepotNameCN AS inName,
								C.BrandNameChinese AS brandName]]>
							</isEqual>
						</isNotEmpty>
						<isEmpty property="language">
							<![CDATA[A2.DepotNameCN AS outName,
							B2.DepotNameCN AS inName,
							C.BrandNameChinese AS brandName]]>
						</isEmpty>
				<![CDATA[
				FROM
					Basis.BIN_Organization	A
					JOIN Basis.BIN_InventoryInfo A1
					ON(A.BIN_OrganizationID = A1.BIN_OrganizationID
					AND A1.ValidFlag = '1')
					JOIN Basis.BIN_DepotInfo A2
					ON(A1.BIN_InventoryInfoID = A2.BIN_DepotInfoID
					AND A2.ValidFlag = '1'),
					Basis.BIN_Organization	B
					JOIN Basis.BIN_InventoryInfo B1
					ON(B.BIN_OrganizationID = B1.BIN_OrganizationID
					AND B1.ValidFlag = '1')
					JOIN Basis.BIN_DepotInfo B2
					ON(B1.BIN_InventoryInfoID = B2.BIN_DepotInfoID
					AND B2.ValidFlag = '1'),
					Basis.BIN_BrandInfo C
				WHERE
					B.NodeID.IsDescendantOf(A.NodeID) = 1
					AND A.ValidFlag = '1'
					AND B.ValidFlag = '1'
					AND A.TestType = B.TestType
				]]>
					<isNotEmpty prepend = "AND" property="brandInfoId">
						A.BIN_BrandInfoID = #brandInfoId#
					</isNotEmpty>
				<![CDATA[
					AND A1.BIN_BrandInfoID = C.BIN_BrandInfoID
					AND A1.BIN_OrganizationInfoID = #organizationInfoId#
					AND A.BIN_OrganizationID != B.BIN_OrganizationID
				]]>
						<isNotEmpty prepend = "AND" property="code">
							<![CDATA[(A2.DepotCode LIKE '%'+#code#+'%'
							OR B2.DepotCode LIKE '%'+#code#+'%')]]>
						</isNotEmpty>
						<isNotEmpty prepend = "AND" property="name">
							<isNotEmpty property="language">
								<isEqual property = "language" compareValue="en_US">
									<![CDATA[(B2.DepotNameEN LIKE '%'+#name#+'%'
									OR A2.DepotNameEN LIKE '%'+#name#+'%')]]>
								</isEqual>
								<isEqual property = "language" compareValue="zh_CN">
									<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
									OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
								</isEqual>
							</isNotEmpty>
							<isEmpty property="language">
								<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
									OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
							</isEmpty>
						</isNotEmpty>
			</isEqual>
			<isEqual property = "businessType" compareValue="60">
				<![CDATA[
				SELECT
					distinct
					A2.DepotCode AS inCode,
					B2.DepotCode AS outCode,
					'60' AS businessType,
				]]>
						<isNotEmpty property="language">
							<isEqual property = "language" compareValue="en_US">
								<![CDATA[A2.DepotNameEN AS inName,
								B2.DepotNameEN AS outName,
								C.BrandNameForeign AS brandName]]>
							</isEqual>
							<isEqual property = "language" compareValue="zh_CN">
								<![CDATA[A2.DepotNameCN AS inName,
								B2.DepotNameCN AS outName,
								C.BrandNameChinese AS brandName]]>
							</isEqual>
						</isNotEmpty>
						<isEmpty property="language">
							<![CDATA[A2.DepotNameCN AS inName,
							B2.DepotNameCN AS outName,
							C.BrandNameChinese AS brandName]]>
						</isEmpty>
				<![CDATA[
				FROM
					Basis.BIN_Organization	A
					JOIN Basis.BIN_InventoryInfo A1
					ON(A.BIN_OrganizationID = A1.BIN_OrganizationID
					AND A1.ValidFlag = '1')
					JOIN Basis.BIN_DepotInfo A2
					ON(A1.BIN_InventoryInfoID = A2.BIN_DepotInfoID
					AND A2.ValidFlag = '1'),
					Basis.BIN_Organization	B
					JOIN Basis.BIN_InventoryInfo B1
					ON(B.BIN_OrganizationID = B1.BIN_OrganizationID
					AND B1.ValidFlag = '1')
					JOIN Basis.BIN_DepotInfo B2
					ON(B1.BIN_InventoryInfoID = B2.BIN_DepotInfoID
					AND B2.ValidFlag = '1'),
					Basis.BIN_BrandInfo C
				WHERE
					B.NodeID.IsDescendantOf(A.NodeID) = 1
					AND A.ValidFlag = '1'
					AND B.ValidFlag = '1'
					AND A.TestType = B.TestType
				]]>
					<isNotEmpty prepend = "AND" property="brandInfoId">
						A.BIN_BrandInfoID = #brandInfoId#
					</isNotEmpty>
				<![CDATA[
					AND A1.BIN_BrandInfoID = C.BIN_BrandInfoID
					AND A1.BIN_OrganizationInfoID = #organizationInfoId#
					AND A.BIN_OrganizationID != B.BIN_OrganizationID
				]]>
						<isNotEmpty prepend = "AND" property="code">
							<![CDATA[(A2.DepotCode LIKE '%'+#code#+'%'
							OR B2.DepotCode LIKE '%'+#code#+'%')]]>
						</isNotEmpty>
						<isNotEmpty prepend = "AND" property="name">
							<isNotEmpty property="language">
								<isEqual property = "language" compareValue="en_US">
									<![CDATA[(B2.DepotNameEN LIKE '%'+#name#+'%'
									OR A2.DepotNameEN LIKE '%'+#name#+'%')]]>
								</isEqual>
								<isEqual property = "language" compareValue="zh_CN">
									<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
									OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
								</isEqual>
							</isNotEmpty>
							<isEmpty property="language">
								<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
									OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
							</isEmpty>
						</isNotEmpty>
			</isEqual>
		</isNotEmpty>
		<isEmpty property="businessType">
			<![CDATA[
			SELECT
				distinct
				A2.DepotCode AS outCode,
				B2.DepotCode AS inCode,
				'30' AS businessType,
			]]>
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[A2.DepotNameEN AS outName,
							B2.DepotNameEN AS inName,
							C.BrandNameForeign AS brandName]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[A2.DepotNameCN AS outName,
							B2.DepotNameCN AS inName,
							C.BrandNameChinese AS brandName]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[A2.DepotNameCN AS outName,
						B2.DepotNameCN AS inName,
						C.BrandNameChinese AS brandName]]>
					</isEmpty>
			<![CDATA[
			FROM
				Basis.BIN_Organization	A
				JOIN Basis.BIN_InventoryInfo A1
				ON(A.BIN_OrganizationID = A1.BIN_OrganizationID
				AND A1.ValidFlag = '1')
				JOIN Basis.BIN_DepotInfo A2
				ON(A1.BIN_InventoryInfoID = A2.BIN_DepotInfoID
				AND A2.ValidFlag = '1'),
				Basis.BIN_Organization	B
				JOIN Basis.BIN_InventoryInfo B1
				ON(B.BIN_OrganizationID = B1.BIN_OrganizationID
				AND B1.ValidFlag = '1')
				JOIN Basis.BIN_DepotInfo B2
				ON(B1.BIN_InventoryInfoID = B2.BIN_DepotInfoID
				AND B2.ValidFlag = '1'),
				Basis.BIN_BrandInfo C
			WHERE
				B.NodeID.IsDescendantOf(A.NodeID) = 1
				AND A.ValidFlag = '1'
				AND B.ValidFlag = '1'
				AND A.TestType = B.TestType
			]]>
				<isNotEmpty prepend = "AND" property="brandInfoId">
					A.BIN_BrandInfoID = #brandInfoId#
				</isNotEmpty>
			<![CDATA[
				AND A1.BIN_BrandInfoID = C.BIN_BrandInfoID
				AND A1.BIN_OrganizationInfoID = #organizationInfoId#
				AND A.BIN_OrganizationID != B.BIN_OrganizationID
			]]>
				<isNotEmpty prepend = "AND" property="code">
					<![CDATA[(A2.DepotCode LIKE '%'+#code#+'%'
					OR B2.DepotCode LIKE '%'+#code#+'%')]]>
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="name">
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[(B2.DepotNameEN LIKE '%'+#name#+'%'
							OR A2.DepotNameEN LIKE '%'+#name#+'%')]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
							OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
							OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
					</isEmpty>
				</isNotEmpty>
				UNION
			<![CDATA[
				SELECT
				distinct
				A2.DepotCode AS outCode,
				B2.DepotCode AS inCode,
				'40' AS businessType,
			]]>
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[A2.DepotNameEN AS outName,
							B2.DepotNameEN AS inName,
							C.BrandNameForeign AS brandName]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[A2.DepotNameCN AS outName,
							B2.DepotNameCN AS inName,
							C.BrandNameChinese AS brandName]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[A2.DepotNameCN AS outName,
						B2.DepotNameCN AS inName,
						C.BrandNameChinese AS brandName]]>
					</isEmpty>
			<![CDATA[
			FROM
				Basis.BIN_Organization	A
				JOIN Basis.BIN_InventoryInfo A1
				ON(A.BIN_OrganizationID = A1.BIN_OrganizationID
				AND A1.ValidFlag = '1')
				JOIN Basis.BIN_DepotInfo A2
				ON(A1.BIN_InventoryInfoID = A2.BIN_DepotInfoID
				AND A2.ValidFlag = '1'),
				Basis.BIN_Organization	B
				JOIN Basis.BIN_InventoryInfo B1
				ON(B.BIN_OrganizationID = B1.BIN_OrganizationID
				AND B1.ValidFlag = '1')
				JOIN Basis.BIN_DepotInfo B2
				ON(B1.BIN_InventoryInfoID = B2.BIN_DepotInfoID
				AND B2.ValidFlag = '1'),
				Basis.BIN_BrandInfo C
			WHERE
				B.NodeID.IsDescendantOf(A.NodeID) = 1
				AND A.ValidFlag = '1'
				AND B.ValidFlag = '1'
				AND A.TestType = B.TestType
			]]>
				<isNotEmpty prepend = "AND" property="brandInfoId">
					A.BIN_BrandInfoID = #brandInfoId#
				</isNotEmpty>
			<![CDATA[
				AND A1.BIN_BrandInfoID = C.BIN_BrandInfoID
				AND A1.BIN_OrganizationInfoID = #organizationInfoId#
				AND A.BIN_OrganizationID != B.BIN_OrganizationID
			]]>
				<isNotEmpty prepend = "AND" property="code">
					<![CDATA[(A2.DepotCode LIKE '%'+#code#+'%'
					OR B2.DepotCode LIKE '%'+#code#+'%')]]>
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="name">
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[(B2.DepotNameEN LIKE '%'+#name#+'%'
							OR A2.DepotNameEN LIKE '%'+#name#+'%')]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
							OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
							OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
					</isEmpty>
				</isNotEmpty>
				UNION
			<![CDATA[
			SELECT
				distinct
				B2.DepotCode AS outCode,
				A2.DepotCode AS inCode,
				'60' AS businessType,
			]]>
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[
							B2.DepotNameEN AS outName,
							A2.DepotNameEN AS inName,
							C.BrandNameForeign AS brandName]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[
							B2.DepotNameCN AS outName,
							A2.DepotNameCN AS inName,
							C.BrandNameChinese AS brandName]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[
						B2.DepotNameCN AS outName,
						A2.DepotNameCN AS inName,
						C.BrandNameChinese AS brandName]]>
					</isEmpty>
			<![CDATA[
			FROM
				Basis.BIN_Organization	A
				JOIN Basis.BIN_InventoryInfo A1
				ON(A.BIN_OrganizationID = A1.BIN_OrganizationID
				AND A1.ValidFlag = '1')
				JOIN Basis.BIN_DepotInfo A2
				ON(A1.BIN_InventoryInfoID = A2.BIN_DepotInfoID
				AND A2.ValidFlag = '1'),
				Basis.BIN_Organization	B
				JOIN Basis.BIN_InventoryInfo B1
				ON(B.BIN_OrganizationID = B1.BIN_OrganizationID
				AND B1.ValidFlag = '1')
				JOIN Basis.BIN_DepotInfo B2
				ON(B1.BIN_InventoryInfoID = B2.BIN_DepotInfoID
				AND B2.ValidFlag = '1'),
				Basis.BIN_BrandInfo C
			WHERE
				B.NodeID.IsDescendantOf(A.NodeID) = 1
				AND A.ValidFlag = '1'
				AND B.ValidFlag = '1'
				AND A.TestType = B.TestType
			]]>
				<isNotEmpty prepend = "AND" property="brandInfoId">
					A.BIN_BrandInfoID = #brandInfoId#
				</isNotEmpty>
			<![CDATA[
				AND A1.BIN_BrandInfoID = C.BIN_BrandInfoID
				AND A1.BIN_OrganizationInfoID = #organizationInfoId#
				AND A.BIN_OrganizationID != B.BIN_OrganizationID
			]]>
				<isNotEmpty prepend = "AND" property="code">
					<![CDATA[(A2.DepotCode LIKE '%'+#code#+'%'
					OR B2.DepotCode LIKE '%'+#code#+'%')]]>
				</isNotEmpty>
				<isNotEmpty prepend = "AND" property="name">
					<isNotEmpty property="language">
						<isEqual property = "language" compareValue="en_US">
							<![CDATA[(B2.DepotNameEN LIKE '%'+#name#+'%'
							OR A2.DepotNameEN LIKE '%'+#name#+'%')]]>
						</isEqual>
						<isEqual property = "language" compareValue="zh_CN">
							<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
							OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
						</isEqual>
					</isNotEmpty>
					<isEmpty property="language">
						<![CDATA[(B2.DepotNameCN LIKE '%'+#name#+'%'
							OR A2.DepotNameCN LIKE '%'+#name#+'%')]]>
					</isEmpty>
				</isNotEmpty>
		</isEmpty>
	</sql>
	
	<!--取得仓库业务关系list,按组织层级关系-->
	<select id="getDepotBusListByOrgRel" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<include refid="BINOLCMINC99.pageheader" />
        <include refid="BINOLSTJCS05.getDepotBusinessByOrgRelationSQL" />
        <include refid="BINOLCMINC99.pagefooter" />
	</select>
	
	<!--取得仓库业务关系总数,按组织层级关系-->
	<select id="getDepotBusCountByOrgRel" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
            SELECT COUNT(*) AS count FROM (
        ]]>
        <include refid="BINOLSTJCS05.getDepotBusinessByOrgRelationSQL" />
        <![CDATA[
            )SORT_T1
        ]]>
	</select>
</sqlMap>