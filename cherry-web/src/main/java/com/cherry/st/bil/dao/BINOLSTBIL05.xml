<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINOLSTBIL05">
    <!-- 报损单查询sql文  -->
    <sql id="OutboundQuery">
    	<![CDATA[SELECT]]>
		<isEmpty property="prtVendorId">
			<isEmpty property="nameTotal">
				DISTINCT
			</isEmpty>
		</isEmpty>
        <![CDATA[    
				A.BIN_BrandInfoID,
                A.BIN_OutboundFreeID AS outboundFreeId,
				A.BillNoIF AS billNo,  
				A.VerifiedFlag AS verifiedFlag,                                                                      
				A.OperateDate AS date,
				E.LogicInventoryCode AS logicInventoryCode,
				D.DepotCode AS depotCode,
				F.NodeID AS nodeID,
				F.BIN_RegionID AS regionID,
				F.BIN_ProvinceID AS provinceID,
				F.BIN_CityID AS cityID,
				F.DepartCode AS departCode,
				H.EmployeeCode AS employeeCode,
				G.EmployeeCode AS employeeCodeAudit
            ]]>
        <dynamic>
        <isNotEmpty property="language">
            <isEqual property="language" compareValue="en_US">
            ,H.EmployeeNameForeign AS employeeName
			,G.EmployeeNameForeign AS employeeNameAudit
            ,'(' + E.LogicInventoryCode + ')'+E.InventoryNameCN AS logicInventoryName   
		    ,'(' + F.DepartCode + ')'+F.DepartName AS departName 
			,'(' + D.DepotCode + ')'+D.DepotNameCN AS inventoryName      
			,E.InventoryNameEN AS logicInventoryNameOnly,
			,F.NameForeign AS departNameOnly,
			,D.DepotNameEN AS depotNameOnly,
            </isEqual>
            <isEqual property="language" compareValue="zh_CN">
            ,H.EmployeeName AS employeeName
			,G.EmployeeName AS employeeNameAudit
            ,'(' + E.LogicInventoryCode + ')'+E.InventoryNameCN AS logicInventoryName   
		    ,'(' + F.DepartCode + ')'+F.DepartName AS departName 
			,'(' + D.DepotCode + ')'+D.DepotNameCN AS inventoryName     
			,E.InventoryNameCN AS logicInventoryNameOnly
			,F.DepartName AS departNameOnly
			,D.DepotNameCN AS depotNameOnly
            </isEqual>
        </isNotEmpty>
        <isEmpty property="language">
        	,H.EmployeeName AS employeeName
			,G.EmployeeName AS employeeNameAudit
            ,'(' + E.LogicInventoryCode + ')'+E.InventoryNameCN AS logicInventoryName   
		    ,'(' + F.DepartCode + ')'+F.DepartName AS departName 
			,'(' + D.DepotCode + ')'+D.DepotNameCN AS inventoryName
			,E.InventoryNameCN AS logicInventoryNameOnly
			,F.DepartName AS departNameOnly
			,D.DepotNameCN AS depotNameOnly
	   </isEmpty>
        </dynamic>
		<isEmpty property="prtVendorId">
			<isNotEmpty property="nameTotal">
				,ISNULL(C.Quantity,0) AS
				totalQuantity
				,ISNULL(C.Quantity,0) * ISNULL(C.Price,0) AS
				totalAmount
				</isNotEmpty>
			<isEmpty property="nameTotal">
				,ISNULL(A.TotalQuantity,0) AS totalQuantity
				,ISNULL(A.TotalAmount,0) AS totalAmount
				</isEmpty>
		</isEmpty>
		<isNotEmpty property="prtVendorId">
			,ISNULL(C.Quantity,0) AS totalQuantity
			,ISNULL(C.Quantity,0) * ISNULL(C.Price,0) AS totalAmount
		</isNotEmpty>
         <![CDATA[
		 FROM
            Inventory.BIN_OutboundFree A     
			JOIN Inventory.BIN_OutboundFreeDetail C     
			ON(A.BIN_OutboundFreeID  = C.BIN_OutboundFreeID
			AND C.ValidFlag = '1')     
			JOIN Basis.BIN_DepotInfo D     
			ON(C.BIN_DepotInfoID = D.BIN_DepotInfoID 
			AND D.ValidFlag = '1')   
		    LEFT JOIN Basis.BIN_LogicInventory E                 
			ON(C.BIN_LogicInventoryInfoID = E.BIN_LogicInventoryInfoID)  
			JOIN Basis.BIN_Organization F                 
			ON(A.BIN_OrganizationID = F.BIN_OrganizationID 
			AND F.ValidFlag = '1') 
            LEFT JOIN Basis.BIN_Employee H
			ON (A.BIN_EmployeeID = H.BIN_EmployeeID AND H.ValidFlag = '1') 
			LEFT JOIN Basis.BIN_Employee G
			ON A.BIN_EmployeeIDAudit = G.BIN_EmployeeID   
        ]]>

		<isEmpty property="prtVendorId">
		<isNotEmpty property="nameTotal">
   		    JOIN Basis.BIN_ProductVendor I
		    ON(C.BIN_ProductVendorID = I.BIN_ProductVendorID)
		    JOIN Basis.BIN_Product J
		    ON(I.BIN_ProductID = J.BIN_ProductID
			AND J.NameTotal like '%' + #nameTotal# + '%')
      	</isNotEmpty>
		</isEmpty>
		<![CDATA[		
			WHERE
				A.ValidFlag = '1'	
		]]>
       <![CDATA[AND EXISTS (]]>
		<include refid="BINOLCMINC99.getDepartList" />
		<![CDATA[AND A.BIN_OrganizationID = A99.BIN_OrganizationID)]]>
		<isNotEmpty prepend="AND" property="brandInfoId">
			A.BIN_BrandInfoID=#brandInfoId#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[ A.OperateDate >= #startDate# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="endDate">
			<![CDATA[ A.OperateDate <= #endDate# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="billNo">
			(A.BillNoIF LIKE '%' + #billNo# + '%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="verifiedFlag">
			<![CDATA[A.VerifiedFlag = #verifiedFlag#]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="prtVendorId">
			C.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="depotId">
			(C.BIN_DepotInfoID = #depotId#)
		</isNotEmpty>
    </sql>
    
    <!-- 取得报损点单总数  -->
    <select id="getOutboundCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        <![CDATA[
            SELECT  COUNT(SORT_T1.outboundFreeId) AS count FROM (
        ]]>
        <include refid="BINOLSTBIL05.OutboundQuery" />
        <![CDATA[
            )SORT_T1
        ]]>
    </select>
    
    <!-- 取得报损单List  -->
    <select id="getOutboundList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <include refid="BINOLCMINC99.pageheader" />
      	 <![CDATA[
			SELECT	
				T20.*, 
				CASE WHEN EXISTS(SELECT 1 FROM Basis.BIN_PrintLog T10 WHERE 
									T20.BIN_BrandInfoID = T10.BIN_BrandInfoID 
									AND T20.billNo = T10.BillNo) 
				THEN 1 ELSE 0 END AS printStatus
			FROM (
			]]>	
		 <include refid="BINOLSTBIL05.OutboundQuery" />
		<![CDATA[	
			)T20
		]]>	
        <include refid="BINOLCMINC99.pagefooter" />
    </select>
	 <!-- 取得出入库汇总信息【产品作为检索条件】  -->
    <select id="getSumInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
       	<![CDATA[
			SELECT
				ISNULL(SUM(ISNULL(C.Quantity,0)),0) AS sumQuantity,
				ISNULL(SUM(ISNULL(C.Quantity,0) * ISNULL(C.Price,0)),0) AS sumAmount
			FROM				
				Inventory.BIN_OutboundFree A     
				JOIN Inventory.BIN_OutboundFreeDetail C     
				ON(A.BIN_OutboundFreeID  = C.BIN_OutboundFreeID
				AND C.ValidFlag = '1')     
				JOIN Basis.BIN_DepotInfo D     
				ON(C.BIN_DepotInfoID = D.BIN_DepotInfoID 
				AND D.ValidFlag = '1')   
			    JOIN Basis.BIN_LogicInventory E                 
				ON(C.BIN_LogicInventoryInfoID = E.BIN_LogicInventoryInfoID AND E.ValidFlag = '1')  
				JOIN Basis.BIN_Organization F                 
				ON(A.BIN_OrganizationID = F.BIN_OrganizationID 
				AND F.ValidFlag = '1') 
	            LEFT JOIN Basis.BIN_Employee H
				ON (A.BIN_EmployeeID = H.BIN_EmployeeID AND H.ValidFlag = '1') 
				LEFT JOIN Basis.BIN_Employee G
			    ON A.BIN_EmployeeIDAudit = G.BIN_EmployeeID   
			]]>
		<isEmpty property="prtVendorId">
			<isNotEmpty property="nameTotal">
				JOIN Basis.BIN_ProductVendor I
			    ON(C.BIN_ProductVendorID = I.BIN_ProductVendorID)
			    JOIN Basis.BIN_Product J
			    ON(I.BIN_ProductID = J.BIN_ProductID
				AND J.NameTotal like '%' + #nameTotal# + '%')
			</isNotEmpty>
		</isEmpty>
		<![CDATA[		
			WHERE
				A.ValidFlag = '1'	
				]]>
		<![CDATA[AND EXISTS (]]>
		<include refid="BINOLCMINC99.getDepartList" />
		<![CDATA[AND A.BIN_OrganizationID = A99.BIN_OrganizationID)]]>
		<isNotEmpty prepend="AND" property="brandInfoId">
			A.BIN_BrandInfoID=#brandInfoId#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[ A.OperateDate >= #startDate# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="endDate">
			<![CDATA[ A.OperateDate <= #endDate# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="billNo">
			(A.BillNoIF LIKE '%' + #billNo# + '%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="verifiedFlag">
			<![CDATA[A.VerifiedFlag = #verifiedFlag#]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="prtVendorId">
			C.BIN_ProductVendorID = #prtVendorId#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="depotId">
			(C.BIN_DepotInfoID = #depotId#)
		</isNotEmpty>
      </select>
      
      <!-- 报损一览明细Excel导出SQL文 -->
      <sql id="prtOutboundExportQuery">
    	<![CDATA[
    		SELECT
				T0.billNo,
				T0.verifiedFlag,
				T0.date,
				T0.departCode,
				T0.departNameOnly AS departName,
				T0.employeeCode,
				T0.employeeName,
				T0.depotCode,
				T0.depotNameOnly AS depotName,
				T0.logicInventoryCode,
				T0.logicInventoryNameOnly AS logicInventoryName,
				T0.employeeCodeAudit,
				T0.employeeNameAudit,
				A.Comments AS comments,
				ISNULL(A.Quantity, 0) AS detailQuantity,
				CONVERT(decimal(16, 2), ISNULL(A.Price, 0)) AS detailPrice,
				CONVERT(decimal(16, 2), (ISNULL(A.Price, 0) * ISNULL(A.Quantity, 0))) AS detailAmount,
				C.UnitCode AS unitCode,
				B.BarCode AS barCode
    	]]>
    	<dynamic>
        <isNotEmpty property="language">
            <isEqual property="language" compareValue="en_US">
	            ,C.NameForeign AS productName
				,G.NameForeign AS area
				,D.RegionNameForeign AS region
				,E.RegionNameForeign AS province
				,F.RegionNameForeign AS city
            </isEqual>
            <isEqual property="language" compareValue="zh_CN">
	            ,C.NameTotal AS productName
				,G.DepartName AS area
				,D.RegionNameChinese AS region
				,E.RegionNameChinese AS province
				,F.RegionNameChinese AS city
            </isEqual>
        </isNotEmpty>
        <isEmpty property="language">
            ,C.NameTotal AS productName
            ,G.DepartName AS area
			,D.RegionNameChinese AS region
			,E.RegionNameChinese AS province
			,F.RegionNameChinese AS city
	    </isEmpty>
        </dynamic>
        <![CDATA[FROM(]]>
        <include refid="BINOLSTBIL05.OutboundQuery" />
        <![CDATA[)T0
        	JOIN Inventory.BIN_OutboundFreeDetail A WITH(NOLOCK)
				ON(T0.outboundFreeId = A.BIN_OutboundFreeID)
			LEFT JOIN Basis.BIN_ProductVendor B WITH (NOLOCK)
				ON (A.BIN_ProductVendorID = B.BIN_ProductVendorID)
			LEFT JOIN Basis.BIN_Product C WITH (NOLOCK)
				ON (B.BIN_ProductID = C.BIN_ProductID)
			LEFT JOIN Basis.BIN_Region D WITH (NOLOCK)
				ON (T0.regionID = D.BIN_RegionID)
			LEFT JOIN Basis.BIN_Region E WITH (NOLOCK)
				ON (T0.provinceID = E.BIN_RegionID)
			LEFT JOIN Basis.BIN_Region F WITH (NOLOCK)
				ON (T0.cityID = F.BIN_RegionID)
			LEFT JOIN Basis.BIN_Organization G WITH (NOLOCK)
				ON (T0.nodeID.IsDescendantOf(G.NodeID) = 1 AND G.Type = '5')
        ]]>
      </sql>
      
     <!-- 分页查询导出的报损单明细 -->
	<select id="getPrtOutboundExportList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<include refid="BINOLCMINC99.pageheader" />
	  	<include refid="BINOLSTBIL05.prtOutboundExportQuery" />
	  	<include refid="BINOLCMINC99.pagefooter" />
	</select>
 
	<!--  取得报损单明细总数  -->
	<select id="getExportDetailCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT 
				COUNT(1) AS count FROM (
		]]>
		<include refid="BINOLSTBIL05.prtOutboundExportQuery" />
		<![CDATA[
			)SORT_T1
		]]>
	</select>
</sqlMap>