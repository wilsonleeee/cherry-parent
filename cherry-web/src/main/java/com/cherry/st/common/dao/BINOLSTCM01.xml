<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="BINOLSTCM01">
    <!--插入【产品入出库表】-->
	<sql id="insertProductStockInOutSQL">
        <![CDATA[
            INSERT INTO Inventory.BIN_ProductInOut(
                BIN_OrganizationInfoID,
                BIN_BrandInfoID,
                TradeNo,
        ]]>
        <dynamic>
            <isNotEmpty property="TradeNoIF">
                <![CDATA[TradeNoIF,]]>
            </isNotEmpty>
            <isNotEmpty property="RelevanceNo">
                <![CDATA[RelevanceNo,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_OrganizationID">
                <![CDATA[BIN_OrganizationID,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_EmployeeID">
                <![CDATA[BIN_EmployeeID,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalQuantity">
                <![CDATA[TotalQuantity,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmount">
                <![CDATA[TotalAmount,]]>
            </isNotEmpty>
            <isNotEmpty property="StockType">
                <![CDATA[StockType,]]>
            </isNotEmpty>
            <isNotEmpty property="TradeType">
                <![CDATA[TradeType,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_LogisticInfoID">
                <![CDATA[BIN_LogisticInfoID,]]>
            </isNotEmpty>
            <isNotEmpty property="Comments">
                <![CDATA[Comments,]]>
            </isNotEmpty>
            <isNotEmpty property="StockInOutDate">
                <![CDATA[StockInOutDate,]]>
            </isNotEmpty>
            <isNotEmpty property="StockInOutTime">
                <![CDATA[StockInOutTime,]]>
            </isNotEmpty>
            <isNotEmpty property="VerifiedFlag">
                <![CDATA[VerifiedFlag,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmountBefore">
                <![CDATA[TotalAmountBefore,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmountAfter">
                <![CDATA[TotalAmountAfter,]]>
            </isNotEmpty>
            <isNotEmpty property="CloseFlag">
                <![CDATA[CloseFlag,]]>
            </isNotEmpty>
            <isNotEmpty property="ChangeCount">
                <![CDATA[ChangeCount,]]>
            </isNotEmpty>
            <isNotEmpty property="WorkFlowID">
                <![CDATA[WorkFlowID,]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                ValidFlag,
                CreateTime,
                CreatedBy,
                CreatePGM,
                UpdateTime,
                UpdatedBy,
                UpdatePGM,
                ModifyCount
            )VALUES(
                #BIN_OrganizationInfoID#,
                #BIN_BrandInfoID#,
                #TradeNo#,
        ]]>
        <dynamic>
            <isNotEmpty property="TradeNoIF">
                <![CDATA[#TradeNoIF#,]]>
            </isNotEmpty>
            <isNotEmpty property="RelevanceNo">
                <![CDATA[#RelevanceNo#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_OrganizationID">
                <![CDATA[#BIN_OrganizationID#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_EmployeeID">
                <![CDATA[#BIN_EmployeeID#,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalQuantity">
                <![CDATA[#TotalQuantity#,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmount">
                <![CDATA[#TotalAmount#,]]>
            </isNotEmpty>
            <isNotEmpty property="StockType">
                <![CDATA[#StockType#,]]>
            </isNotEmpty>
            <isNotEmpty property="TradeType">
                <![CDATA[#TradeType#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_LogisticInfoID">
                <![CDATA[#BIN_LogisticInfoID#,]]>
            </isNotEmpty>
            <isNotEmpty property="Comments">
                <![CDATA[#Comments#,]]>
            </isNotEmpty>
            <isNotEmpty property="StockInOutDate">
                <![CDATA[#StockInOutDate#,]]>
            </isNotEmpty>
            <isNotEmpty property="StockInOutTime">
                <![CDATA[#StockInOutTime#,]]>
            </isNotEmpty>
            <isNotEmpty property="VerifiedFlag">
                <![CDATA[#VerifiedFlag#,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmountBefore">
                <![CDATA[#TotalAmountBefore#,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmountAfter">
                <![CDATA[#TotalAmountAfter#,]]>
            </isNotEmpty>
            <isNotEmpty property="CloseFlag">
                <![CDATA[#CloseFlag#,]]>
            </isNotEmpty>
            <isNotEmpty property="ChangeCount">
                <![CDATA[#ChangeCount#,]]>
            </isNotEmpty>
            <isNotEmpty property="WorkFlowID">
                <![CDATA[#WorkFlowID#,]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                '1',
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                GETDATE(),
                #UpdatedBy#,
                #UpdatePGM#,
                '0'
            )
        ]]>
	</sql>
    <insert id="insertProductStockInOut" parameterClass="java.util.HashMap">
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_ProductInOutID" >
        	<include refid="BINOLSTCM01.insertProductStockInOutSQL" />
            <![CDATA[SELECT SCOPE_IDENTITY() AS value]]>
        </selectKey>
    </insert>
    
    <!--插入【产品入出库明细表】-->
    <insert id="insertProductStockDetail" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO Inventory.BIN_ProductInOutDetail(
                BIN_ProductInOutID,
                BIN_ProductVendorID,
                DetailNo,
                Quantity,
				StockType,
				BIN_InventoryInfoID,
        ]]>
		<dynamic>
            <isNotEmpty property="BIN_ProductBatchID">
                <![CDATA[BIN_ProductBatchID,]]>
            </isNotEmpty>
            <isNotEmpty property="Price">
                <![CDATA[Price,]]>
            </isNotEmpty>
			<isNotEmpty property="BIN_ProductVendorPackageID">
                <![CDATA[BIN_ProductVendorPackageID,]]>
            </isNotEmpty>
		    <isNotEmpty property="Comments">
                <![CDATA[Comments,]]>
            </isNotEmpty>
			<isNotEmpty property="ChangeCount">
                <![CDATA[ChangeCount,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_LogicInventoryInfoID">
                <![CDATA[BIN_LogicInventoryInfoID,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_StorageLocationInfoID">
                <![CDATA[BIN_StorageLocationInfoID,]]>
            </isNotEmpty>
		</dynamic>
        <![CDATA[
                ValidFlag,
                CreateTime,
                CreatedBy,
                CreatePGM,
				UpdateTime,
                UpdatedBy,
                UpdatePGM,
                ModifyCount
            )VALUES(
                #BIN_ProductInOutID#,
                #BIN_ProductVendorID#,
                #DetailNo#,
                #Quantity#,
				#StockType#,
				#BIN_InventoryInfoID#,
		]]>
        <dynamic>
            <isNotEmpty property="BIN_ProductBatchID">
                <![CDATA[#BIN_ProductBatchID#,]]>
            </isNotEmpty>
            <isNotEmpty property="Price">
                <![CDATA[#Price#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_ProductVendorPackageID">
                <![CDATA[#BIN_ProductVendorPackageID#,]]>
            </isNotEmpty>
            <isNotEmpty property="Comments">
                <![CDATA[#Comments#,]]>
            </isNotEmpty>
            <isNotEmpty property="ChangeCount">
                <![CDATA[#ChangeCount#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_LogicInventoryInfoID">
                <![CDATA[#BIN_LogicInventoryInfoID#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_StorageLocationInfoID">
                <![CDATA[#BIN_StorageLocationInfoID#,]]>
            </isNotEmpty>
        </dynamic>
		<![CDATA[
                '1',
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                GETDATE(),
                #UpdatedBy#,
                #UpdatePGM#,
                '0'
				)
		]]>
    </insert>
    
    <!--插入【产品入出库批次表】-->
	<sql id="insertProductBatchInOutSQL">
        <![CDATA[
            INSERT INTO Inventory.BIN_ProductBatchInOut(
                BIN_OrganizationInfoID,
                BIN_BrandInfoID,
                TradeNo,
        ]]>
        <dynamic>
            <isNotEmpty property="TradeNoIF">
                <![CDATA[TradeNoIF,]]>
            </isNotEmpty>
            <isNotEmpty property="RelevanceNo">
                <![CDATA[RelevanceNo,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_OrganizationID">
                <![CDATA[BIN_OrganizationID,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_EmployeeID">
                <![CDATA[BIN_EmployeeID,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalQuantity">
                <![CDATA[TotalQuantity,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmount">
                <![CDATA[TotalAmount,]]>
            </isNotEmpty>
            <isNotEmpty property="Amount">
                <![CDATA[Amount,]]>
            </isNotEmpty>
            <isNotEmpty property="StockType">
                <![CDATA[StockType,]]>
            </isNotEmpty>
            <isNotEmpty property="TradeType">
                <![CDATA[TradeType,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_LogisticInfoID">
                <![CDATA[BIN_LogisticInfoID,]]>
            </isNotEmpty>
            <isNotEmpty property="Comments">
                <![CDATA[Comments,]]>
            </isNotEmpty>
            <isNotEmpty property="StockInOutDate">
                <![CDATA[StockInOutDate,]]>
            </isNotEmpty>
            <isNotEmpty property="StockInOutTime">
                <![CDATA[StockInOutTime,]]>
            </isNotEmpty>
            <isNotEmpty property="VerifiedFlag">
                <![CDATA[VerifiedFlag,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmountBefore">
                <![CDATA[TotalAmountBefore,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmountAfter">
                <![CDATA[TotalAmountAfter,]]>
            </isNotEmpty>
            <isNotEmpty property="CloseFlag">
                <![CDATA[CloseFlag,]]>
            </isNotEmpty>
            <isNotEmpty property="ChangeCount">
                <![CDATA[ChangeCount,]]>
            </isNotEmpty>
            <isNotEmpty property="WorkFlowID">
                <![CDATA[WorkFlowID,]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                ValidFlag,
                CreateTime,
                CreatedBy,
                CreatePGM,
                UpdateTime,
                UpdatedBy,
                UpdatePGM,
                ModifyCount
            )VALUES(
                #BIN_OrganizationInfoID#,
                #BIN_BrandInfoID#,
                #TradeNo#,
        ]]>
        <dynamic>
            <isNotEmpty property="TradeNoIF">
                <![CDATA[#TradeNoIF#,]]>
            </isNotEmpty>
            <isNotEmpty property="RelevanceNo">
                <![CDATA[#RelevanceNo#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_OrganizationID">
                <![CDATA[#BIN_OrganizationID#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_EmployeeID">
                <![CDATA[#BIN_EmployeeID#,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalQuantity">
                <![CDATA[#TotalQuantity#,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmount">
                <![CDATA[#TotalAmount#,]]>
            </isNotEmpty>
            <isNotEmpty property="Amount">
                <![CDATA[#Amount#,]]>
            </isNotEmpty>
            <isNotEmpty property="StockType">
                <![CDATA[#StockType#,]]>
            </isNotEmpty>
            <isNotEmpty property="TradeType">
                <![CDATA[#TradeType#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_LogisticInfoID">
                <![CDATA[#BIN_LogisticInfoID#,]]>
            </isNotEmpty>
            <isNotEmpty property="Comments">
                <![CDATA[#Comments#,]]>
            </isNotEmpty>
            <isNotEmpty property="StockInOutDate">
                <![CDATA[#StockInOutDate#,]]>
            </isNotEmpty>
            <isNotEmpty property="StockInOutTime">
                <![CDATA[#StockInOutTime#,]]>
            </isNotEmpty>
            <isNotEmpty property="VerifiedFlag">
                <![CDATA[#VerifiedFlag#,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmountBefore">
                <![CDATA[#TotalAmountBefore#,]]>
            </isNotEmpty>
            <isNotEmpty property="TotalAmountAfter">
                <![CDATA[#TotalAmountAfter#,]]>
            </isNotEmpty>
            <isNotEmpty property="CloseFlag">
                <![CDATA[#CloseFlag#,]]>
            </isNotEmpty>
            <isNotEmpty property="ChangeCount">
                <![CDATA[#ChangeCount#,]]>
            </isNotEmpty>
            <isNotEmpty property="WorkFlowID">
                <![CDATA[#WorkFlowID#,]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                '1',
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                GETDATE(),
                #UpdatedBy#,
                #UpdatePGM#,
                '0'
            )
        ]]>
	</sql>
    <insert id="insertProductBatchInOut" parameterClass="java.util.HashMap">
        <selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_ProductBatchInOutID" >
        	<include refid="BINOLSTCM01.insertProductBatchInOutSQL" />
            <![CDATA[SELECT SCOPE_IDENTITY() AS value]]>
        </selectKey>
    </insert>
	
    <!--插入【产品入出库批次明细表】-->
    <insert id="insertProductBatchInOutDetail" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO Inventory.BIN_ProductBatchInOutDetail(
                BIN_ProductBatchInOutID,
                BIN_ProductVendorID,
                DetailNo,
                Quantity,
				StockType,
				StockInOutTime,
				RelevanceNo,
				BIN_InventoryInfoID,
        ]]>
		<dynamic>
            <isNotEmpty property="BIN_ProductBatchStockID">
                <![CDATA[BIN_ProductBatchStockID,]]>
            </isNotEmpty>
            <isNotEmpty property="Price">
                <![CDATA[Price,]]>
            </isNotEmpty>
            <isNotEmpty property="CostPrice">
                <![CDATA[CostPrice,]]>
            </isNotEmpty>
		    <isNotEmpty property="Comments">
                <![CDATA[Comments,]]>
            </isNotEmpty>
			<isNotEmpty property="RelSrResidualQuantity">
                <![CDATA[RelSrResidualQuantity,]]>
            </isNotEmpty>
			<isNotEmpty property="ChangeCount">
                <![CDATA[ChangeCount,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_LogicInventoryInfoID">
                <![CDATA[BIN_LogicInventoryInfoID,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_StorageLocationInfoID">
                <![CDATA[BIN_StorageLocationInfoID,]]>
            </isNotEmpty>
		</dynamic>
        <![CDATA[
                ValidFlag,
                CreateTime,
                CreatedBy,
                CreatePGM,
				UpdateTime,
                UpdatedBy,
                UpdatePGM,
                ModifyCount
            )VALUES(
                #BIN_ProductBatchInOutID#,
                #BIN_ProductVendorID#,
                #DetailNo#,
                #Quantity#,
				#StockType#,
				#StockInOutTime#,
				#RelevanceNo#,
				#BIN_InventoryInfoID#,
		]]>
        <dynamic>
            <isNotEmpty property="BIN_ProductBatchStockID">
                <![CDATA[#BIN_ProductBatchStockID#,]]>
            </isNotEmpty>
            <isNotEmpty property="Price">
                <![CDATA[#Price#,]]>
            </isNotEmpty>
            <isNotEmpty property="CostPrice">
                <![CDATA[#CostPrice#,]]>
            </isNotEmpty>
            <isNotEmpty property="Comments">
                <![CDATA[#Comments#,]]>
            </isNotEmpty>
            <isNotEmpty property="RelSrResidualQuantity">
                <![CDATA[#RelSrResidualQuantity#,]]>
            </isNotEmpty>
            <isNotEmpty property="ChangeCount">
                <![CDATA[#ChangeCount#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_LogicInventoryInfoID">
                <![CDATA[#BIN_LogicInventoryInfoID#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_StorageLocationInfoID">
                <![CDATA[#BIN_StorageLocationInfoID#,]]>
            </isNotEmpty>
        </dynamic>
		<![CDATA[
                '1',
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                GETDATE(),
                #UpdatedBy#,
                #UpdatePGM#,
                '0'
				)
		]]>
    </insert>
    
    <!-- 取得产品库存表指定仓库产品的首末次信息 -->
    <select id="getProductNewBatchStock" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT TOP(1)
			BIN_ProductBatchStockID,
			BIN_InventoryInfoID,
			BIN_LogicInventoryInfoID,
			TradeNoIF,
			BIN_ProductVendorID,
			InQuantity,
			StockQuantity,
			CostPrice,
			StockInTime
		FROM
			Inventory.BIN_ProductNewBatchStock
		WHERE
			BIN_InventoryInfoID = #BIN_InventoryInfoID#
		AND BIN_LogicInventoryInfoID = #BIN_LogicInventoryInfoID#
		AND BIN_ProductVendorID = #BIN_ProductVendorID#
		AND StockQuantity > 0
		ORDER BY StockInTime 
		<isNotEmpty property="stockInTimeSorting">
			$stockInTimeSorting$,BIN_ProductBatchStockID $stockInTimeSorting$
		</isNotEmpty>
    </select>

    <!-- 查询产品的价格 -->
    <select id="getProductPriceByID"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
		select
			 B.BIN_ProductVendorID,
			 A.SalePrice,
			 A.MemPrice,
			 A.StandardCost,
			 A.OrderPrice,
			 C.DistributionPrice
		from
			Basis.BIN_Product A WITH(NOLOCK)
			JOIN Basis.BIN_ProductVendor B WITH(NOLOCK) ON(A.BIN_ProductID = B.BIN_ProductID )
			LEFT JOIN Basis.BIN_ProductPrice C WITH(NOLOCK)
			ON (A.BIN_ProductID = C.BIN_ProductID
					AND C.Type = '2' AND C.StartDate <= #StockInOutDate#
					AND C.EndDate >= #StockInOutDate# )
		where
			B.BIN_ProductVendorID = #BIN_ProductVendorID#
		]]>
    </select>
    
    <!-- 检查出库要求的批次库存是否满足 -->
    <select id="checkProductNewBatchStock" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT   
			SUM(StockQuantity) AS SumStockQuantity,
			COUNT(1) AS CountBatchSize
		FROM
			Inventory.BIN_ProductNewBatchStock
		WHERE
			BIN_InventoryInfoID = #BIN_InventoryInfoID#
		AND BIN_LogicInventoryInfoID = #BIN_LogicInventoryInfoID#
		AND BIN_ProductVendorID = #BIN_ProductVendorID#
		AND StockQuantity > 0
		GROUP BY 
			BIN_InventoryInfoID,BIN_LogicInventoryInfoID,BIN_ProductVendorID
		HAVING SUM(StockQuantity) > #Quantity#
    </select>
    
    <!-- 取得产品库存表指定仓库产品的集合 -->
    <select id="getProductNewBatchStockList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT TOP($countBatchSize$)
			BIN_ProductBatchStockID,
			BIN_InventoryInfoID,
			BIN_LogicInventoryInfoID,
			TradeNoIF,
			BIN_ProductVendorID,
			InQuantity,
			StockQuantity,
			CostPrice,
			StockInTime
		FROM
			Inventory.BIN_ProductNewBatchStock
		WHERE
			BIN_InventoryInfoID = #BIN_InventoryInfoID#
		AND BIN_LogicInventoryInfoID = #BIN_LogicInventoryInfoID#
		AND BIN_ProductVendorID = #BIN_ProductVendorID#
		AND StockQuantity > 0
		ORDER BY StockInTime 
		<isNotEmpty property="stockInTimeSorting">
			$stockInTimeSorting$,BIN_ProductBatchStockID $stockInTimeSorting$
		</isNotEmpty>
    </select>
    
    <!-- 取得产品库存表指定仓库产品的集合（满足出库要求则有数据） -->
    <select id="getProductNewBatchStockListForOutStock" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT 
			* 
		FROM 
			cherry_base_getProductBatchInOut(#BIN_ProductVendorID#,#BIN_InventoryInfoID#,#BIN_LogicInventoryInfoID#,#outQuantity#,#stockInTimeSorting#)
    </select>
    
	<!-- 更新产品批次库存表(修改批次库存数量)  -->
	<update id="updProductNewBatchStock" parameterClass="java.util.HashMap">	
		UPDATE 
			Inventory.BIN_ProductNewBatchStock
		SET StockQuantity = StockQuantity - #NewStockQuantity#,
		<include refid="BINOLCMINC99.updateSql" />
		WHERE 
			BIN_ProductBatchStockID = #BIN_ProductBatchStockID#
		AND StockQuantity = #OldStockQuantity#
	</update>
    
	<!-- 更新产品入出库批次库存表(修改入出库批次库存记录的剩余可退货数量)  -->
	<update id="updProductBatchInOutDetail" parameterClass="java.util.HashMap">	
		UPDATE
			Inventory.BIN_ProductBatchInOutDetail
		SET 
			RelSrResidualQuantity = RelSrResidualQuantity - #Quantity#,
			<include refid="BINOLCMINC99.updateSql" />
		WHERE
			BIN_ProductInOutDetailID = #BIN_ProductInOutDetailID#
	</update>
	
	<!-- 更新产品入出库批次主表成本价 -->
	<update id="updProductBatchInOut" parameterClass="java.util.HashMap">	
		WITH S_TABLE AS (
			SELECT 
				SUM(CostPrice*Quantity) AS sumCostPrice,BIN_ProductBatchInOutID
			FROM
				Inventory.BIN_ProductBatchInOutDetail
			WHERE 
				BIN_ProductBatchInOutID = #BIN_ProductBatchInOutID#
			GROUP BY BIN_ProductBatchInOutID
		)
		
		UPDATE A
			SET A.TotalCostPrice = ST.sumCostPrice
		FROM 	
			Inventory.BIN_ProductBatchInOut  A
		JOIN 
			S_TABLE AS ST ON ST.BIN_ProductBatchInOutID = A.BIN_ProductBatchInOutID
		WHERE 
			A.BIN_ProductBatchInOutID = #BIN_ProductBatchInOutID#
	</update>

    <!-- 根据原始单据号及仓库产品信息取得产品入出库明细记录 -->
    <select id="getProductBatchInOutDetailByRelevanceNoAndPrt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT
			BIN_ProductInOutDetailID,
			BIN_ProductBatchInOutID,
			RelevanceNo,
			BIN_ProductVendorID,
			DetailNo,
			Quantity,
			RelSrResidualQuantity,
			Price,
			BIN_ProductBatchStockID,
			CostPrice,
			StockType,
			StockInOutTime,
			BIN_InventoryInfoID,
			BIN_LogicInventoryInfoID
		FROM
			Inventory.BIN_ProductBatchInOutDetail
		WHERE
			RelevanceNo = #RelevanceNo#
		AND BIN_InventoryInfoID = #BIN_InventoryInfoID#
		AND BIN_LogicInventoryInfoID = #BIN_LogicInventoryInfoID#
		AND BIN_ProductVendorID = #BIN_ProductVendorID#
		AND RelSrResidualQuantity > 0
		ORDER BY BIN_ProductBatchStockID ASC
    </select>
    
    <!-- 根据调入业务的单据号找到调出的入出库批次明细数据 -->
    <select id="getProductBatchInOutDetailByBgRelevanceNo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT
			PBIOD.BIN_ProductInOutDetailID,
			PBIOD.BIN_ProductBatchInOutID,
			PBIO.TradeType,
			PBIOD.RelevanceNo,
			PBIOD.BIN_ProductVendorID,
			PBIOD.DetailNo,
			PBIOD.Quantity,
			PBIOD.Price,
			PBIOD.BIN_ProductBatchStockID,
			PBIOD.CostPrice,
			PBIOD.StockType,
			PBIOD.StockInOutTime,
			PBIOD.BIN_InventoryInfoID,
			PBIOD.BIN_LogicInventoryInfoID
		FROM
		      Inventory.BIN_ProductAllocationIn A with(nolock)
	    JOIN  Inventory.BIN_ProductBatchInOut PBIO with(nolock) ON PBIO.RelevanceNo = A.RelevanceNo
		JOIN  Inventory.BIN_ProductBatchInOutDetail PBIOD with(nolock) ON PBIOD.BIN_ProductBatchInOutID = PBIO.BIN_ProductBatchInOutID
		WHERE
			A.AllocationInNoIF = #RelevanceNo#
    </select>
    
    <!-- 根据接收退库(AR)的单据号找到退库(RR)的入出库批次明细数据 -->
    <select id="getProductBatchInOutDetailByARRelevanceNo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT
			PBIOD.BIN_ProductInOutDetailID,
			PBIOD.BIN_ProductBatchInOutID,
			PBIO.TradeType,
			PBIOD.RelevanceNo,
			PBIOD.BIN_ProductVendorID,
			PBIOD.DetailNo,
			PBIOD.Quantity,
			PBIOD.Price,
			PBIOD.BIN_ProductBatchStockID,
			PBIOD.CostPrice,
			PBIOD.StockType,
			PBIOD.StockInOutTime,
			PBIOD.BIN_InventoryInfoID,
			PBIOD.BIN_LogicInventoryInfoID
		FROM
			  Inventory.BIN_ProductBatchInOutDetail PBIOD
		JOIN  
		      Inventory.BIN_ProductBatchInOut PBIO ON PBIO.RelevanceNo = PBIOD.RelevanceNo
		WHERE 
			PBIOD.RelevanceNo = #RelevanceNo#
		AND PBIOD.StockType = '1'
		AND PBIO.TradeType = 'RR'
    </select>
    
    <!-- 插入【产品批次库存表(新建)】SQL -->
    <sql id="insertProductNewBatchStockSQL">
    
        <![CDATA[
            INSERT INTO Inventory.BIN_ProductNewBatchStock(
             ]]>
            <isNotEmpty property="BIN_OrganizationInfoID">
						BIN_OrganizationInfoID,
			</isNotEmpty>
			<isNotEmpty property="BIN_BrandInfoID">
						BIN_BrandInfoID,
			</isNotEmpty>
			<isNotEmpty property="BIN_InventoryInfoID">
						BIN_InventoryInfoID,
			</isNotEmpty>
			<isNotEmpty property="BIN_LogicInventoryInfoID">
						BIN_LogicInventoryInfoID,
			</isNotEmpty>
			<isNotEmpty property="TradeNoIF">
						TradeNoIF,
			</isNotEmpty>
			<isNotEmpty property="BIN_ProductVendorID">
						BIN_ProductVendorID,
			</isNotEmpty>
			<isNotEmpty property="InQuantity">
						InQuantity,
			</isNotEmpty>
			<isNotEmpty property="StockInOutTime">
						StockInTime,
			</isNotEmpty> 
			<isNotEmpty property="StockQuantity">
						StockQuantity,
			</isNotEmpty>
			<isNotEmpty property="CostPrice">
						CostPrice,
			</isNotEmpty>
        <![CDATA[
                ValidFlag,
                CreateTime,
                CreatedBy,
                CreatePGM,
				UpdateTime,
                UpdatedBy,
                UpdatePGM,
                ModifyCount
            )VALUES(
            ]]> 
            <isNotEmpty property="BIN_OrganizationInfoID">
						#BIN_OrganizationInfoID#,
			</isNotEmpty>
			<isNotEmpty property="BIN_BrandInfoID">
						#BIN_BrandInfoID#,
			</isNotEmpty>
			<isNotEmpty property="BIN_InventoryInfoID">
						#BIN_InventoryInfoID#,
			</isNotEmpty>
			<isNotEmpty property="BIN_LogicInventoryInfoID">
						#BIN_LogicInventoryInfoID#,
			</isNotEmpty>
			<isNotEmpty property="TradeNoIF">
						#TradeNoIF#,
			</isNotEmpty>
			<isNotEmpty property="BIN_ProductVendorID">
						#BIN_ProductVendorID#,
			</isNotEmpty>
			<isNotEmpty property="InQuantity">
						#InQuantity#,
			</isNotEmpty>
			<isNotEmpty property="StockInOutTime">
						#StockInOutTime#,
			</isNotEmpty> 
			<isNotEmpty property="StockQuantity">
						#StockQuantity#,
			</isNotEmpty>
			<isNotEmpty property="CostPrice">
						#CostPrice#,
			</isNotEmpty>
		<![CDATA[
                '1',
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                GETDATE(),
                #UpdatedBy#,
                #UpdatePGM#,
                '0'
				)
		]]>
    </sql>
    
    <!--插入【产品批次库存表(新建)】-->
    <insert id="insertProductNewBatchStock" parameterClass="java.util.HashMap">
    	<selectKey resultClass="java.lang.Integer" type="post" keyProperty="BIN_ProductBatchStockID" >
    	<include refid="BINOLSTCM01.insertProductNewBatchStockSQL" />
        <![CDATA[SELECT SCOPE_IDENTITY() AS value]]>
        </selectKey>
    </insert>

    <!--以增量的方式修改【产品库存表】-->
    <update id="updateProductStockByIncrement" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE
                Inventory.BIN_ProductStock
            SET
		]]>
		<dynamic>
			<isEqual property="StockType" compareValue="0">
				<![CDATA[
		        	Quantity = ISNULL(Quantity,0) + #Quantity#,
				]]>
			</isEqual>
			<isEqual property="StockType" compareValue="1">
				<![CDATA[
					Quantity = ISNULL(Quantity,0) - #Quantity#,
				]]>
			</isEqual>
		</dynamic>
		<![CDATA[
				UpdateTime = GETDATE(),
				UpdatedBy = #UpdatedBy#,
                UpdatePGM = #UpdatePGM#,
                ModifyCount = ModifyCount+1
            WHERE
			    ValidFlag = '1'
                AND BIN_ProductVendorID = #BIN_ProductVendorID#
                AND BIN_InventoryInfoID = #BIN_InventoryInfoID#
        ]]>
        <dynamic>
            <isNotEmpty prepend="AND" property="BIN_LogicInventoryInfoID">
                <![CDATA[BIN_LogicInventoryInfoID = #BIN_LogicInventoryInfoID#]]>
            </isNotEmpty>
        </dynamic>
    </update>
	
    <!--插入【产品库存表】-->
    <insert id="insertProductStock" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO Inventory.BIN_ProductStock(       
                BIN_ProductVendorID,
                BIN_InventoryInfoID,
                Quantity,
		]]>
		<dynamic>
            <isNotEmpty property="BIN_LogicInventoryInfoID">
                <![CDATA[BIN_LogicInventoryInfoID,]]>
            </isNotEmpty>
			<isNotEmpty property="BIN_StorageLocationInfoID">
                <![CDATA[BIN_StorageLocationInfoID,]]>
            </isNotEmpty>
			<isNotEmpty property="BIN_ProductVendorPackageID">
                <![CDATA[BIN_ProductVendorPackageID,]]>
            </isNotEmpty>
		</dynamic>
		<![CDATA[
				ValidFlag,
                CreateTime,
                CreatedBy,
                CreatePGM,
				UpdateTime,
                UpdatedBy,
                UpdatePGM,
                ModifyCount
            )VALUES(   
                #BIN_ProductVendorID#,
                #BIN_InventoryInfoID#,
		]]>
		<dynamic>
            <isEqual property="StockType" compareValue="0">
                <![CDATA[
                    0 + #Quantity#,
                ]]>
            </isEqual>
            <isEqual property="StockType" compareValue="1">
                <![CDATA[
                    0 - #Quantity#,
                ]]>
            </isEqual>
            <isNotEmpty property="BIN_LogicInventoryInfoID">
                <![CDATA[#BIN_LogicInventoryInfoID#,]]>
            </isNotEmpty>
			<isNotEmpty property="BIN_StorageLocationInfoID">
                <![CDATA[#BIN_StorageLocationInfoID#,]]>
            </isNotEmpty>
			<isNotEmpty property="BIN_ProductVendorPackageID">
                <![CDATA[#BIN_ProductVendorPackageID#,]]>
            </isNotEmpty>
        </dynamic>
		<![CDATA[
                '1',
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                GETDATE(),
                #UpdatedBy#,
                #UpdatePGM#,
                '0'
			)
        ]]>
    </insert>
   
    <!--更新【产品入出库表】-->
	<update id="updateProductInOutMain" parameterClass="java.util.HashMap">
		<![CDATA[
            UPDATE
                Inventory.BIN_ProductInOut
			SET
                UpdateTime = GETDATE()
                ,UpdatedBy = #UpdatedBy#
				,UpdatePGM = #UpdatePGM#
				,ModifyCount = ModifyCount+1
		]]>
		<dynamic>
            <isNotEmpty property="ValidFlag">
                <![CDATA[,ValidFlag = #ValidFlag#]]>
			</isNotEmpty>
			<isNotEmpty property="WorkFlowID">
                <![CDATA[,WorkFlowID = #WorkFlowID#]]>
            </isNotEmpty>
			<isNotEmpty property="VerifiedFlag">
                <![CDATA[,VerifiedFlag = #VerifiedFlag#]]>
            </isNotEmpty>
		</dynamic>
		<![CDATA[
            WHERE
                BIN_ProductInOutID = #BIN_ProductInOutID#
				AND ValidFlag = #OldValidFlag#
				AND UpdateTime = #OldUpdateTime#
				AND ModifyCount = #OldModifyCount#
		]]>
    </update>
	
    <!--取得产品入出库主表信息-->
    <select id="getProductInOutMainData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
                A.BIN_OrganizationInfoID,
				A.BIN_BrandInfoID,
				A.TradeNo,
				A.TradeNoIF,
				A.RelevanceNo,
				A.BIN_OrganizationID,
				A.BIN_EmployeeID,
				ISNULL(A.TotalQuantity,0) AS TotalQuantity,
				ISNULL(A.TotalAmount,0) AS TotalAmount,
				A.StockType,
				A.TradeType,
				A.BIN_LogisticInfoID,
				A.Comments,
				A.StockInOutDate,
				A.StockInOutTime,
				A.VerifiedFlag,
				A.TotalAmountBefore,
				A.TotalAmountAfter,
				A.CloseFlag,
				A.ChangeCount,
				A.WorkFlowID,
				CONVERT(VARCHAR(30),A.UpdateTime,121) AS UpdateTime,
				A.ModifyCount,
		]]>
        <dynamic>
            <isNotEmpty property="language">
                <isEqual property="language" compareValue="en_US">
                	<![CDATA[
						'('+B.DepartCode+')'+B.NameForeign AS DepartCodeName,
						C.EmployeeNameForeign AS EmployeeName
					]]>
                </isEqual>
                <isEqual property="language" compareValue="zh_CN">
                	<![CDATA[
	                    '('+B.DepartCode+')'+B.DepartName AS DepartCodeName,
	                    C.EmployeeName
					]]>
                </isEqual>
            </isNotEmpty>
            <isEmpty property="language">
            	<![CDATA[
                    '('+B.DepartCode+')'+B.DepartName AS DepartCodeName,
                    C.EmployeeName
				]]>
            </isEmpty>
		</dynamic>
		<![CDATA[
			FROM
                Inventory.BIN_ProductInOut A
			LEFT JOIN Basis.BIN_Organization B
			ON A.BIN_OrganizationID = B.BIN_OrganizationID
			LEFT JOIN Basis.BIN_Employee C
            ON A.BIN_EmployeeID = C.BIN_EmployeeID
			WHERE
                A.BIN_ProductInOutID = #BIN_ProductInOutID#
				AND A.ValidFlag = '1'
		]]>
    </select>
   
    <!--取得产品入出库从表信息-->
    <select id="getProductInOutDetailData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[
            SELECT
                A.BIN_ProductInOutDetailID,
				A.BIN_ProductVendorID,
				A.BIN_ProductBatchID,
				A.DetailNo,
				ISNULL(A.Quantity,0) AS Quantity,
				ISNULL(A.Price,0) AS Price,
				A.BIN_ProductVendorPackageID,
				A.StockType,
				A.BIN_InventoryInfoID,
				A.BIN_LogicInventoryInfoID,
				A.BIN_StorageLocationInfoID,
				A.Comments,
				A.ChangeCount,
				B.BarCode,
				C.UnitCode,
			]]>
	        <dynamic>
	            <isNotEmpty property="language">
	                <isEqual property="language" compareValue="en_US">
	                    <![CDATA[
	                        C.NameForeign AS ProductName,
	                        '('+D.DepotCode+')'+D.DepotNameEN AS DepotCodeName,
	                        E.InventoryNameEN AS LogicInventoryName
	                    ]]>
	                </isEqual>
                    <isEqual property="language" compareValue="zh_CN">
                        <![CDATA[
                            C.NameTotal AS ProductName,
                            '('+D.DepotCode+')'+D.DepotNameCN AS DepotCodeName,
                            E.InventoryNameCN AS LogicInventoryName
                        ]]>
                    </isEqual>
				</isNotEmpty>
				<isEmpty property="language">
                    <![CDATA[
                        C.NameTotal AS ProductName,
                        '('+D.DepotCode+')'+D.DepotNameCN AS DepotCodeName,
                        E.InventoryNameCN AS LogicInventoryName
                    ]]>
				</isEmpty>
			</dynamic>
			<![CDATA[
			FROM
                Inventory.BIN_ProductInOutDetail A
			LEFT JOIN Basis.BIN_ProductVendor B
			ON A.BIN_ProductVendorID = B.BIN_ProductVendorID
			LEFT JOIN Basis.BIN_Product C
			ON B.BIN_ProductID = C.BIN_ProductID
			LEFT JOIN Basis.BIN_DepotInfo D
			ON A.BIN_InventoryInfoID = D.BIN_DepotInfoID
			LEFT JOIN Basis.BIN_LogicInventory E
			ON A.BIN_LogicInventoryInfoID = E.BIN_LogicInventoryInfoID
			WHERE
                A.BIN_ProductInOutID = #BIN_ProductInOutID#
                AND A.ValidFlag = '1'
        ]]>
    </select>

    <!--以增量的方式修改【产品批次库存表】-->
    <update id="updateProductBatchStockByIncrement" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE
                Inventory.BIN_ProductBatchStock
            SET
		]]>
		<dynamic>
			<isEqual property="StockType" compareValue="0">
				<![CDATA[
		        	Quantity = ISNULL(Quantity,0) + #Quantity#,
				]]>
			</isEqual>
			<isEqual property="StockType" compareValue="1">
				<![CDATA[
					Quantity = ISNULL(Quantity,0) - #Quantity#,
				]]>
			</isEqual>
		</dynamic>
		<![CDATA[
                UpdateTime = GETDATE(),
                UpdatedBy = #UpdatedBy#,
                UpdatePGM = #UpdatePGM#,
                ModifyCount = ModifyCount+1
            WHERE
			    ValidFlag = '1'
                AND BIN_ProductBatchID = #BIN_ProductBatchID#
                AND BIN_InventoryInfoID = #BIN_InventoryInfoID#
        ]]>
        <dynamic>
            <isNotEmpty prepend="AND" property="BIN_LogicInventoryInfoID">
                <![CDATA[BIN_LogicInventoryInfoID = #BIN_LogicInventoryInfoID#]]>
            </isNotEmpty>
        </dynamic>
    </update>

    <!--插入【产品批次库存表】-->
    <insert id="insertProductBatchStock" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO Inventory.BIN_ProductBatchStock(       
                BIN_ProductBatchID,
                BIN_InventoryInfoID,
                Quantity,
        ]]>
        <dynamic>
            <isNotEmpty property="BIN_LogicInventoryInfoID">
                <![CDATA[BIN_LogicInventoryInfoID,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_StorageLocationInfoID">
                <![CDATA[BIN_StorageLocationInfoID,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_ProductVendorPackageID">
                <![CDATA[BIN_ProductVendorPackageID,]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                ValidFlag,
                CreateTime,
                CreatedBy,
                CreatePGM,
                UpdateTime,
                UpdatedBy,
                UpdatePGM,
                ModifyCount
            )VALUES(   
                #BIN_ProductBatchID#,
                #BIN_InventoryInfoID#,
        ]]>
        <dynamic>
        	<isEqual property="StockType" compareValue="0">
                <![CDATA[
                    0 + #Quantity#,
                ]]>
            </isEqual>
            <isEqual property="StockType" compareValue="1">
                <![CDATA[
                    0 - #Quantity#,
                ]]>
            </isEqual>
            <isNotEmpty property="BIN_LogicInventoryInfoID">
                <![CDATA[#BIN_LogicInventoryInfoID#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_StorageLocationInfoID">
                <![CDATA[#BIN_StorageLocationInfoID#,]]>
            </isNotEmpty>
            <isNotEmpty property="BIN_ProductVendorPackageID">
                <![CDATA[#BIN_ProductVendorPackageID#,]]>
            </isNotEmpty>
        </dynamic>
        <![CDATA[
                '1',
                GETDATE(),
                #CreatedBy#,
                #CreatePGM#,
                GETDATE(),
                #UpdatedBy#,
                #UpdatePGM#,
                '0'
            )
        ]]>
    </insert>
    
    <!-- 发货单单据号找到的入出库批次明细成本汇总数据 -->
    <select id="getProductInfoListByDeliverNum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT
		    Y.BIN_ProductDeliverID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID,
		    SUM(X.Quantity*X.CostPrice) AS TotalCostPrice
		FROM
			  Inventory.BIN_ProductBatchInOutDetail X
		LEFT JOIN  
		      Inventory.BIN_ProductDeliver  Y
		ON    X.RelevanceNo=Y.DeliverNoIF  	  
		WHERE 
			X.RelevanceNo = #DeliverNoIF#
        AND NOT EXISTS (
            SELECT 1
            FROM Inventory.BIN_ProductBatchInOutDetail E
			WHERE
			    E.RelevanceNo  = X.RelevanceNo
			AND E.BIN_InventoryInfoID = X.BIN_InventoryInfoID
			AND E.BIN_LogicInventoryInfoID = X.BIN_LogicInventoryInfoID
            AND E.BIN_ProductVendorID = X.BIN_ProductVendorID

            AND E.CostPrice IS NULL
        )
		GROUP BY  Y.BIN_ProductDeliverID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID	

    </select>
     <!-- 修改产品发货单明细表的总成本 -->
     <update id="updateProductDeliverDetail" parameterClass="java.util.HashMap">
       <![CDATA[
            UPDATE
                 Inventory.BIN_ProductDeliverDetail
            SET 
                TotalCostPrice=#TotalCostPrice#,
                UpdateTime = GETDATE(),
                UpdatedBy = #UpdatedBy#,
                UpdatePGM = #UpdatePGM#,
                ModifyCount = ModifyCount+1
            WHERE
			    BIN_ProductDeliverID = #BIN_ProductDeliverID#
                AND BIN_ProductVendorID = #BIN_ProductVendorID#
                AND BIN_InventoryInfoID = #BIN_InventoryInfoID#
                AND BIN_LogicInventoryInfoID=#BIN_LogicInventoryInfoID#
          ]]>      
    </update>
     
    <!-- 退库单单据号找到的入出库批次明细成本汇总数据 -->
    <select id="getCostPriceByRR" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT
		    Y.BIN_ProductReturnID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID,
		    SUM(X.Quantity*X.CostPrice) AS TotalCostPrice
		FROM
			Inventory.BIN_ProductBatchInOutDetail X
		inner join
			Inventory.BIN_ProductBatchInOut Z on X.BIN_ProductBatchInOutID=Z.BIN_ProductBatchInOutID 
		left join  
		    Inventory.BIN_ProductReturn  Y ON  X.RelevanceNo=Y.ReturnNoIF  	  
		WHERE 
			X.RelevanceNo = #ReturnNoIF# and Z.TradeType='RR'
        AND NOT EXISTS (
            SELECT 1
            FROM Inventory.BIN_ProductBatchInOutDetail E
			WHERE
			    E.RelevanceNo  = X.RelevanceNo
			AND E.BIN_InventoryInfoID = X.BIN_InventoryInfoID
			AND E.BIN_LogicInventoryInfoID = X.BIN_LogicInventoryInfoID
            AND E.BIN_ProductVendorID = X.BIN_ProductVendorID

            AND E.CostPrice IS NULL
        )
		GROUP BY  
			Y.BIN_ProductReturnID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID	
	
    </select>
     <!-- 修改产品退库单明细表的总成本 -->
     <update id="updateProductReturnDetail" parameterClass="java.util.HashMap">
       <![CDATA[
            UPDATE
                 Inventory.BIN_ProductReturnDetail
            SET 
                TotalCostPrice=#TotalCostPrice#,
                UpdateTime = GETDATE(),
                UpdatedBy = #UpdatedBy#,
                UpdatePGM = #UpdatePGM#,
                ModifyCount = ModifyCount+1
            WHERE
			    BIN_ProductReturnID = #BIN_ProductReturnID#
                AND BIN_ProductVendorID = #BIN_ProductVendorID#
                AND BIN_InventoryInfoID = #BIN_InventoryInfoID#
                AND BIN_LogicInventoryInfoID=#BIN_LogicInventoryInfoID#
          ]]>      
    </update>
     
   <!-- 盘点单单据号找到的入出库批次明细成本汇总数据 -->
    <select id="getProductInfoListByStockTakingNum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT
		    Y.BIN_ProductStockTakingID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID,
		    SUM(X.Quantity*X.CostPrice) AS TotalCostPrice
		FROM
			  Inventory.BIN_ProductBatchInOutDetail X
		LEFT JOIN  
		      Inventory.BIN_ProductStockTaking  Y
		ON    X.RelevanceNo=Y.StockTakingNoIF 	  
		WHERE 
			X.RelevanceNo = #StockTakingNoIF#
        AND NOT EXISTS (
            SELECT 1
            FROM Inventory.BIN_ProductBatchInOutDetail E
			WHERE
			    E.RelevanceNo  = X.RelevanceNo
			AND E.BIN_InventoryInfoID = X.BIN_InventoryInfoID
			AND E.BIN_LogicInventoryInfoID = X.BIN_LogicInventoryInfoID
            AND E.BIN_ProductVendorID = X.BIN_ProductVendorID

            AND E.CostPrice IS NULL
        )
		GROUP BY  Y.BIN_ProductStockTakingID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID	
    </select>
    
   <!-- 修改产品盘点单明细表的总成本 -->
   <update id="updateProductStockTakingDetail" parameterClass="java.util.HashMap">
       <![CDATA[
            UPDATE
                 Inventory.BIN_ProductTakingDetail
            SET 
                TotalCostPrice=#TotalCostPrice#,
                UpdateTime = GETDATE(),
                UpdatedBy = #UpdatedBy#,
                UpdatePGM = #UpdatePGM#,
                ModifyCount = ModifyCount+1
            WHERE
			    BIN_ProductTakingID = #BIN_ProductStockTakingID#
                AND BIN_ProductVendorID = #BIN_ProductVendorID#
                AND BIN_InventoryInfoID = #BIN_InventoryInfoID#
                AND BIN_LogicInventoryInfoID=#BIN_LogicInventoryInfoID#
          ]]>      
    </update>
    
     <!-- 调出单单据号找到的入出库批次明细成本汇总数据 -->
    <select id="getProductInfoListByAllocationOutIDNum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT
		    Y.BIN_ProductAllocationOutID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID,
		    SUM(X.Quantity*X.CostPrice) AS TotalCostPrice
		FROM
			  Inventory.BIN_ProductBatchInOutDetail X
		LEFT JOIN  
		      Inventory.BIN_ProductAllocationOut Y
		ON    X.RelevanceNo=Y.AllocationOutNoIF
		WHERE 
			X.RelevanceNo = #AllocationOutNoIF#
        AND NOT EXISTS (
            SELECT 1
            FROM Inventory.BIN_ProductBatchInOutDetail E
			WHERE
			    E.RelevanceNo  = X.RelevanceNo
			AND E.BIN_InventoryInfoID = X.BIN_InventoryInfoID
			AND E.BIN_LogicInventoryInfoID = X.BIN_LogicInventoryInfoID
            AND E.BIN_ProductVendorID = X.BIN_ProductVendorID

            AND E.CostPrice IS NULL
        )
		GROUP BY  Y.BIN_ProductAllocationOutID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID	
    </select>
    
       <!-- 修改调出单单明细表的总成本 -->
   <update id="updateProductAllocationOutDetail" parameterClass="java.util.HashMap">
       <![CDATA[
            UPDATE
                 Inventory.BIN_ProductAllocationOutDetail
            SET 
                TotalCostPrice=#TotalCostPrice#,
                UpdateTime = GETDATE(),
                UpdatedBy = #UpdatedBy#,
                UpdatePGM = #UpdatePGM#,
                ModifyCount = ModifyCount+1
            WHERE
			    BIN_ProductAllocationOutID = #BIN_ProductAllocationOutID#
                AND BIN_ProductVendorID = #BIN_ProductVendorID#
                AND BIN_InventoryInfoID = #BIN_InventoryInfoID#
                AND BIN_LogicInventoryInfoID=#BIN_LogicInventoryInfoID#
          ]]>      
    </update>
    
         <!-- 调入单单据号找到的入出库批次明细成本汇总数据 -->
    <select id="getProductInfoListByAllocationInIDNum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT
		    Y.BIN_ProductAllocationInID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID,
		    SUM(X.Quantity*X.CostPrice) AS TotalCostPrice
		FROM
			  Inventory.BIN_ProductBatchInOutDetail X
		LEFT JOIN  
		      Inventory.BIN_ProductAllocationIn Y
		ON    X.RelevanceNo = Y.AllocationInNoIF
		WHERE 
			X.RelevanceNo = #AllocationInNoIF#
        AND NOT EXISTS (
            SELECT 1
            FROM Inventory.BIN_ProductBatchInOutDetail E
			WHERE
			    E.RelevanceNo  = X.RelevanceNo
			AND E.BIN_InventoryInfoID = X.BIN_InventoryInfoID
			AND E.BIN_LogicInventoryInfoID = X.BIN_LogicInventoryInfoID
            AND E.BIN_ProductVendorID = X.BIN_ProductVendorID

            AND E.CostPrice IS NULL
        )
		GROUP BY  Y.BIN_ProductAllocationInID,
			X.RelevanceNo,
			X.BIN_ProductVendorID,
			X.BIN_InventoryInfoID,
			X.BIN_LogicInventoryInfoID	
    </select>
    
       <!-- 修改调入单单明细表的总成本 -->
   <update id="updateProductAllocationInDetail" parameterClass="java.util.HashMap">
       <![CDATA[
            UPDATE
                 Inventory.BIN_ProductAllocationInDetail
            SET 
                TotalCostPrice=#TotalCostPrice#,
                UpdateTime = GETDATE(),
                UpdatedBy = #UpdatedBy#,
                UpdatePGM = #UpdatePGM#,
                ModifyCount = ModifyCount+1
            WHERE
			    BIN_ProductAllocationInID = #BIN_ProductAllocationInID#
                AND BIN_ProductVendorID = #BIN_ProductVendorID#
                AND BIN_InventoryInfoID = #BIN_InventoryInfoID#
                AND BIN_LogicInventoryInfoID=#BIN_LogicInventoryInfoID#
          ]]>      
    </update>
    
</sqlMap>
